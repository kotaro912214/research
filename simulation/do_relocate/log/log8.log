excute Modified var:.. j = 7
excute 13:46:22.820248 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:22.824207 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 1, 0)
excute 13:46:22.827229 line       556                     i = i_j[0]
excute 13:46:22.831188 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:22.834211 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:22.838175 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 1, 0)
excute 13:46:22.842191 line       556                     i = i_j[0]
excute 13:46:22.846150 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:22.851135 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:22.855126 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 1, 0)
excute 13:46:22.858117 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:46:22.862106 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:22.866096 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:22.870085 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 1, 0)
excute 13:46:22.874074 line       556                     i = i_j[0]
excute 13:46:22.878064 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:22.882053 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:22.886075 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 1, 0)
excute 13:46:22.890064 line       556                     i = i_j[0]
excute 13:46:22.894020 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:22.897042 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:22.901020 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 1, 0)
excute 13:46:22.904025 line       556                     i = i_j[0]
excute 13:46:22.908003 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:22.911006 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:22.914965 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 1, 0)
excute 13:46:22.917989 line       556                     i = i_j[0]
excute 13:46:22.921947 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:22.924968 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:22.928930 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 1, 0)
excute 13:46:22.931949 line       556                     i = i_j[0]
excute 13:46:22.935908 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:22.938931 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:22.942916 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 1, 0)
excute 13:46:22.947878 line       556                     i = i_j[0]
excute 13:46:22.952864 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:22.957852 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:22.961838 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 1, 0)
excute 13:46:22.965829 line       556                     i = i_j[0]
excute 13:46:22.969833 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:22.973842 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:22.976834 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 1, 0)
excute 13:46:22.980819 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:46:22.983811 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:22.987801 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:22.991758 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 1, 0)
excute 13:46:22.994785 line       556                     i = i_j[0]
excute 13:46:22.998740 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:23.001763 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.005725 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 1, 0)
excute 13:46:23.009714 line       556                     i = i_j[0]
excute 13:46:23.013701 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:23.017698 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.021681 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 1, 0)
excute 13:46:23.025671 line       556                     i = i_j[0]
excute 13:46:23.029659 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:23.033649 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.037637 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 1, 0)
excute 13:46:23.042626 line       556                     i = i_j[0]
excute 13:46:23.046614 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:23.050634 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.057584 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 1, 0)
excute 13:46:23.063567 line       556                     i = i_j[0]
excute 13:46:23.069552 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:23.074540 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.080521 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 1, 0)
excute 13:46:23.086530 line       556                     i = i_j[0]
excute 13:46:23.092491 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:23.095513 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.099470 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 1, 0)
excute 13:46:23.102494 line       556                     i = i_j[0]
excute 13:46:23.108448 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:23.111469 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.115429 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 0)
excute 13:46:23.118451 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:46:23.123407 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:23.126430 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.130422 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:46:23.134412 line       556                     i = i_j[0]
excute 13:46:23.138366 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:23.141392 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.145381 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 0)
excute 13:46:23.149372 line       556                     i = i_j[0]
excute 13:46:23.153326 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:23.156352 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.161307 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 0)
excute 13:46:23.164328 line       556                     i = i_j[0]
excute 13:46:23.168289 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:23.171310 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.175267 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 0)
excute 13:46:23.178291 line       556                     i = i_j[0]
excute 13:46:23.182281 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:23.185272 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.189265 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 0)
excute 13:46:23.192253 line       556                     i = i_j[0]
excute 13:46:23.196244 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:23.200232 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.204192 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 0)
excute 13:46:23.207214 line       556                     i = i_j[0]
excute 13:46:23.211173 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:23.214194 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.218154 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 0)
excute 13:46:23.221179 line       556                     i = i_j[0]
excute 13:46:23.225136 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:23.228158 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.232118 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 1, 1)
excute 13:46:23.235139 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:46:23.239097 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:23.243093 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.246111 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 1, 1)
excute 13:46:23.250100 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:46:23.254057 line       557                     j = i_j[1]
excute 13:46:23.260043 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.265029 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 1, 1)
excute 13:46:23.270016 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:46:23.275004 line       557                     j = i_j[1]
excute 13:46:23.279989 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.283978 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 1)
excute 13:46:23.286971 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:46:23.294948 line       557                     j = i_j[1]
excute 13:46:23.302928 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.306917 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 2, 0)
excute 13:46:23.313898 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:46:23.317887 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:23.321876 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.325866 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 2, 0)
excute 13:46:23.333857 line       556                     i = i_j[0]
excute 13:46:23.340827 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:23.345814 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.349809 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 2, 0)
excute 13:46:23.352795 line       556                     i = i_j[0]
excute 13:46:23.357781 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:23.362769 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.368764 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 2, 0)
excute 13:46:23.372776 line       556                     i = i_j[0]
excute 13:46:23.376731 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:23.383712 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.387699 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 2, 0)
excute 13:46:23.395706 line       556                     i = i_j[0]
excute 13:46:23.399669 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:23.403657 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.407648 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 2, 0)
excute 13:46:23.410640 line       556                     i = i_j[0]
excute 13:46:23.414629 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:23.418618 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.422608 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 2, 0)
excute 13:46:23.426597 line       556                     i = i_j[0]
excute 13:46:23.430587 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:23.434574 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.437598 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 2, 0)
excute 13:46:23.441587 line       556                     i = i_j[0]
excute 13:46:23.445546 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:23.449535 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.453525 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 2, 1)
excute 13:46:23.457513 line       556                     i = i_j[0]
excute 13:46:23.463498 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:23.470479 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.475468 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 12, 0)
excute 13:46:23.479463 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:46:23.483443 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:23.488433 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.492422 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 12, 0)
excute 13:46:23.495448 line       556                     i = i_j[0]
excute 13:46:23.499433 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:23.503392 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.507382 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 12, 0)
excute 13:46:23.511372 line       556                     i = i_j[0]
excute 13:46:23.515362 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:23.519379 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.523346 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 12, 0)
excute 13:46:23.526330 line       556                     i = i_j[0]
excute 13:46:23.531317 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:23.536303 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.539297 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 12, 0)
excute 13:46:23.543285 line       556                     i = i_j[0]
excute 13:46:23.547274 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:23.551302 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.555254 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 12, 0)
excute 13:46:23.558275 line       556                     i = i_j[0]
excute 13:46:23.562233 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:23.565256 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.569215 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 12, 0)
excute 13:46:23.574233 line       556                     i = i_j[0]
excute 13:46:23.578192 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:23.581214 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.585173 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 12, 0)
excute 13:46:23.588197 line       556                     i = i_j[0]
excute 13:46:23.592157 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:23.595177 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.599137 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 12, 1)
excute 13:46:23.602157 line       556                     i = i_j[0]
excute 13:46:23.606116 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:23.610106 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:23.614097 line       555                 for i_j in i_j_list:
excute 13:46:23.618083 line       581             self.write_matrix(
excute 13:46:23.622073 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:46:23.626095 line       583                 result_file_path,
excute 13:46:23.629086 line       584                 mode='a'
excute 13:46:23.636037 line       488         for t in time_steps:
excute Modified var:.. t = 99
excute 13:46:23.640026 line       489             if (t != self.TIME + 1):
excute 13:46:23.644015 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:46:23.648004 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:46:23.651994 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:46:23.655986 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:23.659972 line       494                         if (i == j):
excute 13:46:23.663962 line       495                             continue
excute 13:46:23.667952 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:23.673939 line       494                         if (i == j):
excute 13:46:23.679941 line       496                         i_j_list.append((
excute 13:46:23.683914 line       497                             i, j,
excute 13:46:23.688898 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:23.696877 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0)]
excute 13:46:23.707851 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:23.714826 line       494                         if (i == j):
excute 13:46:23.723802 line       496                         i_j_list.append((
excute 13:46:23.729787 line       497                             i, j,
excute 13:46:23.733775 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:23.736766 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0)]
excute 13:46:23.741754 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:23.747773 line       494                         if (i == j):
excute 13:46:23.754719 line       496                         i_j_list.append((
excute 13:46:23.759708 line       497                             i, j,
excute 13:46:23.765725 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:23.769679 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1)]
excute 13:46:23.774670 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:23.782649 line       494                         if (i == j):
excute 13:46:23.785668 line       496                         i_j_list.append((
excute 13:46:23.790632 line       497                             i, j,
excute 13:46:23.794612 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:23.797636 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1)]
excute 13:46:23.800627 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:23.804590 line       494                         if (i == j):
excute 13:46:23.808583 line       496                         i_j_list.append((
excute 13:46:23.811600 line       497                             i, j,
excute 13:46:23.814594 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:23.818580 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0)]
excute 13:46:23.822538 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:23.826528 line       494                         if (i == j):
excute 13:46:23.829550 line       496                         i_j_list.append((
excute 13:46:23.833508 line       497                             i, j,
excute 13:46:23.836532 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:23.839524 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0)]
excute 13:46:23.842515 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:23.846474 line       494                         if (i == j):
excute 13:46:23.850464 line       496                         i_j_list.append((
excute 13:46:23.853486 line       497                             i, j,
excute 13:46:23.857445 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:23.860438 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0)]
excute 13:46:23.864428 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:23.868417 line       494                         if (i == j):
excute 13:46:23.871409 line       496                         i_j_list.append((
excute 13:46:23.875397 line       497                             i, j,
excute 13:46:23.879387 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:23.884373 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0)]
excute 13:46:23.888388 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:23.891387 line       494                         if (i == j):
excute 13:46:23.895343 line       496                         i_j_list.append((
excute 13:46:23.898366 line       497                             i, j,
excute 13:46:23.902324 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:23.905316 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0)]
excute 13:46:23.909308 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:23.912329 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:46:23.916319 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:23.919311 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:23.926261 line       494                         if (i == j):
excute 13:46:23.933241 line       496                         i_j_list.append((
excute 13:46:23.937232 line       497                             i, j,
excute 13:46:23.941222 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:23.944213 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0)]
excute 13:46:23.948202 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:23.952191 line       494                         if (i == j):
excute 13:46:23.956212 line       495                             continue
excute 13:46:23.960200 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:23.963197 line       494                         if (i == j):
excute 13:46:23.966184 line       496                         i_j_list.append((
excute 13:46:23.970174 line       497                             i, j,
excute 13:46:23.974163 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:23.977156 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0)]
excute 13:46:23.981114 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:23.985105 line       494                         if (i == j):
excute 13:46:23.990090 line       496                         i_j_list.append((
excute 13:46:23.994081 line       497                             i, j,
excute 13:46:23.997072 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.001060 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1)]
excute 13:46:24.004083 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:24.008073 line       494                         if (i == j):
excute 13:46:24.012032 line       496                         i_j_list.append((
excute 13:46:24.015027 line       497                             i, j,
excute 13:46:24.018017 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.022007 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1)]
excute 13:46:24.025993 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:24.028988 line       494                         if (i == j):
excute 13:46:24.032976 line       496                         i_j_list.append((
excute 13:46:24.035969 line       497                             i, j,
excute 13:46:24.039958 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.042950 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0)]
excute 13:46:24.045942 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:24.049932 line       494                         if (i == j):
excute 13:46:24.053920 line       496                         i_j_list.append((
excute 13:46:24.056942 line       497                             i, j,
excute 13:46:24.060900 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.063924 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0)]
excute 13:46:24.066918 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:24.070906 line       494                         if (i == j):
excute 13:46:24.074865 line       496                         i_j_list.append((
excute 13:46:24.077886 line       497                             i, j,
excute 13:46:24.080878 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.083870 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0)]
excute 13:46:24.087850 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:24.091820 line       494                         if (i == j):
excute 13:46:24.096805 line       496                         i_j_list.append((
excute 13:46:24.099798 line       497                             i, j,
excute 13:46:24.103786 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.106780 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0)]
excute 13:46:24.109772 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:24.113762 line       494                         if (i == j):
excute 13:46:24.116753 line       496                         i_j_list.append((
excute 13:46:24.120742 line       497                             i, j,
excute 13:46:24.124732 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.127723 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0)]
excute 13:46:24.131713 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:24.135701 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:46:24.139690 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:24.142683 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:24.146672 line       494                         if (i == j):
excute 13:46:24.150662 line       496                         i_j_list.append((
excute 13:46:24.154651 line       497                             i, j,
excute 13:46:24.157673 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.161632 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0)]
excute 13:46:24.164655 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:24.168627 line       494                         if (i == j):
excute 13:46:24.171637 line       496                         i_j_list.append((
excute 13:46:24.175593 line       497                             i, j,
excute 13:46:24.178585 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.182576 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0)]
excute 13:46:24.185598 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:24.189557 line       494                         if (i == j):
excute 13:46:24.194546 line       495                             continue
excute 13:46:24.197537 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:24.201526 line       494                         if (i == j):
excute 13:46:24.205516 line       496                         i_j_list.append((
excute 13:46:24.208508 line       497                             i, j,
excute 13:46:24.212496 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.215489 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1)]
excute 13:46:24.219478 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:24.223467 line       494                         if (i == j):
excute 13:46:24.226459 line       496                         i_j_list.append((
excute 13:46:24.230449 line       497                             i, j,
excute 13:46:24.233440 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.237430 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1)]
excute 13:46:24.241419 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:24.245409 line       494                         if (i == j):
excute 13:46:24.249397 line       496                         i_j_list.append((
excute 13:46:24.253387 line       497                             i, j,
excute 13:46:24.257376 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.261366 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0)]
excute 13:46:24.265356 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:24.268351 line       494                         if (i == j):
excute 13:46:24.272336 line       496                         i_j_list.append((
excute 13:46:24.276325 line       497                             i, j,
excute 13:46:24.280345 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.283337 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0)]
excute 13:46:24.288293 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:24.292281 line       494                         if (i == j):
excute 13:46:24.300263 line       496                         i_j_list.append((
excute 13:46:24.306245 line       497                             i, j,
excute 13:46:24.310233 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.317219 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0)]
excute 13:46:24.322202 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:24.325219 line       494                         if (i == j):
excute 13:46:24.334171 line       496                         i_j_list.append((
excute 13:46:24.338161 line       497                             i, j,
excute 13:46:24.343148 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.347136 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0)]
excute 13:46:24.350129 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:24.354118 line       494                         if (i == j):
excute 13:46:24.359106 line       496                         i_j_list.append((
excute 13:46:24.362096 line       497                             i, j,
excute 13:46:24.366101 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.369078 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0)]
excute 13:46:24.373068 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:24.377060 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:46:24.380079 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:24.384037 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:24.390020 line       494                         if (i == j):
excute 13:46:24.397002 line       496                         i_j_list.append((
excute 13:46:24.403983 line       497                             i, j,
excute 13:46:24.407972 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.414953 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0)]
excute 13:46:24.417979 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:24.421937 line       494                         if (i == j):
excute 13:46:24.425925 line       496                         i_j_list.append((
excute 13:46:24.428953 line       497                             i, j,
excute 13:46:24.431939 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.434931 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0)]
excute 13:46:24.438891 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:24.441917 line       494                         if (i == j):
excute 13:46:24.445876 line       496                         i_j_list.append((
excute 13:46:24.449862 line       497                             i, j,
excute 13:46:24.453851 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.457875 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0)]
excute 13:46:24.460862 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:24.464822 line       494                         if (i == j):
excute 13:46:24.468830 line       495                             continue
excute 13:46:24.471833 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:24.474793 line       494                         if (i == j):
excute 13:46:24.479781 line       496                         i_j_list.append((
excute 13:46:24.482804 line       497                             i, j,
excute 13:46:24.485795 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.488787 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1)]
excute 13:46:24.492745 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:24.495770 line       494                         if (i == j):
excute 13:46:24.499727 line       496                         i_j_list.append((
excute 13:46:24.504714 line       497                             i, j,
excute 13:46:24.508705 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.511696 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0)]
excute 13:46:24.515686 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:24.519678 line       494                         if (i == j):
excute 13:46:24.523667 line       496                         i_j_list.append((
excute 13:46:24.526686 line       497                             i, j,
excute 13:46:24.529681 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.533670 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0)]
excute 13:46:24.536660 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:24.540656 line       494                         if (i == j):
excute 13:46:24.543611 line       496                         i_j_list.append((
excute 13:46:24.547601 line       497                             i, j,
excute 13:46:24.550593 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.553584 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0)]
excute 13:46:24.558572 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:24.565552 line       494                         if (i == j):
excute 13:46:24.572541 line       496                         i_j_list.append((
excute 13:46:24.575549 line       497                             i, j,
excute 13:46:24.578548 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.582540 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0)]
excute 13:46:24.585533 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:24.589495 line       494                         if (i == j):
excute 13:46:24.592510 line       496                         i_j_list.append((
excute 13:46:24.595504 line       497                             i, j,
excute 13:46:24.599492 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.602484 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0)]
excute 13:46:24.606443 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:24.610434 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:46:24.613455 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:24.617413 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:24.621404 line       494                         if (i == j):
excute 13:46:24.625393 line       496                         i_j_list.append((
excute 13:46:24.628414 line       497                             i, j,
excute 13:46:24.631406 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.635364 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0)]
excute 13:46:24.639355 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:24.643345 line       494                         if (i == j):
excute 13:46:24.647334 line       496                         i_j_list.append((
excute 13:46:24.651324 line       497                             i, j,
excute 13:46:24.655314 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.658305 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0)]
excute 13:46:24.662294 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:24.666282 line       494                         if (i == j):
excute 13:46:24.670272 line       496                         i_j_list.append((
excute 13:46:24.674261 line       497                             i, j,
excute 13:46:24.677255 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.681246 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0)]
excute 13:46:24.684270 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:24.688224 line       494                         if (i == j):
excute 13:46:24.691246 line       496                         i_j_list.append((
excute 13:46:24.695236 line       497                             i, j,
excute 13:46:24.698196 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.702188 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1)]
excute 13:46:24.705179 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:24.710164 line       494                         if (i == j):
excute 13:46:24.715167 line       495                             continue
excute 13:46:24.718175 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:24.721169 line       494                         if (i == j):
excute 13:46:24.725126 line       496                         i_j_list.append((
excute 13:46:24.728147 line       497                             i, j,
excute 13:46:24.731139 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.735130 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0)]
excute 13:46:24.738121 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:24.742080 line       494                         if (i == j):
excute 13:46:24.746068 line       496                         i_j_list.append((
excute 13:46:24.749092 line       497                             i, j,
excute 13:46:24.752084 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.756043 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0)]
excute 13:46:24.760031 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:24.763022 line       494                         if (i == j):
excute 13:46:24.767014 line       496                         i_j_list.append((
excute 13:46:24.770006 line       497                             i, j,
excute 13:46:24.773995 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.777985 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0)]
excute 13:46:24.780977 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:24.785962 line       494                         if (i == j):
excute 13:46:24.794938 line       496                         i_j_list.append((
excute 13:46:24.800924 line       497                             i, j,
excute 13:46:24.803945 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.807935 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0)]
excute 13:46:24.812923 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:24.816913 line       494                         if (i == j):
excute 13:46:24.820870 line       496                         i_j_list.append((
excute 13:46:24.824860 line       497                             i, j,
excute 13:46:24.827849 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.831841 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0)]
excute 13:46:24.834833 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:24.838822 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:46:24.841814 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:24.845803 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:24.849805 line       494                         if (i == j):
excute 13:46:24.852785 line       496                         i_j_list.append((
excute 13:46:24.856774 line       497                             i, j,
excute 13:46:24.860763 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.863755 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0)]
excute 13:46:24.866747 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:24.871735 line       494                         if (i == j):
excute 13:46:24.875734 line       496                         i_j_list.append((
excute 13:46:24.878713 line       497                             i, j,
excute 13:46:24.881707 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.885728 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0)]
excute 13:46:24.888722 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:24.892679 line       494                         if (i == j):
excute 13:46:24.896678 line       496                         i_j_list.append((
excute 13:46:24.899689 line       497                             i, j,
excute 13:46:24.902681 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.905673 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0)]
excute 13:46:24.909632 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:24.913622 line       494                         if (i == j):
excute 13:46:24.917612 line       496                         i_j_list.append((
excute 13:46:24.920636 line       497                             i, j,
excute 13:46:24.923625 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.927596 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1)]
excute 13:46:24.930607 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:24.934576 line       494                         if (i == j):
excute 13:46:24.937589 line       496                         i_j_list.append((
excute 13:46:24.941546 line       497                             i, j,
excute 13:46:24.944574 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.948528 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1)]
excute 13:46:24.952550 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:24.956507 line       494                         if (i == j):
excute 13:46:24.960500 line       495                             continue
excute 13:46:24.966480 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:24.971465 line       494                         if (i == j):
excute 13:46:24.975456 line       496                         i_j_list.append((
excute 13:46:24.979446 line       497                             i, j,
excute 13:46:24.982438 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:24.986427 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0)]
excute 13:46:24.990417 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:24.994407 line       494                         if (i == j):
excute 13:46:24.998395 line       496                         i_j_list.append((
excute 13:46:25.001388 line       497                             i, j,
excute 13:46:25.005377 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.009365 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0)]
excute 13:46:25.012360 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:25.018343 line       494                         if (i == j):
excute 13:46:25.022331 line       496                         i_j_list.append((
excute 13:46:25.025353 line       497                             i, j,
excute 13:46:25.028345 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.032333 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0)]
excute 13:46:25.035327 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:25.039317 line       494                         if (i == j):
excute 13:46:25.043275 line       496                         i_j_list.append((
excute 13:46:25.047263 line       497                             i, j,
excute 13:46:25.050258 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.053249 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0)]
excute 13:46:25.057237 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:25.063248 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:46:25.070366 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:25.074374 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:25.077383 line       494                         if (i == j):
excute 13:46:25.081343 line       496                         i_j_list.append((
excute 13:46:25.085332 line       497                             i, j,
excute 13:46:25.088324 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.092313 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (6, 0, 1, 0)]
excute 13:46:25.095306 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:25.099296 line       494                         if (i == j):
excute 13:46:25.103285 line       496                         i_j_list.append((
excute 13:46:25.106276 line       497                             i, j,
excute 13:46:25.110263 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.113257 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (6, 0, 1, 0), (6, 1, 1, 0)]
excute 13:46:25.117247 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:25.122233 line       494                         if (i == j):
excute 13:46:25.126221 line       496                         i_j_list.append((
excute 13:46:25.129247 line       497                             i, j,
excute 13:46:25.132236 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.136226 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0)]
excute 13:46:25.140185 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:25.144176 line       494                         if (i == j):
excute 13:46:25.148164 line       496                         i_j_list.append((
excute 13:46:25.151156 line       497                             i, j,
excute 13:46:25.155146 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.159146 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 1)]
excute 13:46:25.162127 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:25.166116 line       494                         if (i == j):
excute 13:46:25.170106 line       496                         i_j_list.append((
excute 13:46:25.173098 line       497                             i, j,
excute 13:46:25.177087 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.180079 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 1), (6, 4, 1, 1)]
excute 13:46:25.184068 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:25.188058 line       494                         if (i == j):
excute 13:46:25.192045 line       496                         i_j_list.append((
excute 13:46:25.196036 line       497                             i, j,
excute 13:46:25.200024 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.203018 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 1), (6, 4, 1, 1), (6, 5, 1, 0)]
excute 13:46:25.206010 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:25.209998 line       494                         if (i == j):
excute 13:46:25.213986 line       495                             continue
excute 13:46:25.217977 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:25.221966 line       494                         if (i == j):
excute 13:46:25.227949 line       496                         i_j_list.append((
excute 13:46:25.231939 line       497                             i, j,
excute 13:46:25.234931 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.238921 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 1), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0)]
excute 13:46:25.241914 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:25.245901 line       494                         if (i == j):
excute 13:46:25.249892 line       496                         i_j_list.append((
excute 13:46:25.253882 line       497                             i, j,
excute 13:46:25.257871 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.261860 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 1), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0)]
excute 13:46:25.265858 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:25.268840 line       494                         if (i == j):
excute 13:46:25.272830 line       496                         i_j_list.append((
excute 13:46:25.276819 line       497                             i, j,
excute 13:46:25.279811 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.283807 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 1), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0)]
excute 13:46:25.286793 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:25.290783 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:46:25.293774 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:25.297764 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:25.300755 line       494                         if (i == j):
excute 13:46:25.304745 line       496                         i_j_list.append((
excute 13:46:25.307736 line       497                             i, j,
excute 13:46:25.310729 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.314717 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 1), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0)]
excute 13:46:25.317710 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:25.321732 line       494                         if (i == j):
excute 13:46:25.329679 line       496                         i_j_list.append((
excute 13:46:25.341647 line       497                             i, j,
excute 13:46:25.349624 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.352616 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 1), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0)]
excute 13:46:25.356606 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:25.362591 line       494                         if (i == j):
excute 13:46:25.366613 line       496                         i_j_list.append((
excute 13:46:25.369570 line       497                             i, j,
excute 13:46:25.373561 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.376552 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 1), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0)]
excute 13:46:25.380541 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:25.384530 line       494                         if (i == j):
excute 13:46:25.389518 line       496                         i_j_list.append((
excute 13:46:25.393506 line       497                             i, j,
excute 13:46:25.396498 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.399491 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 1), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1)]
excute 13:46:25.403480 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:25.407469 line       494                         if (i == j):
excute 13:46:25.410461 line       496                         i_j_list.append((
excute 13:46:25.414450 line       497                             i, j,
excute 13:46:25.417443 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.420434 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 1), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 1)]
excute 13:46:25.424423 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:25.427415 line       494                         if (i == j):
excute 13:46:25.433403 line       496                         i_j_list.append((
excute 13:46:25.436392 line       497                             i, j,
excute 13:46:25.440382 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.443373 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 1), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 1), (7, 5, 0, 0)]
excute 13:46:25.446365 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:25.450356 line       494                         if (i == j):
excute 13:46:25.455343 line       496                         i_j_list.append((
excute 13:46:25.459331 line       497                             i, j,
excute 13:46:25.462323 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.466313 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 1), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0)]
excute 13:46:25.470302 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:25.474295 line       494                         if (i == j):
excute 13:46:25.478281 line       495                             continue
excute 13:46:25.481273 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:25.484265 line       494                         if (i == j):
excute 13:46:25.489251 line       496                         i_j_list.append((
excute 13:46:25.492245 line       497                             i, j,
excute 13:46:25.495237 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.499226 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 1), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0)]
excute 13:46:25.502217 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:25.506207 line       494                         if (i == j):
excute 13:46:25.511195 line       496                         i_j_list.append((
excute 13:46:25.515184 line       497                             i, j,
excute 13:46:25.518175 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.522164 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 1), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0)]
excute 13:46:25.525155 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:25.529146 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:46:25.532137 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:25.538123 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:25.541113 line       494                         if (i == j):
excute 13:46:25.545102 line       496                         i_j_list.append((
excute 13:46:25.549092 line       497                             i, j,
excute 13:46:25.552084 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.556074 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 1), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0)]
excute 13:46:25.559066 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:25.563055 line       494                         if (i == j):
excute 13:46:25.567044 line       496                         i_j_list.append((
excute 13:46:25.571033 line       497                             i, j,
excute 13:46:25.575021 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.578013 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 1), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0)]
excute 13:46:25.581005 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:25.584994 line       494                         if (i == j):
excute 13:46:25.588984 line       496                         i_j_list.append((
excute 13:46:25.591976 line       497                             i, j,
excute 13:46:25.594968 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.598957 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 1), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0)]
excute 13:46:25.601950 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:25.605940 line       494                         if (i == j):
excute 13:46:25.609930 line       496                         i_j_list.append((
excute 13:46:25.612921 line       497                             i, j,
excute 13:46:25.615912 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.619901 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 1), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 1)]
excute 13:46:25.624890 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:25.628878 line       494                         if (i == j):
excute 13:46:25.632867 line       496                         i_j_list.append((
excute 13:46:25.636857 line       497                             i, j,
excute 13:46:25.640845 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.643837 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 1), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 1), (8, 4, 2, 1)]
excute 13:46:25.646829 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:25.650818 line       494                         if (i == j):
excute 13:46:25.654808 line       496                         i_j_list.append((
excute 13:46:25.658797 line       497                             i, j,
excute 13:46:25.661791 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.664783 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 1), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 1), (8, 4, 2, 1), (8, 5, 2, 0)]
excute 13:46:25.668772 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:25.672773 line       494                         if (i == j):
excute 13:46:25.676751 line       496                         i_j_list.append((
excute 13:46:25.680740 line       497                             i, j,
excute 13:46:25.684730 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.687721 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 1), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 1), (8, 4, 2, 1), (8, 5, 2, 0), (8, 6, 2, 0)]
excute 13:46:25.691711 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:25.695700 line       494                         if (i == j):
excute 13:46:25.700688 line       496                         i_j_list.append((
excute 13:46:25.703679 line       497                             i, j,
excute 13:46:25.707668 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.711657 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 1), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 1), (8, 4, 2, 1), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0)]
excute 13:46:25.715647 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:25.719637 line       494                         if (i == j):
excute 13:46:25.723624 line       495                             continue
excute 13:46:25.727615 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:25.730607 line       494                         if (i == j):
excute 13:46:25.734601 line       496                         i_j_list.append((
excute 13:46:25.737588 line       497                             i, j,
excute 13:46:25.742573 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.746562 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 1), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 1), (8, 4, 2, 1), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0)]
excute 13:46:25.749555 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:25.754542 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:46:25.758532 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:25.762532 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:25.766509 line       494                         if (i == j):
excute 13:46:25.770499 line       496                         i_j_list.append((
excute 13:46:25.773490 line       497                             i, j,
excute 13:46:25.776482 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.779475 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 1), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 1), (8, 4, 2, 1), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 0)]
excute 13:46:25.783464 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:25.786455 line       494                         if (i == j):
excute 13:46:25.791443 line       496                         i_j_list.append((
excute 13:46:25.794434 line       497                             i, j,
excute 13:46:25.797427 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.800419 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 1), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 1), (8, 4, 2, 1), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 0), (9, 1, 1, 0)]
excute 13:46:25.803410 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:25.807400 line       494                         if (i == j):
excute 13:46:25.811394 line       496                         i_j_list.append((
excute 13:46:25.814414 line       497                             i, j,
excute 13:46:25.817407 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.821395 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 1), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 1), (8, 4, 2, 1), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0)]
excute 13:46:25.824386 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:25.828378 line       494                         if (i == j):
excute 13:46:25.832340 line       496                         i_j_list.append((
excute 13:46:25.835357 line       497                             i, j,
excute 13:46:25.839346 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.843338 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 1), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 1), (8, 4, 2, 1), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 1)]
excute 13:46:25.847294 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:25.850317 line       494                         if (i == j):
excute 13:46:25.854307 line       496                         i_j_list.append((
excute 13:46:25.858296 line       497                             i, j,
excute 13:46:25.861264 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.865279 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 1), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 1), (8, 4, 2, 1), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 1), (9, 4, 1, 1)]
excute 13:46:25.868270 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:25.872227 line       494                         if (i == j):
excute 13:46:25.876216 line       496                         i_j_list.append((
excute 13:46:25.879208 line       497                             i, j,
excute 13:46:25.882200 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.886191 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 1), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 1), (8, 4, 2, 1), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 1), (9, 4, 1, 1), (9, 5, 1, 0)]
excute 13:46:25.889183 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:25.894169 line       494                         if (i == j):
excute 13:46:25.897193 line       496                         i_j_list.append((
excute 13:46:25.901181 line       497                             i, j,
excute 13:46:25.904173 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.907135 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 1), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 1), (8, 4, 2, 1), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 1), (9, 4, 1, 1), (9, 5, 1, 0), (9, 6, 1, 0)]
excute 13:46:25.915113 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:25.919102 line       494                         if (i == j):
excute 13:46:25.922125 line       496                         i_j_list.append((
excute 13:46:25.926116 line       497                             i, j,
excute 13:46:25.929108 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.932100 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 1), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 1), (8, 4, 2, 1), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 1), (9, 4, 1, 1), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0)]
excute 13:46:25.936057 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:25.939047 line       494                         if (i == j):
excute 13:46:25.943037 line       496                         i_j_list.append((
excute 13:46:25.949026 line       497                             i, j,
excute 13:46:25.952013 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:25.956036 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 1), (5, 4, -2, 1), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 1), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 1), (8, 4, 2, 1), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 1), (9, 4, 1, 1), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0)]
excute 13:46:25.959026 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:25.962986 line       494                         if (i == j):
excute 13:46:25.966975 line       495                             continue
excute 13:46:25.970975 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:25.973987 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:46:25.976980 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 0), (5, 9, -2, 0), (0, 3, -2, 1), (0, 4, -2, 1), (5, 3, -2, 1), (5, 4, -2, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (4, 3, 0, 1), (7, 3, 0, 1), (7, 4, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0), (2, 3, 1, 1), (2, 4, 1, 1), (6, 3, 1, 1), (6, 4, 1, 1), (9, 3, 1, 1), (9, 4, 1, 1), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (8, 3, 2, 1), (8, 4, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (3, 4, 10, 1)]
excute 13:46:25.980968 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:46:25.984940 line       505                     if (self.RELOCATE):
excute 13:46:25.988921 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:46:25.991938 line       505                     if (self.RELOCATE):
excute 13:46:25.995897 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:46:25.998919 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, -2, 0)
excute 13:46:26.002909 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:46:26.005901 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:26.010859 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.014846 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, -2, 0)
excute 13:46:26.018867 line       556                     i = i_j[0]
excute 13:46:26.022825 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:26.025849 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.029844 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, -2, 0)
excute 13:46:26.032831 line       556                     i = i_j[0]
excute 13:46:26.036820 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:26.039810 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.043770 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, -2, 0)
excute 13:46:26.047761 line       556                     i = i_j[0]
excute 13:46:26.051750 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:26.055740 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.059728 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, -2, 0)
excute 13:46:26.063721 line       556                     i = i_j[0]
excute 13:46:26.066709 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:26.070698 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.075686 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, -2, 0)
excute 13:46:26.078676 line       556                     i = i_j[0]
excute 13:46:26.082665 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:26.086656 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.090643 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, -2, 0)
excute 13:46:26.093637 line       556                     i = i_j[0]
excute 13:46:26.098622 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:26.101616 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.105606 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, -2, 0)
excute 13:46:26.108597 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:46:26.112584 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:26.115578 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.119567 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, -2, 0)
excute 13:46:26.123556 line       556                     i = i_j[0]
excute 13:46:26.127547 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:26.131536 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.136521 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, -2, 0)
excute 13:46:26.139514 line       556                     i = i_j[0]
excute 13:46:26.143504 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:26.147493 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.152478 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, -2, 0)
excute 13:46:26.155470 line       556                     i = i_j[0]
excute 13:46:26.159460 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:26.162451 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.166440 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, -2, 0)
excute 13:46:26.169432 line       556                     i = i_j[0]
excute 13:46:26.173422 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:26.176413 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.180403 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, -2, 0)
excute 13:46:26.183394 line       556                     i = i_j[0]
excute 13:46:26.187385 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:26.190376 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.193368 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, -2, 0)
excute 13:46:26.197357 line       556                     i = i_j[0]
excute 13:46:26.201347 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:26.204338 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.208328 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, -2, 1)
excute 13:46:26.211354 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:46:26.215343 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:26.218333 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.222323 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, -2, 1)
excute 13:46:26.226282 line       556                     i = i_j[0]
excute 13:46:26.229305 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:26.233293 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.237252 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 110
excute 13:46:26.240243 line       560                         if (t_tmp > self.TIME):
excute 13:46:26.244242 line       563                             if (available_vhecles[i][t] == 0):
excute 13:46:26.247227 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:46:26.250216 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 127
excute 13:46:26.255235 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:46:26.259192 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, -2, 1)
excute 13:46:26.263185 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:46:26.266206 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:26.270194 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.274163 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, -2, 1)
excute 13:46:26.278142 line       556                     i = i_j[0]
excute 13:46:26.281165 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:26.285154 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.288148 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 0, 0)
excute 13:46:26.292136 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:46:26.296095 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:26.300084 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.303106 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 0, 0)
excute 13:46:26.307065 line       556                     i = i_j[0]
excute 13:46:26.310088 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:26.314046 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.324019 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 0, 0)
excute 13:46:26.335991 line       556                     i = i_j[0]
excute 13:46:26.345961 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:26.352942 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.361918 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 0, 0)
excute 13:46:26.365909 line       556                     i = i_j[0]
excute 13:46:26.370894 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:26.377875 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.383860 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 0, 0)
excute 13:46:26.391840 line       556                     i = i_j[0]
excute 13:46:26.395830 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:26.401811 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.405805 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 0, 0)
excute 13:46:26.409792 line       556                     i = i_j[0]
excute 13:46:26.419765 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:26.436718 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.448688 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 0, 0)
excute 13:46:26.452677 line       556                     i = i_j[0]
excute 13:46:26.459658 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:26.472622 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.483593 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 0, 0)
excute 13:46:26.488579 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:46:26.496559 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:26.503539 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.511519 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 0, 0)
excute 13:46:26.518499 line       556                     i = i_j[0]
excute 13:46:26.524486 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:26.530467 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.537449 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 0, 0)
excute 13:46:26.542435 line       556                     i = i_j[0]
excute 13:46:26.550416 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:26.555401 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.564378 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 0, 0)
excute 13:46:26.571358 line       556                     i = i_j[0]
excute 13:46:26.578340 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:26.586319 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.593313 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 0, 0)
excute 13:46:26.601278 line       556                     i = i_j[0]
excute 13:46:26.607263 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:26.613246 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.620227 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 0, 0)
excute 13:46:26.628207 line       556                     i = i_j[0]
excute 13:46:26.635188 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:26.643166 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.648153 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 0, 0)
excute 13:46:26.654137 line       556                     i = i_j[0]
excute 13:46:26.661119 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:26.669097 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.676078 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 0, 0)
excute 13:46:26.684057 line       556                     i = i_j[0]
excute 13:46:26.689044 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:26.696024 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.704004 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 0, 0)
excute 13:46:26.708991 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:46:26.715972 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:26.722953 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.731930 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 0, 0)
excute 13:46:26.738910 line       556                     i = i_j[0]
excute 13:46:26.744897 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:26.750877 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.757860 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 0, 0)
excute 13:46:26.763843 line       556                     i = i_j[0]
excute 13:46:26.770825 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:26.777805 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.784789 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 0, 0)
excute 13:46:26.790774 line       556                     i = i_j[0]
excute 13:46:26.795760 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:26.798750 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.802739 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 0, 0)
excute 13:46:26.806728 line       556                     i = i_j[0]
excute 13:46:26.809720 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:26.813709 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.817700 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 0, 0)
excute 13:46:26.820691 line       556                     i = i_j[0]
excute 13:46:26.824680 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:26.827672 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.831662 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 0, 0)
excute 13:46:26.834654 line       556                     i = i_j[0]
excute 13:46:26.838644 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:26.841635 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.845625 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 0, 1)
excute 13:46:26.848616 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:46:26.852606 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:26.856595 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.860585 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 0, 1)
excute 13:46:26.864574 line       556                     i = i_j[0]
excute 13:46:26.867566 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:26.871555 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.875559 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 0, 1)
excute 13:46:26.880532 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:46:26.885519 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:26.889509 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.893499 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 0, 1)
excute 13:46:26.897488 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:46:26.900477 line       557                     j = i_j[1]
excute 13:46:26.904467 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.907459 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 0, 1)
excute 13:46:26.911448 line       556                     i = i_j[0]
excute 13:46:26.914440 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:26.917432 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.921421 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 1, 0)
excute 13:46:26.925412 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:46:26.928403 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:26.932392 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.936395 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 1, 0)
excute 13:46:26.939373 line       556                     i = i_j[0]
excute 13:46:26.943363 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:26.946355 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.951344 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 1, 0)
excute 13:46:26.954334 line       556                     i = i_j[0]
excute 13:46:26.959322 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:26.962313 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.966315 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 1, 0)
excute 13:46:26.969294 line       556                     i = i_j[0]
excute 13:46:26.973283 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:26.977272 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.982260 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 1, 0)
excute 13:46:26.986249 line       556                     i = i_j[0]
excute 13:46:26.990240 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:26.993230 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:26.997221 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 1, 0)
excute 13:46:27.000211 line       556                     i = i_j[0]
excute 13:46:27.004201 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:27.007193 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.011182 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 1, 0)
excute 13:46:27.015173 line       556                     i = i_j[0]
excute 13:46:27.019161 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:27.023150 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.027140 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 1, 0)
excute 13:46:27.030131 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:46:27.034121 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:27.038110 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.042114 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 1, 0)
excute 13:46:27.045091 line       556                     i = i_j[0]
excute 13:46:27.049083 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:27.052104 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.056095 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 1, 0)
excute 13:46:27.060083 line       556                     i = i_j[0]
excute 13:46:27.063075 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:27.067064 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.071022 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 1, 0)
excute 13:46:27.074014 line       556                     i = i_j[0]
excute 13:46:27.078004 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:27.080996 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.085984 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 1, 0)
excute 13:46:27.089973 line       556                     i = i_j[0]
excute 13:46:27.093963 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:27.096985 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.100943 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 1, 0)
excute 13:46:27.103965 line       556                     i = i_j[0]
excute 13:46:27.107924 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:27.110947 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.114907 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 1, 0)
excute 13:46:27.117930 line       556                     i = i_j[0]
excute 13:46:27.121918 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:27.124878 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.128867 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 0)
excute 13:46:27.132858 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:46:27.136846 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:27.140836 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.143827 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 0)
excute 13:46:27.147818 line       556                     i = i_j[0]
excute 13:46:27.150808 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:27.154798 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.158790 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:46:27.161810 line       556                     i = i_j[0]
excute 13:46:27.165803 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:27.168793 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.172783 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 0)
excute 13:46:27.175773 line       556                     i = i_j[0]
excute 13:46:27.179733 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:27.182755 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.187742 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 0)
excute 13:46:27.191732 line       556                     i = i_j[0]
excute 13:46:27.195711 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:27.199680 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.203670 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 0)
excute 13:46:27.207657 line       556                     i = i_j[0]
excute 13:46:27.211663 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:27.214669 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.218661 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 0)
excute 13:46:27.221652 line       556                     i = i_j[0]
excute 13:46:27.225610 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:27.228632 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.232591 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 1, 1)
excute 13:46:27.235613 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:46:27.239571 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:27.243562 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.247550 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 1, 1)
excute 13:46:27.250575 line       556                     i = i_j[0]
excute 13:46:27.254564 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:27.257555 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.261547 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 1, 1)
excute 13:46:27.265504 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:46:27.268526 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:27.272517 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.277470 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 113
excute 13:46:27.281473 line       560                         if (t_tmp > self.TIME):
excute 13:46:27.285449 line       563                             if (available_vhecles[i][t] == 0):
excute 13:46:27.292431 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:46:27.295423 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:46:27.301406 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:46:27.305397 line       569                                     available_vhecles[i][t],
excute 13:46:27.311380 line       570                                     available_vhecles[j][t_tmp],
excute 13:46:27.315373 line       571                                     self.S_capacities[j],
excute 13:46:27.318392 line       572                                     demands[t][i][j],
excute 13:46:27.321384 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 3
calc_contract     Starting var:.. available_vhecles_target = -6
calc_contract     Starting var:.. capacity_target = 2
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 99
calc_contract     13:46:27.325375 call       352     def caluculate_contract(
calc_contract     13:46:27.333324 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:46:27.334319 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:46:27.336313 line       362         if (available_vhecles_start >= demand):
calc_contract     13:46:27.337327 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:46:27.338309 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:46:27.338309 line       385         return [can_contract, rsf, rse]
calc_contract     13:46:27.339321 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:46:27.340317 line       575                                 rsf += rsf_tmp
excute 13:46:27.345291 line       576                                 rse += rse_tmp
excute 13:46:27.349280 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
move_cars     Starting var:.. i = 6
move_cars     Starting var:.. j = 3
move_cars     Starting var:.. t = 99
move_cars     Starting var:.. t_tmp = 113
move_cars     Starting var:.. can_contract = 1
move_cars     13:46:27.352272 call       388     def move_cars(
move_cars     13:46:27.357258 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:46:27.359253 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:46:27.360248 line       399         return available_vhecles
move_cars     13:46:27.361247 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -8, -8, -8, -6, -6, -6, -6, -6, -6, -6, -6, -6, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute 13:46:27.364239 line       579                                 success += can_contract
excute Modified var:.. success = 38
excute 13:46:27.367230 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 1, 1)
excute 13:46:27.371220 line       556                     i = i_j[0]
excute 13:46:27.375212 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:27.379199 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.383189 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 1)
excute 13:46:27.388176 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:46:27.395169 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:27.399146 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.403134 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 1)
excute 13:46:27.407125 line       556                     i = i_j[0]
excute 13:46:27.411113 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:27.414106 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.418097 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 2, 0)
excute 13:46:27.421087 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:46:27.425077 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:27.428068 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.432057 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 2, 0)
excute 13:46:27.436047 line       556                     i = i_j[0]
excute 13:46:27.440036 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:27.443028 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.447018 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 2, 0)
excute 13:46:27.450011 line       556                     i = i_j[0]
excute 13:46:27.454998 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:27.457989 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.461979 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 2, 0)
excute 13:46:27.465968 line       556                     i = i_j[0]
excute 13:46:27.468960 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:27.472949 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.477934 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 2, 0)
excute 13:46:27.480929 line       556                     i = i_j[0]
excute 13:46:27.484918 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:27.487909 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.491897 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 2, 0)
excute 13:46:27.495889 line       556                     i = i_j[0]
excute 13:46:27.499877 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:27.503867 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.506858 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 2, 0)
excute 13:46:27.510847 line       556                     i = i_j[0]
excute 13:46:27.514836 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:27.518825 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.521818 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 2, 1)
excute 13:46:27.525807 line       556                     i = i_j[0]
excute 13:46:27.529797 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:27.532789 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.536778 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 2, 1)
excute 13:46:27.539770 line       556                     i = i_j[0]
excute 13:46:27.543760 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:27.546751 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.550763 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 10, 0)
excute 13:46:27.553764 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:46:27.557753 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:27.561712 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.565728 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 10, 0)
excute 13:46:27.568723 line       556                     i = i_j[0]
excute 13:46:27.572682 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:27.575705 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.579695 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 10, 0)
excute 13:46:27.582686 line       556                     i = i_j[0]
excute 13:46:27.586676 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:27.590640 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.593658 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 10, 0)
excute 13:46:27.598615 line       556                     i = i_j[0]
excute 13:46:27.602603 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:27.606592 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.610580 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 10, 0)
excute 13:46:27.613574 line       556                     i = i_j[0]
excute 13:46:27.617564 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:27.620553 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.625540 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 10, 0)
excute 13:46:27.628533 line       556                     i = i_j[0]
excute 13:46:27.633521 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:27.637509 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.642497 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 10, 0)
excute 13:46:27.646488 line       556                     i = i_j[0]
excute 13:46:27.651482 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:27.656458 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.660449 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 10, 0)
excute 13:46:27.664436 line       556                     i = i_j[0]
excute 13:46:27.668427 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:27.673413 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.678399 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 10, 1)
excute 13:46:27.682389 line       556                     i = i_j[0]
excute 13:46:27.687375 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:27.690366 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:27.695354 line       555                 for i_j in i_j_list:
excute 13:46:27.699344 line       581             self.write_matrix(
excute 13:46:27.703334 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:46:27.707321 line       583                 result_file_path,
excute 13:46:27.710314 line       584                 mode='a'
excute 13:46:27.718294 line       488         for t in time_steps:
excute Modified var:.. t = 100
excute 13:46:27.722281 line       489             if (t != self.TIME + 1):
excute 13:46:27.729262 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:46:27.735246 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:46:27.741230 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:46:27.746218 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:27.750207 line       494                         if (i == j):
excute 13:46:27.756192 line       495                             continue
excute 13:46:27.761177 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:27.764172 line       494                         if (i == j):
excute 13:46:27.771151 line       496                         i_j_list.append((
excute 13:46:27.775142 line       497                             i, j,
excute 13:46:27.781125 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:27.787110 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0)]
excute 13:46:27.802069 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:27.810048 line       494                         if (i == j):
excute 13:46:27.814036 line       496                         i_j_list.append((
excute 13:46:27.818026 line       497                             i, j,
excute 13:46:27.822017 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:27.827002 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0)]
excute 13:46:27.831988 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:27.836976 line       494                         if (i == j):
excute 13:46:27.840965 line       496                         i_j_list.append((
excute 13:46:27.844954 line       497                             i, j,
excute 13:46:27.849940 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:27.853930 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0)]
excute 13:46:27.858918 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:27.865899 line       494                         if (i == j):
excute 13:46:27.870894 line       496                         i_j_list.append((
excute 13:46:27.873876 line       497                             i, j,
excute 13:46:27.878863 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:27.881855 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0)]
excute 13:46:27.885847 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:27.889834 line       494                         if (i == j):
excute 13:46:27.893824 line       496                         i_j_list.append((
excute 13:46:27.896815 line       497                             i, j,
excute 13:46:27.900804 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:27.904793 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0)]
excute 13:46:27.907786 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:27.911777 line       494                         if (i == j):
excute 13:46:27.915765 line       496                         i_j_list.append((
excute 13:46:27.918756 line       497                             i, j,
excute 13:46:27.922747 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:27.925738 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0)]
excute 13:46:27.929728 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:27.933718 line       494                         if (i == j):
excute 13:46:27.937708 line       496                         i_j_list.append((
excute 13:46:27.940699 line       497                             i, j,
excute 13:46:27.943690 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:27.948677 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0)]
excute 13:46:27.951668 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:27.955660 line       494                         if (i == j):
excute 13:46:27.959649 line       496                         i_j_list.append((
excute 13:46:27.964633 line       497                             i, j,
excute 13:46:27.969622 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:27.972612 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1)]
excute 13:46:27.976600 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:27.980590 line       494                         if (i == j):
excute 13:46:27.984586 line       496                         i_j_list.append((
excute 13:46:27.991562 line       497                             i, j,
excute 13:46:27.994558 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.001534 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0)]
excute 13:46:28.004527 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:28.011509 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:46:28.014500 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:28.021482 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:28.028463 line       494                         if (i == j):
excute 13:46:28.032453 line       496                         i_j_list.append((
excute 13:46:28.035445 line       497                             i, j,
excute 13:46:28.038437 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.041428 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0)]
excute 13:46:28.044421 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:28.048411 line       494                         if (i == j):
excute 13:46:28.052401 line       495                             continue
excute 13:46:28.055424 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:28.059414 line       494                         if (i == j):
excute 13:46:28.062405 line       496                         i_j_list.append((
excute 13:46:28.066362 line       497                             i, j,
excute 13:46:28.069385 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.073374 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0)]
excute 13:46:28.076367 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:28.081321 line       494                         if (i == j):
excute 13:46:28.085317 line       496                         i_j_list.append((
excute 13:46:28.088304 line       497                             i, j,
excute 13:46:28.092294 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.095286 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0)]
excute 13:46:28.098277 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:28.102267 line       494                         if (i == j):
excute 13:46:28.106256 line       496                         i_j_list.append((
excute 13:46:28.111242 line       497                             i, j,
excute 13:46:28.114233 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.117225 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0)]
excute 13:46:28.120217 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:28.124207 line       494                         if (i == j):
excute 13:46:28.128196 line       496                         i_j_list.append((
excute 13:46:28.131188 line       497                             i, j,
excute 13:46:28.135177 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.138169 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0)]
excute 13:46:28.141161 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:28.145150 line       494                         if (i == j):
excute 13:46:28.149140 line       496                         i_j_list.append((
excute 13:46:28.152131 line       497                             i, j,
excute 13:46:28.155158 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.159114 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0)]
excute 13:46:28.162137 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:28.165128 line       494                         if (i == j):
excute 13:46:28.169119 line       496                         i_j_list.append((
excute 13:46:28.173107 line       497                             i, j,
excute 13:46:28.176099 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.179093 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0)]
excute 13:46:28.183069 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:28.186072 line       494                         if (i == j):
excute 13:46:28.190031 line       496                         i_j_list.append((
excute 13:46:28.193022 line       497                             i, j,
excute 13:46:28.196014 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.200003 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1)]
excute 13:46:28.202995 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:28.206986 line       494                         if (i == j):
excute 13:46:28.209977 line       496                         i_j_list.append((
excute 13:46:28.213968 line       497                             i, j,
excute 13:46:28.217957 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.220980 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0)]
excute 13:46:28.223971 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:28.227964 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:46:28.230952 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:28.234919 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:28.237935 line       494                         if (i == j):
excute 13:46:28.241918 line       496                         i_j_list.append((
excute 13:46:28.244883 line       497                             i, j,
excute 13:46:28.247876 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.250868 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0)]
excute 13:46:28.254889 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:28.258862 line       494                         if (i == j):
excute 13:46:28.262869 line       496                         i_j_list.append((
excute 13:46:28.265859 line       497                             i, j,
excute 13:46:28.268851 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.271844 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0)]
excute 13:46:28.275834 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:28.279825 line       494                         if (i == j):
excute 13:46:28.283813 line       495                             continue
excute 13:46:28.286803 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:28.289795 line       494                         if (i == j):
excute 13:46:28.293755 line       496                         i_j_list.append((
excute 13:46:28.296777 line       497                             i, j,
excute 13:46:28.299769 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.303759 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0)]
excute 13:46:28.306752 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:28.310715 line       494                         if (i == j):
excute 13:46:28.314700 line       496                         i_j_list.append((
excute 13:46:28.318719 line       497                             i, j,
excute 13:46:28.322711 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.325701 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0)]
excute 13:46:28.331653 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:28.339632 line       494                         if (i == j):
excute 13:46:28.347611 line       496                         i_j_list.append((
excute 13:46:28.350603 line       497                             i, j,
excute 13:46:28.354590 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.358584 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0)]
excute 13:46:28.363568 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:28.366561 line       494                         if (i == j):
excute 13:46:28.370552 line       496                         i_j_list.append((
excute 13:46:28.375536 line       497                             i, j,
excute 13:46:28.378528 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.382517 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0)]
excute 13:46:28.386505 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:28.391492 line       494                         if (i == j):
excute 13:46:28.395483 line       496                         i_j_list.append((
excute 13:46:28.400471 line       497                             i, j,
excute 13:46:28.404459 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.408449 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0)]
excute 13:46:28.412438 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:28.416425 line       494                         if (i == j):
excute 13:46:28.421427 line       496                         i_j_list.append((
excute 13:46:28.424405 line       497                             i, j,
excute 13:46:28.427427 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.430419 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1)]
excute 13:46:28.434412 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:28.437402 line       494                         if (i == j):
excute 13:46:28.441390 line       496                         i_j_list.append((
excute 13:46:28.444384 line       497                             i, j,
excute 13:46:28.448345 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.454324 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0)]
excute 13:46:28.458315 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:28.463301 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:46:28.466294 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:28.473275 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:28.478262 line       494                         if (i == j):
excute 13:46:28.482250 line       496                         i_j_list.append((
excute 13:46:28.485243 line       497                             i, j,
excute 13:46:28.489232 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.492224 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0)]
excute 13:46:28.495216 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:28.499206 line       494                         if (i == j):
excute 13:46:28.504199 line       496                         i_j_list.append((
excute 13:46:28.507183 line       497                             i, j,
excute 13:46:28.510176 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.514165 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0)]
excute 13:46:28.517157 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:28.522144 line       494                         if (i == j):
excute 13:46:28.526132 line       496                         i_j_list.append((
excute 13:46:28.529125 line       497                             i, j,
excute 13:46:28.533114 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.536105 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0)]
excute 13:46:28.539097 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:28.543087 line       494                         if (i == j):
excute 13:46:28.547083 line       495                             continue
excute 13:46:28.550070 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:28.555056 line       494                         if (i == j):
excute 13:46:28.559077 line       496                         i_j_list.append((
excute 13:46:28.562069 line       497                             i, j,
excute 13:46:28.565061 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.568052 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0)]
excute 13:46:28.572039 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:28.576004 line       494                         if (i == j):
excute 13:46:28.578990 line       496                         i_j_list.append((
excute 13:46:28.582981 line       497                             i, j,
excute 13:46:28.585971 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.588964 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0)]
excute 13:46:28.591956 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:28.595945 line       494                         if (i == j):
excute 13:46:28.599935 line       496                         i_j_list.append((
excute 13:46:28.602926 line       497                             i, j,
excute 13:46:28.605918 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.608910 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0)]
excute 13:46:28.612900 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:28.615891 line       494                         if (i == j):
excute 13:46:28.619882 line       496                         i_j_list.append((
excute 13:46:28.623872 line       497                             i, j,
excute 13:46:28.627861 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.631849 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0)]
excute 13:46:28.634872 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:28.638862 line       494                         if (i == j):
excute 13:46:28.642821 line       496                         i_j_list.append((
excute 13:46:28.645843 line       497                             i, j,
excute 13:46:28.648836 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.652827 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1)]
excute 13:46:28.656784 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:28.659806 line       494                         if (i == j):
excute 13:46:28.663765 line       496                         i_j_list.append((
excute 13:46:28.666788 line       497                             i, j,
excute 13:46:28.670758 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.673771 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0)]
excute 13:46:28.676762 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:28.680720 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:46:28.683742 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:28.687702 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:28.690724 line       494                         if (i == j):
excute 13:46:28.695680 line       496                         i_j_list.append((
excute 13:46:28.699668 line       497                             i, j,
excute 13:46:28.702659 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.706649 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0)]
excute 13:46:28.709673 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:28.713665 line       494                         if (i == j):
excute 13:46:28.717628 line       496                         i_j_list.append((
excute 13:46:28.720644 line       497                             i, j,
excute 13:46:28.724601 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.728623 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0)]
excute 13:46:28.732613 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:28.736569 line       494                         if (i == j):
excute 13:46:28.739593 line       496                         i_j_list.append((
excute 13:46:28.743551 line       497                             i, j,
excute 13:46:28.746574 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.749569 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0)]
excute 13:46:28.752558 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:28.756549 line       494                         if (i == j):
excute 13:46:28.760537 line       496                         i_j_list.append((
excute 13:46:28.764496 line       497                             i, j,
excute 13:46:28.767488 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.771478 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0)]
excute 13:46:28.775467 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:28.779457 line       494                         if (i == j):
excute 13:46:28.783447 line       495                             continue
excute 13:46:28.787435 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:28.790427 line       494                         if (i == j):
excute 13:46:28.794417 line       496                         i_j_list.append((
excute 13:46:28.798405 line       497                             i, j,
excute 13:46:28.802395 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.806384 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0)]
excute 13:46:28.809377 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:28.813377 line       494                         if (i == j):
excute 13:46:28.817355 line       496                         i_j_list.append((
excute 13:46:28.821344 line       497                             i, j,
excute 13:46:28.825338 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.829322 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0)]
excute 13:46:28.832313 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:28.836304 line       494                         if (i == j):
excute 13:46:28.840293 line       496                         i_j_list.append((
excute 13:46:28.843284 line       497                             i, j,
excute 13:46:28.846276 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.849268 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0)]
excute 13:46:28.852260 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:28.856249 line       494                         if (i == j):
excute 13:46:28.860239 line       496                         i_j_list.append((
excute 13:46:28.863230 line       497                             i, j,
excute 13:46:28.866223 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.870212 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1)]
excute 13:46:28.873203 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:28.877194 line       494                         if (i == j):
excute 13:46:28.880217 line       496                         i_j_list.append((
excute 13:46:28.884208 line       497                             i, j,
excute 13:46:28.887167 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.891156 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0)]
excute 13:46:28.894148 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:28.897140 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:46:28.901129 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:28.904121 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:28.908113 line       494                         if (i == j):
excute 13:46:28.911103 line       496                         i_j_list.append((
excute 13:46:28.914095 line       497                             i, j,
excute 13:46:28.918084 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.921075 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0)]
excute 13:46:28.924067 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:28.928058 line       494                         if (i == j):
excute 13:46:28.932048 line       496                         i_j_list.append((
excute 13:46:28.936037 line       497                             i, j,
excute 13:46:28.939029 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.942020 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0)]
excute 13:46:28.946011 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:28.950001 line       494                         if (i == j):
excute 13:46:28.953989 line       496                         i_j_list.append((
excute 13:46:28.958976 line       497                             i, j,
excute 13:46:28.962965 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.966954 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0)]
excute 13:46:28.969946 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:28.973935 line       494                         if (i == j):
excute 13:46:28.976927 line       496                         i_j_list.append((
excute 13:46:28.980917 line       497                             i, j,
excute 13:46:28.983940 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:28.986932 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0)]
excute 13:46:28.990892 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:28.993913 line       494                         if (i == j):
excute 13:46:28.997903 line       496                         i_j_list.append((
excute 13:46:29.000896 line       497                             i, j,
excute 13:46:29.004865 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:29.007876 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0)]
excute 13:46:29.011835 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:29.015823 line       494                         if (i == j):
excute 13:46:29.019813 line       495                             continue
excute 13:46:29.023802 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:29.028789 line       494                         if (i == j):
excute 13:46:29.035774 line       496                         i_j_list.append((
excute 13:46:29.038793 line       497                             i, j,
excute 13:46:29.041785 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:29.045743 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0)]
excute 13:46:29.048768 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:29.051760 line       494                         if (i == j):
excute 13:46:29.056721 line       496                         i_j_list.append((
excute 13:46:29.059738 line       497                             i, j,
excute 13:46:29.062729 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:29.066687 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0)]
excute 13:46:29.069679 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:29.073668 line       494                         if (i == j):
excute 13:46:29.076659 line       496                         i_j_list.append((
excute 13:46:29.079652 line       497                             i, j,
excute 13:46:29.083641 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:29.086633 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1)]
excute 13:46:29.089625 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:29.093615 line       494                         if (i == j):
excute 13:46:29.096606 line       496                         i_j_list.append((
excute 13:46:29.099599 line       497                             i, j,
excute 13:46:29.103588 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:29.106612 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0)]
excute 13:46:29.109605 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:29.113561 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:46:29.116553 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:29.120543 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:29.123535 line       494                         if (i == j):
excute 13:46:29.127525 line       496                         i_j_list.append((
excute 13:46:29.130516 line       497                             i, j,
excute 13:46:29.134508 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:29.139526 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0), (6, 0, 2, 0)]
excute 13:46:29.143482 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:29.147473 line       494                         if (i == j):
excute 13:46:29.157697 line       496                         i_j_list.append((
excute 13:46:29.160688 line       497                             i, j,
excute 13:46:29.164676 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:29.167669 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0), (6, 0, 2, 0), (6, 1, 2, 0)]
excute 13:46:29.170661 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:29.174651 line       494                         if (i == j):
excute 13:46:29.178653 line       496                         i_j_list.append((
excute 13:46:29.182629 line       497                             i, j,
excute 13:46:29.186618 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:29.190608 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0)]
excute 13:46:29.193599 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:29.198586 line       494                         if (i == j):
excute 13:46:29.202575 line       496                         i_j_list.append((
excute 13:46:29.206565 line       497                             i, j,
excute 13:46:29.209556 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:29.213546 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0)]
excute 13:46:29.217533 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:29.220527 line       494                         if (i == j):
excute 13:46:29.224521 line       496                         i_j_list.append((
excute 13:46:29.228506 line       497                             i, j,
excute 13:46:29.231498 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:29.234490 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0)]
excute 13:46:29.239508 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:29.243465 line       494                         if (i == j):
excute 13:46:29.247487 line       496                         i_j_list.append((
excute 13:46:29.250477 line       497                             i, j,
excute 13:46:29.254470 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:29.258426 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0)]
excute 13:46:29.262416 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:29.266405 line       494                         if (i == j):
excute 13:46:29.270394 line       495                             continue
excute 13:46:29.274383 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:29.278372 line       494                         if (i == j):
excute 13:46:29.282362 line       496                         i_j_list.append((
excute 13:46:29.286350 line       497                             i, j,
excute 13:46:29.289373 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:29.292334 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0)]
excute 13:46:29.296324 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:29.300313 line       494                         if (i == j):
excute 13:46:29.303304 line       496                         i_j_list.append((
excute 13:46:29.306296 line       497                             i, j,
excute 13:46:29.310289 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:29.313277 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1)]
excute 13:46:29.316269 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:29.320259 line       494                         if (i == j):
excute 13:46:29.324248 line       496                         i_j_list.append((
excute 13:46:29.331230 line       497                             i, j,
excute 13:46:29.338223 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:29.343201 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0)]
excute 13:46:29.348194 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:29.352174 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:46:29.356164 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:29.361149 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:29.365140 line       494                         if (i == j):
excute 13:46:29.369129 line       496                         i_j_list.append((
excute 13:46:29.373117 line       497                             i, j,
excute 13:46:29.377107 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:29.380099 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 0)]
excute 13:46:29.383092 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:29.390075 line       494                         if (i == j):
excute 13:46:29.395059 line       496                         i_j_list.append((
excute 13:46:29.398052 line       497                             i, j,
excute 13:46:29.404035 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:29.408026 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0)]
excute 13:46:29.414008 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:29.418000 line       494                         if (i == j):
excute 13:46:29.421988 line       496                         i_j_list.append((
excute 13:46:29.425013 line       497                             i, j,
excute 13:46:29.428002 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:29.431963 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0)]
excute 13:46:29.434954 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:29.438943 line       494                         if (i == j):
excute 13:46:29.444926 line       496                         i_j_list.append((
excute 13:46:29.448917 line       497                             i, j,
excute 13:46:29.452905 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:29.455897 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0)]
excute 13:46:29.460885 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:29.469860 line       494                         if (i == j):
excute 13:46:29.472884 line       496                         i_j_list.append((
excute 13:46:29.476841 line       497                             i, j,
excute 13:46:29.480829 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:29.483821 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0)]
excute 13:46:29.486814 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:29.490803 line       494                         if (i == j):
excute 13:46:29.494792 line       496                         i_j_list.append((
excute 13:46:29.498782 line       497                             i, j,
excute 13:46:29.501808 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:29.504798 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0)]
excute 13:46:29.508757 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:29.512744 line       494                         if (i == j):
excute 13:46:29.516734 line       496                         i_j_list.append((
excute 13:46:29.519726 line       497                             i, j,
excute 13:46:29.522718 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:29.525710 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0)]
excute 13:46:29.529699 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:29.535683 line       494                         if (i == j):
excute 13:46:29.540672 line       495                             continue
excute 13:46:29.546655 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:29.550644 line       494                         if (i == j):
excute 13:46:29.553636 line       496                         i_j_list.append((
excute 13:46:29.557625 line       497                             i, j,
excute 13:46:29.562612 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:29.566601 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1)]
excute 13:46:29.571588 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:29.575578 line       494                         if (i == j):
excute 13:46:29.579567 line       496                         i_j_list.append((
excute 13:46:29.583556 line       497                             i, j,
excute 13:46:29.586548 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:29.590538 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0)]
excute 13:46:29.593530 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:29.598518 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:46:29.601509 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:29.605496 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:29.609487 line       494                         if (i == j):
excute 13:46:29.612509 line       496                         i_j_list.append((
excute 13:46:29.619458 line       497                             i, j,
excute 13:46:29.625443 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:29.630430 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, 2, 0)]
excute 13:46:29.635419 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:29.640403 line       494                         if (i == j):
excute 13:46:29.644392 line       496                         i_j_list.append((
excute 13:46:29.649384 line       497                             i, j,
excute 13:46:29.652372 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:29.656360 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0)]
excute 13:46:29.660350 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:29.664339 line       494                         if (i == j):
excute 13:46:29.668328 line       496                         i_j_list.append((
excute 13:46:29.672318 line       497                             i, j,
excute 13:46:29.675310 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:29.680296 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0)]
excute 13:46:29.683290 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:29.688278 line       494                         if (i == j):
excute 13:46:29.693265 line       496                         i_j_list.append((
excute 13:46:29.697262 line       497                             i, j,
excute 13:46:29.700274 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:29.703267 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0)]
excute 13:46:29.707256 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:29.711247 line       494                         if (i == j):
excute 13:46:29.716202 line       496                         i_j_list.append((
excute 13:46:29.719224 line       497                             i, j,
excute 13:46:29.722218 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:29.726207 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0)]
excute 13:46:29.730169 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:29.734155 line       494                         if (i == j):
excute 13:46:29.738158 line       496                         i_j_list.append((
excute 13:46:29.742146 line       497                             i, j,
excute 13:46:29.745124 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:29.750113 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0)]
excute 13:46:29.756094 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:29.760083 line       494                         if (i == j):
excute 13:46:29.765082 line       496                         i_j_list.append((
excute 13:46:29.769060 line       497                             i, j,
excute 13:46:29.772083 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:29.775077 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0)]
excute 13:46:29.779065 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:29.783025 line       494                         if (i == j):
excute 13:46:29.788010 line       496                         i_j_list.append((
excute 13:46:29.791999 line       497                             i, j,
excute 13:46:29.795989 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:29.798981 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0)]
excute 13:46:29.802969 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:29.807956 line       494                         if (i == j):
excute 13:46:29.811945 line       495                             continue
excute 13:46:29.814938 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:29.818926 line       494                         if (i == j):
excute 13:46:29.823915 line       496                         i_j_list.append((
excute 13:46:29.826905 line       497                             i, j,
excute 13:46:29.830897 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:29.833887 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0)]
excute 13:46:29.837876 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:29.841866 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:46:29.845855 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:29.849844 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:29.853836 line       494                         if (i == j):
excute 13:46:29.857823 line       496                         i_j_list.append((
excute 13:46:29.861813 line       497                             i, j,
excute 13:46:29.864804 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:29.867827 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 0)]
excute 13:46:29.871817 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:29.875782 line       494                         if (i == j):
excute 13:46:29.879797 line       496                         i_j_list.append((
excute 13:46:29.883786 line       497                             i, j,
excute 13:46:29.900687 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:29.906671 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 0), (9, 1, 1, 0)]
excute 13:46:29.911658 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:29.917641 line       494                         if (i == j):
excute 13:46:29.921631 line       496                         i_j_list.append((
excute 13:46:29.925620 line       497                             i, j,
excute 13:46:29.932605 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:29.938587 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0)]
excute 13:46:29.943572 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:29.950556 line       494                         if (i == j):
excute 13:46:29.955540 line       496                         i_j_list.append((
excute 13:46:29.963532 line       497                             i, j,
excute 13:46:29.967508 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:29.974489 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0)]
excute 13:46:29.979478 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:29.984467 line       494                         if (i == j):
excute 13:46:29.989450 line       496                         i_j_list.append((
excute 13:46:29.997428 line       497                             i, j,
excute 13:46:30.000420 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:30.009397 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0)]
excute 13:46:30.015380 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:30.025354 line       494                         if (i == j):
excute 13:46:30.033332 line       496                         i_j_list.append((
excute 13:46:30.038319 line       497                             i, j,
excute 13:46:30.044304 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:30.047294 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0)]
excute 13:46:30.053278 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:30.059263 line       494                         if (i == j):
excute 13:46:30.065247 line       496                         i_j_list.append((
excute 13:46:30.069236 line       497                             i, j,
excute 13:46:30.075220 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:30.079209 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0)]
excute 13:46:30.086190 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:30.092176 line       494                         if (i == j):
excute 13:46:30.096166 line       496                         i_j_list.append((
excute 13:46:30.099157 line       497                             i, j,
excute 13:46:30.102149 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:30.106137 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0)]
excute 13:46:30.110127 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:30.114121 line       494                         if (i == j):
excute 13:46:30.118106 line       496                         i_j_list.append((
excute 13:46:30.122095 line       497                             i, j,
excute 13:46:30.125086 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:30.129076 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 8, -2, 1), (5, 9, -2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 1)]
excute 13:46:30.133065 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:30.138055 line       494                         if (i == j):
excute 13:46:30.142044 line       495                             continue
excute 13:46:30.145035 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:30.149024 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:46:30.153012 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 9, -2, 0), (5, 0, -2, 0), (5, 1, -2, 0), (5, 2, -2, 0), (5, 3, -2, 0), (5, 4, -2, 0), (5, 6, -2, 0), (5, 7, -2, 0), (5, 9, -2, 0), (0, 8, -2, 1), (5, 8, -2, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 9, 0, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 9, 0, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 9, 0, 0), (1, 8, 0, 1), (4, 8, 0, 1), (7, 8, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (2, 8, 1, 1), (9, 8, 1, 1), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (6, 8, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 9, 10, 0), (3, 8, 10, 1)]
excute 13:46:30.156005 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:46:30.159994 line       505                     if (self.RELOCATE):
excute 13:46:30.164981 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:46:30.168976 line       505                     if (self.RELOCATE):
excute 13:46:30.171962 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:46:30.175950 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, -2, 0)
excute 13:46:30.178942 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:46:30.182932 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:30.185923 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.189913 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, -2, 0)
excute 13:46:30.192905 line       556                     i = i_j[0]
excute 13:46:30.196894 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:30.200885 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.204876 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, -2, 0)
excute 13:46:30.208864 line       556                     i = i_j[0]
excute 13:46:30.211857 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:30.215845 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.219848 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, -2, 0)
excute 13:46:30.222827 line       556                     i = i_j[0]
excute 13:46:30.226816 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:30.230805 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.234803 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, -2, 0)
excute 13:46:30.237786 line       556                     i = i_j[0]
excute 13:46:30.241779 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:30.245765 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.248757 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, -2, 0)
excute 13:46:30.252747 line       556                     i = i_j[0]
excute 13:46:30.256735 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:30.260726 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.264714 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, -2, 0)
excute 13:46:30.268706 line       556                     i = i_j[0]
excute 13:46:30.272694 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:30.275685 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.283664 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, -2, 0)
excute 13:46:30.290643 line       556                     i = i_j[0]
excute 13:46:30.294633 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:30.297626 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.303610 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, -2, 0)
excute 13:46:30.306602 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:46:30.310593 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:30.314581 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.317573 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, -2, 0)
excute 13:46:30.321563 line       556                     i = i_j[0]
excute 13:46:30.326552 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:30.334529 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.338516 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, -2, 0)
excute 13:46:30.342509 line       556                     i = i_j[0]
excute 13:46:30.347494 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:30.351484 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.356473 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, -2, 0)
excute 13:46:30.360460 line       556                     i = i_j[0]
excute 13:46:30.364459 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:30.367441 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.373423 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, -2, 0)
excute 13:46:30.377412 line       556                     i = i_j[0]
excute 13:46:30.384394 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:30.388382 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.394369 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, -2, 0)
excute 13:46:30.397359 line       556                     i = i_j[0]
excute 13:46:30.401349 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:30.405348 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.408330 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, -2, 0)
excute 13:46:30.412320 line       556                     i = i_j[0]
excute 13:46:30.415312 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:30.419302 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.423289 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, -2, 0)
excute 13:46:30.426283 line       556                     i = i_j[0]
excute 13:46:30.430271 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:30.433264 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.437263 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, -2, 1)
excute 13:46:30.440243 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:46:30.444234 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:30.448226 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.452214 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, -2, 1)
excute 13:46:30.456234 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:46:30.460225 line       557                     j = i_j[1]
excute 13:46:30.464215 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.467204 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 110
excute 13:46:30.471195 line       560                         if (t_tmp > self.TIME):
excute 13:46:30.477180 line       563                             if (available_vhecles[i][t] == 0):
excute 13:46:30.480169 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:46:30.484152 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:46:30.487152 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:46:30.490142 line       569                                     available_vhecles[i][t],
excute 13:46:30.494108 line       570                                     available_vhecles[j][t_tmp],
excute 13:46:30.497123 line       571                                     self.S_capacities[j],
excute 13:46:30.500117 line       572                                     demands[t][i][j],
excute 13:46:30.504073 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 5
calc_contract     Starting var:.. available_vhecles_target = 0
calc_contract     Starting var:.. capacity_target = 2
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 100
calc_contract     13:46:30.507097 call       352     def caluculate_contract(
calc_contract     13:46:30.510060 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:46:30.511058 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:46:30.513050 line       362         if (available_vhecles_start >= demand):
calc_contract     13:46:30.514047 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:46:30.514047 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:46:30.515044 line       385         return [can_contract, rsf, rse]
calc_contract     13:46:30.516042 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:46:30.517039 line       575                                 rsf += rsf_tmp
excute 13:46:30.520031 line       576                                 rse += rse_tmp
excute 13:46:30.524020 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
move_cars     Starting var:.. i = 5
move_cars     Starting var:.. j = 8
move_cars     Starting var:.. t = 100
move_cars     Starting var:.. t_tmp = 110
move_cars     Starting var:.. can_contract = 1
move_cars     13:46:30.528013 call       388     def move_cars(
move_cars     13:46:30.532999 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:46:30.534026 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:46:30.535990 line       399         return available_vhecles
move_cars     13:46:30.537017 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -8, -8, -8, -6, -6, -6, -6, -6, -6, -6, -6, -6, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute 13:46:30.539013 line       579                                 success += can_contract
excute Modified var:.. success = 39
excute 13:46:30.542981 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 0, 0)
excute 13:46:30.546960 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:46:30.550984 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:30.554939 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.558928 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 0, 0)
excute 13:46:30.561950 line       556                     i = i_j[0]
excute 13:46:30.565921 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:30.568932 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.572890 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 0, 0)
excute 13:46:30.576880 line       556                     i = i_j[0]
excute 13:46:30.580867 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:30.584857 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.587849 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 0, 0)
excute 13:46:30.591838 line       556                     i = i_j[0]
excute 13:46:30.594830 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:30.598820 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.601812 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 0, 0)
excute 13:46:30.605801 line       556                     i = i_j[0]
excute 13:46:30.608793 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:30.612782 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.616773 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 0, 0)
excute 13:46:30.619764 line       556                     i = i_j[0]
excute 13:46:30.623754 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:30.627743 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.630737 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 0, 0)
excute 13:46:30.635721 line       556                     i = i_j[0]
excute 13:46:30.640709 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:30.643734 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.647722 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 0, 0)
excute 13:46:30.651713 line       556                     i = i_j[0]
excute 13:46:30.655672 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:30.658692 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.662684 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 0, 0)
excute 13:46:30.666640 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:46:30.669663 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:30.673619 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.677611 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 0, 0)
excute 13:46:30.682629 line       556                     i = i_j[0]
excute 13:46:30.686586 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:30.689577 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.693568 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 0, 0)
excute 13:46:30.696558 line       556                     i = i_j[0]
excute 13:46:30.700548 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:30.703540 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.707529 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 0, 0)
excute 13:46:30.711519 line       556                     i = i_j[0]
excute 13:46:30.716505 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:30.719497 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.723487 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 0, 0)
excute 13:46:30.726479 line       556                     i = i_j[0]
excute 13:46:30.730468 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:30.733460 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.737450 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 0, 0)
excute 13:46:30.740441 line       556                     i = i_j[0]
excute 13:46:30.744439 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:30.747422 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.750415 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 0, 0)
excute 13:46:30.754404 line       556                     i = i_j[0]
excute 13:46:30.758395 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:30.762384 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.766374 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 0, 0)
excute 13:46:30.770363 line       556                     i = i_j[0]
excute 13:46:30.774353 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:30.778351 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.782331 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 0, 0)
excute 13:46:30.787330 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:46:30.790342 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:30.794329 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.798287 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 0, 0)
excute 13:46:30.801310 line       556                     i = i_j[0]
excute 13:46:30.805276 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:30.808291 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.812281 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 0, 0)
excute 13:46:30.816238 line       556                     i = i_j[0]
excute 13:46:30.819265 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:30.823252 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.827212 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 0, 0)
excute 13:46:30.830203 line       556                     i = i_j[0]
excute 13:46:30.834193 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:30.838182 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.842171 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 0, 0)
excute 13:46:30.845163 line       556                     i = i_j[0]
excute 13:46:30.849150 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:30.852144 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.856134 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 0, 0)
excute 13:46:30.860123 line       556                     i = i_j[0]
excute 13:46:30.864112 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:30.868100 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.871095 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 0, 0)
excute 13:46:30.875083 line       556                     i = i_j[0]
excute 13:46:30.880071 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:30.883094 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.888048 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 0, 0)
excute 13:46:30.892038 line       556                     i = i_j[0]
excute 13:46:30.899025 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:30.905999 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.909990 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 0, 1)
excute 13:46:30.913977 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:46:30.917969 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:30.921958 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.926943 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 0, 1)
excute 13:46:30.929937 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:46:30.933933 line       557                     j = i_j[1]
excute 13:46:30.936917 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.940907 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 0, 1)
excute 13:46:30.943898 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:46:30.948886 line       557                     j = i_j[1]
excute 13:46:30.952876 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.956865 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 1, 0)
excute 13:46:30.960854 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:46:30.968832 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:30.972820 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.976811 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 1, 0)
excute 13:46:30.980799 line       556                     i = i_j[0]
excute 13:46:30.983791 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:30.987781 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:30.995760 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 1, 0)
excute 13:46:31.002751 line       556                     i = i_j[0]
excute 13:46:31.006730 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:31.010753 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.014710 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 1, 0)
excute 13:46:31.017732 line       556                     i = i_j[0]
excute 13:46:31.021699 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:31.024713 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.028674 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 1, 0)
excute 13:46:31.032662 line       556                     i = i_j[0]
excute 13:46:31.036651 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:31.040640 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.044631 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 1, 0)
excute 13:46:31.047622 line       556                     i = i_j[0]
excute 13:46:31.051611 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:31.055601 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.060588 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 1, 0)
excute 13:46:31.063580 line       556                     i = i_j[0]
excute 13:46:31.067569 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:31.071558 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.075545 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 1, 0)
excute 13:46:31.078540 line       556                     i = i_j[0]
excute 13:46:31.083524 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:31.086518 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.090507 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 0)
excute 13:46:31.095494 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:46:31.099483 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:31.102475 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.106464 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 0)
excute 13:46:31.109456 line       556                     i = i_j[0]
excute 13:46:31.113446 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:31.116437 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.120426 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:46:31.124417 line       556                     i = i_j[0]
excute 13:46:31.128405 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:31.131397 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.135388 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 0)
excute 13:46:31.139376 line       556                     i = i_j[0]
excute 13:46:31.143364 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:31.147355 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.151346 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 0)
excute 13:46:31.155365 line       556                     i = i_j[0]
excute 13:46:31.159355 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:31.162348 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.166304 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 0)
excute 13:46:31.169326 line       556                     i = i_j[0]
excute 13:46:31.173286 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:31.176308 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.180268 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 0)
excute 13:46:31.183289 line       556                     i = i_j[0]
excute 13:46:31.187280 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:31.190271 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.195227 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 0)
excute 13:46:31.199216 line       556                     i = i_j[0]
excute 13:46:31.203206 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:31.207196 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.211185 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 1, 1)
excute 13:46:31.215174 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:46:31.219165 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:31.223153 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.227143 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 1)
excute 13:46:31.230135 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:46:31.234124 line       557                     j = i_j[1]
excute 13:46:31.238127 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.241105 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 2, 0)
excute 13:46:31.245100 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:46:31.249085 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:31.253074 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.257061 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 2, 0)
excute 13:46:31.261050 line       556                     i = i_j[0]
excute 13:46:31.264043 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:31.268032 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.271024 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 2, 0)
excute 13:46:31.275014 line       556                     i = i_j[0]
excute 13:46:31.279003 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:31.281994 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.285985 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 2, 0)
excute 13:46:31.288976 line       556                     i = i_j[0]
excute 13:46:31.292967 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:31.296955 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.300944 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 2, 0)
excute 13:46:31.303936 line       556                     i = i_j[0]
excute 13:46:31.307925 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:31.310948 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.315906 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 2, 0)
excute 13:46:31.321888 line       556                     i = i_j[0]
excute 13:46:31.330865 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:31.340837 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.349848 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 2, 0)
excute 13:46:31.356794 line       556                     i = i_j[0]
excute 13:46:31.366768 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:31.373750 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.380730 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 2, 0)
excute 13:46:31.388708 line       556                     i = i_j[0]
excute 13:46:31.395690 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:31.399680 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.408656 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 2, 0)
excute 13:46:31.412645 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:46:31.422618 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:31.430598 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.435583 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 2, 0)
excute 13:46:31.439573 line       556                     i = i_j[0]
excute 13:46:31.444560 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:31.450544 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.461514 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 2, 0)
excute 13:46:31.472484 line       556                     i = i_j[0]
excute 13:46:31.482458 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:31.489440 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.496420 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 2, 0)
excute 13:46:31.501408 line       556                     i = i_j[0]
excute 13:46:31.509386 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:31.515371 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.521356 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 2, 0)
excute 13:46:31.527338 line       556                     i = i_j[0]
excute 13:46:31.534322 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:31.540303 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.546288 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 2, 0)
excute 13:46:31.553269 line       556                     i = i_j[0]
excute 13:46:31.559253 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:31.564241 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.572219 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 2, 0)
excute 13:46:31.580198 line       556                     i = i_j[0]
excute 13:46:31.588175 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:31.596153 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.602139 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 2, 0)
excute 13:46:31.610117 line       556                     i = i_j[0]
excute 13:46:31.616101 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:31.622086 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.629067 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 2, 0)
excute 13:46:31.637044 line       556                     i = i_j[0]
excute 13:46:31.646022 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:31.653001 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.659985 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 2, 1)
excute 13:46:31.667962 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:46:31.675940 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:31.684919 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.690902 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 10, 0)
excute 13:46:31.698881 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:46:31.706859 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:31.713841 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.723813 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 10, 0)
excute 13:46:31.729797 line       556                     i = i_j[0]
excute 13:46:31.735782 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:31.743759 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.750741 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 10, 0)
excute 13:46:31.757723 line       556                     i = i_j[0]
excute 13:46:31.766708 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:31.774677 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.782656 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 10, 0)
excute 13:46:31.788641 line       556                     i = i_j[0]
excute 13:46:31.792629 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:31.795620 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.799610 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 10, 0)
excute 13:46:31.803600 line       556                     i = i_j[0]
excute 13:46:31.806591 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:31.810581 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.816565 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 10, 0)
excute 13:46:31.820553 line       556                     i = i_j[0]
excute 13:46:31.824546 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:31.827536 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.831525 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 10, 0)
excute 13:46:31.834517 line       556                     i = i_j[0]
excute 13:46:31.838507 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:31.841498 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.845488 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 10, 0)
excute 13:46:31.848479 line       556                     i = i_j[0]
excute 13:46:31.852484 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:31.856459 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.859452 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 10, 1)
excute 13:46:31.863441 line       556                     i = i_j[0]
excute 13:46:31.867430 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:31.871419 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:31.875409 line       555                 for i_j in i_j_list:
excute 13:46:31.879428 line       581             self.write_matrix(
excute 13:46:31.882420 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:46:31.886410 line       583                 result_file_path,
excute 13:46:31.889401 line       584                 mode='a'
excute 13:46:31.895355 line       488         for t in time_steps:
excute Modified var:.. t = 101
excute 13:46:31.900341 line       489             if (t != self.TIME + 1):
excute 13:46:31.907322 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:46:31.913305 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:46:31.921288 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:46:31.928267 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:31.932257 line       494                         if (i == j):
excute 13:46:31.936246 line       495                             continue
excute 13:46:31.939240 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:31.944227 line       494                         if (i == j):
excute 13:46:31.950208 line       496                         i_j_list.append((
excute 13:46:31.956192 line       497                             i, j,
excute 13:46:31.962177 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:31.965168 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0)]
excute 13:46:31.978135 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:31.987109 line       494                         if (i == j):
excute 13:46:31.991098 line       496                         i_j_list.append((
excute 13:46:31.997082 line       497                             i, j,
excute 13:46:32.000075 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.006058 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0)]
excute 13:46:32.010048 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:32.015035 line       494                         if (i == j):
excute 13:46:32.021021 line       496                         i_j_list.append((
excute 13:46:32.025009 line       497                             i, j,
excute 13:46:32.029995 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.036977 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0)]
excute 13:46:32.043959 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:32.048945 line       494                         if (i == j):
excute 13:46:32.051935 line       496                         i_j_list.append((
excute 13:46:32.055924 line       497                             i, j,
excute 13:46:32.058917 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.062906 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0)]
excute 13:46:32.066896 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:32.070885 line       494                         if (i == j):
excute 13:46:32.074875 line       496                         i_j_list.append((
excute 13:46:32.078864 line       497                             i, j,
excute 13:46:32.081856 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.085845 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1)]
excute 13:46:32.088838 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:32.092828 line       494                         if (i == j):
excute 13:46:32.096817 line       496                         i_j_list.append((
excute 13:46:32.099808 line       497                             i, j,
excute 13:46:32.102800 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.106789 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2)]
excute 13:46:32.109781 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:32.113770 line       494                         if (i == j):
excute 13:46:32.118774 line       496                         i_j_list.append((
excute 13:46:32.121751 line       497                             i, j,
excute 13:46:32.125738 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.129728 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0)]
excute 13:46:32.132721 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:32.136710 line       494                         if (i == j):
excute 13:46:32.140699 line       496                         i_j_list.append((
excute 13:46:32.143691 line       497                             i, j,
excute 13:46:32.147681 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.150671 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0)]
excute 13:46:32.153663 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:32.157653 line       494                         if (i == j):
excute 13:46:32.161642 line       496                         i_j_list.append((
excute 13:46:32.164634 line       497                             i, j,
excute 13:46:32.167626 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.171616 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0)]
excute 13:46:32.174607 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:32.177599 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:46:32.181588 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:32.184581 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:32.188571 line       494                         if (i == j):
excute 13:46:32.193558 line       496                         i_j_list.append((
excute 13:46:32.199542 line       497                             i, j,
excute 13:46:32.202534 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.205525 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0)]
excute 13:46:32.209514 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:32.212506 line       494                         if (i == j):
excute 13:46:32.216505 line       495                             continue
excute 13:46:32.219487 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:32.222479 line       494                         if (i == j):
excute 13:46:32.227467 line       496                         i_j_list.append((
excute 13:46:32.230458 line       497                             i, j,
excute 13:46:32.234481 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.237471 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0)]
excute 13:46:32.240464 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:32.244452 line       494                         if (i == j):
excute 13:46:32.248410 line       496                         i_j_list.append((
excute 13:46:32.251433 line       497                             i, j,
excute 13:46:32.255425 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.259381 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0)]
excute 13:46:32.262405 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:32.266362 line       494                         if (i == j):
excute 13:46:32.270385 line       496                         i_j_list.append((
excute 13:46:32.273375 line       497                             i, j,
excute 13:46:32.276367 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.280356 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0)]
excute 13:46:32.283348 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:32.287318 line       494                         if (i == j):
excute 13:46:32.291329 line       496                         i_j_list.append((
excute 13:46:32.294319 line       497                             i, j,
excute 13:46:32.297279 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.300271 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1)]
excute 13:46:32.304260 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:32.307252 line       494                         if (i == j):
excute 13:46:32.311242 line       496                         i_j_list.append((
excute 13:46:32.314234 line       497                             i, j,
excute 13:46:32.317226 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.321215 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2)]
excute 13:46:32.324207 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:32.335179 line       494                         if (i == j):
excute 13:46:32.341162 line       496                         i_j_list.append((
excute 13:46:32.346151 line       497                             i, j,
excute 13:46:32.349142 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.353132 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0)]
excute 13:46:32.357122 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:32.362107 line       494                         if (i == j):
excute 13:46:32.365129 line       496                         i_j_list.append((
excute 13:46:32.369120 line       497                             i, j,
excute 13:46:32.372111 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.375106 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0)]
excute 13:46:32.379095 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:32.384049 line       494                         if (i == j):
excute 13:46:32.388037 line       496                         i_j_list.append((
excute 13:46:32.391028 line       497                             i, j,
excute 13:46:32.394021 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.397013 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0)]
excute 13:46:32.401002 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:32.405009 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:46:32.407986 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:32.411976 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:32.414966 line       494                         if (i == j):
excute 13:46:32.418965 line       496                         i_j_list.append((
excute 13:46:32.422945 line       497                             i, j,
excute 13:46:32.425938 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.431919 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0)]
excute 13:46:32.439899 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:32.443888 line       494                         if (i == j):
excute 13:46:32.448875 line       496                         i_j_list.append((
excute 13:46:32.454859 line       497                             i, j,
excute 13:46:32.460842 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.466828 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0)]
excute 13:46:32.470850 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:32.474837 line       494                         if (i == j):
excute 13:46:32.479795 line       495                             continue
excute 13:46:32.482785 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:32.486777 line       494                         if (i == j):
excute 13:46:32.490776 line       496                         i_j_list.append((
excute 13:46:32.493755 line       497                             i, j,
excute 13:46:32.497778 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.500767 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0)]
excute 13:46:32.503759 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:32.507755 line       494                         if (i == j):
excute 13:46:32.511738 line       496                         i_j_list.append((
excute 13:46:32.515715 line       497                             i, j,
excute 13:46:32.518687 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.521679 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0)]
excute 13:46:32.528685 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:32.532653 line       494                         if (i == j):
excute 13:46:32.538635 line       496                         i_j_list.append((
excute 13:46:32.541629 line       497                             i, j,
excute 13:46:32.545619 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.548610 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1)]
excute 13:46:32.552598 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:32.556588 line       494                         if (i == j):
excute 13:46:32.560577 line       496                         i_j_list.append((
excute 13:46:32.564566 line       497                             i, j,
excute 13:46:32.568569 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.572544 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2)]
excute 13:46:32.575538 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:32.578530 line       494                         if (i == j):
excute 13:46:32.582519 line       496                         i_j_list.append((
excute 13:46:32.586508 line       497                             i, j,
excute 13:46:32.590497 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.593490 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0)]
excute 13:46:32.596481 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:32.600473 line       494                         if (i == j):
excute 13:46:32.604461 line       496                         i_j_list.append((
excute 13:46:32.608449 line       497                             i, j,
excute 13:46:32.611442 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.614433 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0)]
excute 13:46:32.618423 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:32.622411 line       494                         if (i == j):
excute 13:46:32.626400 line       496                         i_j_list.append((
excute 13:46:32.629392 line       497                             i, j,
excute 13:46:32.633382 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.637372 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0)]
excute 13:46:32.641361 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:32.645350 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:46:32.648341 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:32.652332 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:32.656320 line       494                         if (i == j):
excute 13:46:32.659313 line       496                         i_j_list.append((
excute 13:46:32.663302 line       497                             i, j,
excute 13:46:32.666296 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.669285 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0)]
excute 13:46:32.672308 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:32.676299 line       494                         if (i == j):
excute 13:46:32.680258 line       496                         i_j_list.append((
excute 13:46:32.683279 line       497                             i, j,
excute 13:46:32.687256 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.690261 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0)]
excute 13:46:32.693255 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:32.697245 line       494                         if (i == j):
excute 13:46:32.701200 line       496                         i_j_list.append((
excute 13:46:32.704224 line       497                             i, j,
excute 13:46:32.708182 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.711174 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0)]
excute 13:46:32.716161 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:32.720163 line       494                         if (i == j):
excute 13:46:32.724141 line       495                             continue
excute 13:46:32.727131 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:32.730124 line       494                         if (i == j):
excute 13:46:32.734113 line       496                         i_j_list.append((
excute 13:46:32.738102 line       497                             i, j,
excute 13:46:32.742092 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.745120 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0)]
excute 13:46:32.749105 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:32.753061 line       494                         if (i == j):
excute 13:46:32.757084 line       496                         i_j_list.append((
excute 13:46:32.760044 line       497                             i, j,
excute 13:46:32.763036 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.767028 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1)]
excute 13:46:32.771014 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:32.774007 line       494                         if (i == j):
excute 13:46:32.777996 line       496                         i_j_list.append((
excute 13:46:32.781985 line       497                             i, j,
excute 13:46:32.785974 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.789964 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2)]
excute 13:46:32.793952 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:32.796946 line       494                         if (i == j):
excute 13:46:32.800934 line       496                         i_j_list.append((
excute 13:46:32.804935 line       497                             i, j,
excute 13:46:32.807917 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.810908 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0)]
excute 13:46:32.814897 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:32.818887 line       494                         if (i == j):
excute 13:46:32.822889 line       496                         i_j_list.append((
excute 13:46:32.826866 line       497                             i, j,
excute 13:46:32.829858 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.832850 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0)]
excute 13:46:32.836838 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:32.840827 line       494                         if (i == j):
excute 13:46:32.846812 line       496                         i_j_list.append((
excute 13:46:32.849802 line       497                             i, j,
excute 13:46:32.852794 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.856783 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0)]
excute 13:46:32.859775 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:32.863766 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:46:32.866756 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:32.870761 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:32.873738 line       494                         if (i == j):
excute 13:46:32.877728 line       496                         i_j_list.append((
excute 13:46:32.880720 line       497                             i, j,
excute 13:46:32.883712 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.887702 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0)]
excute 13:46:32.891694 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:32.896693 line       494                         if (i == j):
excute 13:46:32.900668 line       496                         i_j_list.append((
excute 13:46:32.903660 line       497                             i, j,
excute 13:46:32.908647 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.912634 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0)]
excute 13:46:32.915626 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:32.919616 line       494                         if (i == j):
excute 13:46:32.923619 line       496                         i_j_list.append((
excute 13:46:32.926596 line       497                             i, j,
excute 13:46:32.929589 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.932581 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0)]
excute 13:46:32.935573 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:32.939562 line       494                         if (i == j):
excute 13:46:32.943552 line       496                         i_j_list.append((
excute 13:46:32.948540 line       497                             i, j,
excute 13:46:32.952530 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.956519 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0)]
excute 13:46:32.960509 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:32.965496 line       494                         if (i == j):
excute 13:46:32.969482 line       495                             continue
excute 13:46:32.972474 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:32.975466 line       494                         if (i == j):
excute 13:46:32.979456 line       496                         i_j_list.append((
excute 13:46:32.982448 line       497                             i, j,
excute 13:46:32.986438 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:32.989429 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1)]
excute 13:46:32.992420 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:32.996410 line       494                         if (i == j):
excute 13:46:32.999402 line       496                         i_j_list.append((
excute 13:46:33.003391 line       497                             i, j,
excute 13:46:33.006383 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.010373 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2)]
excute 13:46:33.013365 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:33.017355 line       494                         if (i == j):
excute 13:46:33.020346 line       496                         i_j_list.append((
excute 13:46:33.024336 line       497                             i, j,
excute 13:46:33.027327 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.030319 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0)]
excute 13:46:33.034310 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:33.037301 line       494                         if (i == j):
excute 13:46:33.041291 line       496                         i_j_list.append((
excute 13:46:33.045281 line       497                             i, j,
excute 13:46:33.049269 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.054256 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0)]
excute 13:46:33.058245 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:33.062237 line       494                         if (i == j):
excute 13:46:33.066226 line       496                         i_j_list.append((
excute 13:46:33.070215 line       497                             i, j,
excute 13:46:33.074204 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.077196 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0)]
excute 13:46:33.081186 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:33.084178 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:46:33.088167 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:33.092159 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:33.095149 line       494                         if (i == j):
excute 13:46:33.099139 line       496                         i_j_list.append((
excute 13:46:33.102130 line       497                             i, j,
excute 13:46:33.105122 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.109110 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0)]
excute 13:46:33.113099 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:33.117090 line       494                         if (i == j):
excute 13:46:33.121080 line       496                         i_j_list.append((
excute 13:46:33.125072 line       497                             i, j,
excute 13:46:33.128060 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.132050 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0)]
excute 13:46:33.136039 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:33.140028 line       494                         if (i == j):
excute 13:46:33.144017 line       496                         i_j_list.append((
excute 13:46:33.148006 line       497                             i, j,
excute 13:46:33.151996 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.155985 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0)]
excute 13:46:33.159974 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:33.163000 line       494                         if (i == j):
excute 13:46:33.166972 line       496                         i_j_list.append((
excute 13:46:33.169978 line       497                             i, j,
excute 13:46:33.173938 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.176960 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0)]
excute 13:46:33.179952 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:33.183924 line       494                         if (i == j):
excute 13:46:33.187900 line       496                         i_j_list.append((
excute 13:46:33.190922 line       497                             i, j,
excute 13:46:33.194879 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.197905 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0)]
excute 13:46:33.201893 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:33.205852 line       494                         if (i == j):
excute 13:46:33.208874 line       495                             continue
excute 13:46:33.212838 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:33.215858 line       494                         if (i == j):
excute 13:46:33.219847 line       496                         i_j_list.append((
excute 13:46:33.222837 line       497                             i, j,
excute 13:46:33.225828 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.229818 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2)]
excute 13:46:33.232810 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:33.236769 line       494                         if (i == j):
excute 13:46:33.241755 line       496                         i_j_list.append((
excute 13:46:33.248736 line       497                             i, j,
excute 13:46:33.254727 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.261716 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0)]
excute 13:46:33.268682 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:33.273670 line       494                         if (i == j):
excute 13:46:33.279654 line       496                         i_j_list.append((
excute 13:46:33.283674 line       497                             i, j,
excute 13:46:33.286666 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.289658 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0)]
excute 13:46:33.293649 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:33.296640 line       494                         if (i == j):
excute 13:46:33.300631 line       496                         i_j_list.append((
excute 13:46:33.304619 line       497                             i, j,
excute 13:46:33.307610 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.310602 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0)]
excute 13:46:33.314593 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:33.318549 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:46:33.321541 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:33.325531 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:33.333512 line       494                         if (i == j):
excute 13:46:33.339503 line       496                         i_j_list.append((
excute 13:46:33.342517 line       497                             i, j,
excute 13:46:33.347473 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.351496 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0)]
excute 13:46:33.355453 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:33.360439 line       494                         if (i == j):
excute 13:46:33.364429 line       496                         i_j_list.append((
excute 13:46:33.367421 line       497                             i, j,
excute 13:46:33.371410 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.375399 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 0)]
excute 13:46:33.379388 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:33.384374 line       494                         if (i == j):
excute 13:46:33.388364 line       496                         i_j_list.append((
excute 13:46:33.392353 line       497                             i, j,
excute 13:46:33.396343 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.399335 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0)]
excute 13:46:33.403324 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:33.407314 line       494                         if (i == j):
excute 13:46:33.411302 line       496                         i_j_list.append((
excute 13:46:33.415292 line       497                             i, j,
excute 13:46:33.419282 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.422274 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0)]
excute 13:46:33.426263 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:33.430253 line       494                         if (i == j):
excute 13:46:33.434240 line       496                         i_j_list.append((
excute 13:46:33.437232 line       497                             i, j,
excute 13:46:33.441222 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.444213 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0)]
excute 13:46:33.447205 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:33.452191 line       494                         if (i == j):
excute 13:46:33.456181 line       496                         i_j_list.append((
excute 13:46:33.460171 line       497                             i, j,
excute 13:46:33.465190 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.468183 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1)]
excute 13:46:33.472170 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:33.476136 line       494                         if (i == j):
excute 13:46:33.480129 line       495                             continue
excute 13:46:33.484120 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:33.487100 line       494                         if (i == j):
excute 13:46:33.491090 line       496                         i_j_list.append((
excute 13:46:33.495079 line       497                             i, j,
excute 13:46:33.499068 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.502060 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0)]
excute 13:46:33.506049 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:33.511037 line       494                         if (i == j):
excute 13:46:33.517019 line       496                         i_j_list.append((
excute 13:46:33.520011 line       497                             i, j,
excute 13:46:33.523003 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.526993 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 0)]
excute 13:46:33.529986 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:33.534973 line       494                         if (i == j):
excute 13:46:33.539992 line       496                         i_j_list.append((
excute 13:46:33.543947 line       497                             i, j,
excute 13:46:33.547937 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.550931 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0)]
excute 13:46:33.553921 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:33.557909 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:46:33.560901 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:33.565890 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:33.568880 line       494                         if (i == j):
excute 13:46:33.572870 line       496                         i_j_list.append((
excute 13:46:33.576891 line       497                             i, j,
excute 13:46:33.579884 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.582876 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0)]
excute 13:46:33.586865 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:33.590822 line       494                         if (i == j):
excute 13:46:33.593813 line       496                         i_j_list.append((
excute 13:46:33.597804 line       497                             i, j,
excute 13:46:33.600794 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.603787 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0)]
excute 13:46:33.606779 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:33.610768 line       494                         if (i == j):
excute 13:46:33.614757 line       496                         i_j_list.append((
excute 13:46:33.617749 line       497                             i, j,
excute 13:46:33.621739 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.624730 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0)]
excute 13:46:33.627723 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:33.631712 line       494                         if (i == j):
excute 13:46:33.635701 line       496                         i_j_list.append((
excute 13:46:33.639690 line       497                             i, j,
excute 13:46:33.642682 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.645674 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0)]
excute 13:46:33.648667 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:33.652656 line       494                         if (i == j):
excute 13:46:33.656657 line       496                         i_j_list.append((
excute 13:46:33.659637 line       497                             i, j,
excute 13:46:33.662629 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.666618 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0)]
excute 13:46:33.670611 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:33.674599 line       494                         if (i == j):
excute 13:46:33.679585 line       496                         i_j_list.append((
excute 13:46:33.683574 line       497                             i, j,
excute 13:46:33.687564 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.690555 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1)]
excute 13:46:33.694544 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:33.698534 line       494                         if (i == j):
excute 13:46:33.702524 line       496                         i_j_list.append((
excute 13:46:33.705515 line       497                             i, j,
excute 13:46:33.709505 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.713493 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 2)]
excute 13:46:33.717484 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:33.721475 line       494                         if (i == j):
excute 13:46:33.725464 line       495                             continue
excute 13:46:33.728455 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:33.732445 line       494                         if (i == j):
excute 13:46:33.735436 line       496                         i_j_list.append((
excute 13:46:33.739425 line       497                             i, j,
excute 13:46:33.743415 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.747402 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 2), (7, 8, 0, 0)]
excute 13:46:33.750396 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:33.755385 line       494                         if (i == j):
excute 13:46:33.759374 line       496                         i_j_list.append((
excute 13:46:33.762363 line       497                             i, j,
excute 13:46:33.766352 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.769344 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 2), (7, 8, 0, 0), (7, 9, 0, 0)]
excute 13:46:33.774334 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:33.778322 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:46:33.782311 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:33.785303 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:33.789292 line       494                         if (i == j):
excute 13:46:33.793282 line       496                         i_j_list.append((
excute 13:46:33.797271 line       497                             i, j,
excute 13:46:33.801260 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.804252 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 2), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0)]
excute 13:46:33.808243 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:33.812230 line       494                         if (i == j):
excute 13:46:33.815224 line       496                         i_j_list.append((
excute 13:46:33.819212 line       497                             i, j,
excute 13:46:33.823201 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.826194 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 2), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0)]
excute 13:46:33.830183 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:33.835169 line       494                         if (i == j):
excute 13:46:33.839171 line       496                         i_j_list.append((
excute 13:46:33.842151 line       497                             i, j,
excute 13:46:33.846153 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.849133 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 2), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0)]
excute 13:46:33.852124 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:33.857112 line       494                         if (i == j):
excute 13:46:33.861101 line       496                         i_j_list.append((
excute 13:46:33.864092 line       497                             i, j,
excute 13:46:33.868082 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.871074 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 2), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0)]
excute 13:46:33.876060 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:33.880048 line       494                         if (i == j):
excute 13:46:33.883040 line       496                         i_j_list.append((
excute 13:46:33.887029 line       497                             i, j,
excute 13:46:33.890021 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.893013 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 2), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0)]
excute 13:46:33.897002 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:33.899994 line       494                         if (i == j):
excute 13:46:33.903984 line       496                         i_j_list.append((
excute 13:46:33.907975 line       497                             i, j,
excute 13:46:33.910967 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.914956 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 2), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1)]
excute 13:46:33.918945 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:33.922934 line       494                         if (i == j):
excute 13:46:33.926935 line       496                         i_j_list.append((
excute 13:46:33.930914 line       497                             i, j,
excute 13:46:33.933906 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.937895 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 2), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1), (8, 6, 2, 2)]
excute 13:46:33.941885 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:33.945875 line       494                         if (i == j):
excute 13:46:33.949863 line       496                         i_j_list.append((
excute 13:46:33.953853 line       497                             i, j,
excute 13:46:33.957841 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:33.960831 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 2), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1), (8, 6, 2, 2), (8, 7, 2, 0)]
excute 13:46:33.967832 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:33.972801 line       494                         if (i == j):
excute 13:46:33.977789 line       495                             continue
excute 13:46:33.981778 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:33.985777 line       494                         if (i == j):
excute 13:46:33.988760 line       496                         i_j_list.append((
excute 13:46:33.992748 line       497                             i, j,
excute 13:46:33.996736 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:34.000732 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 2), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1), (8, 6, 2, 2), (8, 7, 2, 0), (8, 9, 2, 0)]
excute 13:46:34.003718 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:34.007706 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:46:34.011696 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:34.015686 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:34.018679 line       494                         if (i == j):
excute 13:46:34.022670 line       496                         i_j_list.append((
excute 13:46:34.025660 line       497                             i, j,
excute 13:46:34.029648 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:34.032641 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 2), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1), (8, 6, 2, 2), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 0)]
excute 13:46:34.035633 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:34.039623 line       494                         if (i == j):
excute 13:46:34.043614 line       496                         i_j_list.append((
excute 13:46:34.047600 line       497                             i, j,
excute 13:46:34.050592 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:34.053584 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 2), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1), (8, 6, 2, 2), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 0), (9, 1, 1, 0)]
excute 13:46:34.057573 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:34.061563 line       494                         if (i == j):
excute 13:46:34.065556 line       496                         i_j_list.append((
excute 13:46:34.068544 line       497                             i, j,
excute 13:46:34.071536 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:34.075525 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 2), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1), (8, 6, 2, 2), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0)]
excute 13:46:34.079516 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:34.083505 line       494                         if (i == j):
excute 13:46:34.087495 line       496                         i_j_list.append((
excute 13:46:34.090519 line       497                             i, j,
excute 13:46:34.094475 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:34.097498 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 2), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1), (8, 6, 2, 2), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0)]
excute 13:46:34.100490 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:34.104448 line       494                         if (i == j):
excute 13:46:34.108439 line       496                         i_j_list.append((
excute 13:46:34.111461 line       497                             i, j,
excute 13:46:34.114455 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:34.118443 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 2), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1), (8, 6, 2, 2), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0)]
excute 13:46:34.121434 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:34.125394 line       494                         if (i == j):
excute 13:46:34.130382 line       496                         i_j_list.append((
excute 13:46:34.134370 line       497                             i, j,
excute 13:46:34.138357 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:34.141349 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 2), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1), (8, 6, 2, 2), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 1)]
excute 13:46:34.144341 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:34.148330 line       494                         if (i == j):
excute 13:46:34.152320 line       496                         i_j_list.append((
excute 13:46:34.156310 line       497                             i, j,
excute 13:46:34.159302 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:34.163292 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 2), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1), (8, 6, 2, 2), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 1), (9, 6, 1, 2)]
excute 13:46:34.167280 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:34.171270 line       494                         if (i == j):
excute 13:46:34.176257 line       496                         i_j_list.append((
excute 13:46:34.183238 line       497                             i, j,
excute 13:46:34.186229 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:34.190219 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 2), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1), (8, 6, 2, 2), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 1), (9, 6, 1, 2), (9, 7, 1, 0)]
excute 13:46:34.193211 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:34.197200 line       494                         if (i == j):
excute 13:46:34.201191 line       496                         i_j_list.append((
excute 13:46:34.205180 line       497                             i, j,
excute 13:46:34.208173 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:34.212163 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 2), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 2), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 2), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 2), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 2), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1), (8, 6, 2, 2), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 1), (9, 6, 1, 2), (9, 7, 1, 0), (9, 8, 1, 0)]
excute 13:46:34.215154 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:34.219143 line       494                         if (i == j):
excute 13:46:34.223132 line       495                             continue
excute 13:46:34.227124 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:34.231111 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:46:34.235101 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (0, 5, -2, 1), (0, 6, -2, 2), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (5, 6, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (1, 5, 0, 1), (4, 5, 0, 1), (7, 5, 0, 1), (1, 6, 0, 2), (4, 6, 0, 2), (7, 6, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0), (2, 5, 1, 1), (9, 5, 1, 1), (2, 6, 1, 2), (9, 6, 1, 2), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (6, 5, 2, 1), (8, 5, 2, 1), (8, 6, 2, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (3, 5, 10, 1), (3, 6, 10, 2)]
excute 13:46:34.238092 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:46:34.243078 line       505                     if (self.RELOCATE):
excute 13:46:34.246072 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:46:34.250060 line       505                     if (self.RELOCATE):
excute 13:46:34.255047 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:46:34.259037 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, -2, 0)
excute 13:46:34.266017 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:46:34.271004 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:34.274993 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.281974 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, -2, 0)
excute 13:46:34.286962 line       556                     i = i_j[0]
excute 13:46:34.290951 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:34.293943 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.297933 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, -2, 0)
excute 13:46:34.301921 line       556                     i = i_j[0]
excute 13:46:34.305912 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:34.308904 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.312891 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, -2, 0)
excute 13:46:34.315885 line       556                     i = i_j[0]
excute 13:46:34.320873 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:34.323864 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.331883 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, -2, 0)
excute 13:46:34.337826 line       556                     i = i_j[0]
excute 13:46:34.343808 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:34.348796 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.352786 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, -2, 0)
excute 13:46:34.356775 line       556                     i = i_j[0]
excute 13:46:34.361762 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:34.364755 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.368744 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, -2, 0)
excute 13:46:34.371734 line       556                     i = i_j[0]
excute 13:46:34.375725 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:34.379713 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.383702 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, -2, 1)
excute 13:46:34.389718 line       556                     i = i_j[0]
excute 13:46:34.393710 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:34.397665 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.401655 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, -2, 2)
excute 13:46:34.404679 line       556                     i = i_j[0]
excute 13:46:34.408638 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:34.411659 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.415648 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, -1, 0)
excute 13:46:34.420604 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:46:34.424592 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:34.429580 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.433571 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, -1, 0)
excute 13:46:34.436562 line       556                     i = i_j[0]
excute 13:46:34.440552 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:34.444541 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.449529 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, -1, 0)
excute 13:46:34.453517 line       556                     i = i_j[0]
excute 13:46:34.457507 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:34.460498 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.465484 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, -1, 0)
excute 13:46:34.469472 line       556                     i = i_j[0]
excute 13:46:34.472464 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:34.476453 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.480443 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, -1, 0)
excute 13:46:34.483435 line       556                     i = i_j[0]
excute 13:46:34.487424 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:34.491429 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.495435 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, -1, 0)
excute 13:46:34.499424 line       556                     i = i_j[0]
excute 13:46:34.502416 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:34.506405 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.510396 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, -1, 0)
excute 13:46:34.514354 line       556                     i = i_j[0]
excute 13:46:34.517347 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:34.521335 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.525324 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, -1, 0)
excute 13:46:34.529314 line       556                     i = i_j[0]
excute 13:46:34.533304 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:34.537293 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.541282 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, -1, 2)
excute 13:46:34.544275 line       556                     i = i_j[0]
excute 13:46:34.548262 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:34.552252 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.556241 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 0, 0)
excute 13:46:34.559232 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:46:34.563221 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:34.567212 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.571202 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 0, 0)
excute 13:46:34.574225 line       556                     i = i_j[0]
excute 13:46:34.578214 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:34.581205 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.585198 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 0, 0)
excute 13:46:34.589185 line       556                     i = i_j[0]
excute 13:46:34.593143 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:34.597131 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.601120 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 0, 0)
excute 13:46:34.611259 line       556                     i = i_j[0]
excute 13:46:34.616247 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:34.622256 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.627217 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 0, 0)
excute 13:46:34.630239 line       556                     i = i_j[0]
excute 13:46:34.635197 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:34.639184 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.643173 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 0, 0)
excute 13:46:34.646166 line       556                     i = i_j[0]
excute 13:46:34.650155 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:34.654145 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.658135 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 0, 0)
excute 13:46:34.661125 line       556                     i = i_j[0]
excute 13:46:34.665115 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:34.670102 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.674092 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 0, 0)
excute 13:46:34.677083 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:46:34.681073 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:34.684064 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.689052 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 0, 0)
excute 13:46:34.692043 line       556                     i = i_j[0]
excute 13:46:34.698028 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:34.702016 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.706007 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 0, 0)
excute 13:46:34.709995 line       556                     i = i_j[0]
excute 13:46:34.713985 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:34.717974 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.721964 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 0, 0)
excute 13:46:34.725950 line       556                     i = i_j[0]
excute 13:46:34.728945 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:34.732933 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.736923 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 0, 0)
excute 13:46:34.740912 line       556                     i = i_j[0]
excute 13:46:34.744902 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:34.748891 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.752881 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 0, 0)
excute 13:46:34.756870 line       556                     i = i_j[0]
excute 13:46:34.760859 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:34.764848 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.768838 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 0, 0)
excute 13:46:34.771830 line       556                     i = i_j[0]
excute 13:46:34.775819 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:34.779808 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.783798 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 0, 0)
excute 13:46:34.787787 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:46:34.791775 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:34.795767 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.800753 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 0, 0)
excute 13:46:34.804741 line       556                     i = i_j[0]
excute 13:46:34.808731 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:34.812720 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.816710 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 0, 0)
excute 13:46:34.820699 line       556                     i = i_j[0]
excute 13:46:34.824720 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:34.827712 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.831669 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 0, 0)
excute 13:46:34.834691 line       556                     i = i_j[0]
excute 13:46:34.838685 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:34.841674 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.845662 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 0, 0)
excute 13:46:34.849619 line       556                     i = i_j[0]
excute 13:46:34.852643 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:34.856632 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.860597 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 0, 0)
excute 13:46:34.863613 line       556                     i = i_j[0]
excute 13:46:34.867607 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:34.871562 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.874585 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 0, 0)
excute 13:46:34.880539 line       556                     i = i_j[0]
excute 13:46:34.884527 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:34.887518 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.891511 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 0, 1)
excute 13:46:34.894500 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:46:34.898490 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:34.902484 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.906468 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 0, 1)
excute 13:46:34.909460 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:46:34.913449 line       557                     j = i_j[1]
excute 13:46:34.917439 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.920430 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 0, 1)
excute 13:46:34.924421 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:46:34.927411 line       557                     j = i_j[1]
excute 13:46:34.931401 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.935392 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 0, 2)
excute 13:46:34.938383 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:46:34.942372 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:34.946361 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.950387 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 0, 2)
excute 13:46:34.954372 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:46:34.958331 line       557                     j = i_j[1]
excute 13:46:34.962330 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.966307 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 0, 2)
excute 13:46:34.969300 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:46:34.973289 line       557                     j = i_j[1]
excute 13:46:34.977279 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.980270 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 1, 0)
excute 13:46:34.984261 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:46:34.987251 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:34.991242 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:34.995244 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 1, 0)
excute 13:46:34.998223 line       556                     i = i_j[0]
excute 13:46:35.002213 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:35.007199 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.011189 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 1, 0)
excute 13:46:35.015178 line       556                     i = i_j[0]
excute 13:46:35.019167 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:35.022159 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.026149 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 1, 0)
excute 13:46:35.030138 line       556                     i = i_j[0]
excute 13:46:35.034127 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:35.038117 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.041108 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 1, 0)
excute 13:46:35.045098 line       556                     i = i_j[0]
excute 13:46:35.049087 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:35.053076 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.056068 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 1, 0)
excute 13:46:35.060057 line       556                     i = i_j[0]
excute 13:46:35.064053 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:35.067039 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.071029 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 1, 0)
excute 13:46:35.074020 line       556                     i = i_j[0]
excute 13:46:35.078010 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:35.082000 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.084990 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 0)
excute 13:46:35.088980 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:46:35.091971 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:35.095961 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.099951 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 0)
excute 13:46:35.102942 line       556                     i = i_j[0]
excute 13:46:35.106933 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:35.110921 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.114912 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:46:35.118900 line       556                     i = i_j[0]
excute 13:46:35.121892 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:35.125882 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.128873 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 0)
excute 13:46:35.132863 line       556                     i = i_j[0]
excute 13:46:35.136852 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:35.139844 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.143833 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 0)
excute 13:46:35.147822 line       556                     i = i_j[0]
excute 13:46:35.151817 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:35.154804 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.158795 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 0)
excute 13:46:35.161786 line       556                     i = i_j[0]
excute 13:46:35.165776 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:35.169765 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.173754 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 0)
excute 13:46:35.177744 line       556                     i = i_j[0]
excute 13:46:35.181733 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:35.185721 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.189711 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 1, 1)
excute 13:46:35.193699 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:46:35.198688 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:35.202677 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.206665 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 1)
excute 13:46:35.210657 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:46:35.214646 line       557                     j = i_j[1]
excute 13:46:35.218635 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.221625 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 1, 2)
excute 13:46:35.224617 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:46:35.228609 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:35.232597 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.236586 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 113
excute 13:46:35.239578 line       560                         if (t_tmp > self.TIME):
excute 13:46:35.243569 line       563                             if (available_vhecles[i][t] == 0):
excute 13:46:35.246558 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:46:35.250549 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:46:35.253541 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:46:35.257530 line       569                                     available_vhecles[i][t],
excute 13:46:35.260522 line       570                                     available_vhecles[j][t_tmp],
excute 13:46:35.264511 line       571                                     self.S_capacities[j],
excute 13:46:35.267503 line       572                                     demands[t][i][j],
excute 13:46:35.271493 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 1
calc_contract     Starting var:.. available_vhecles_target = 3
calc_contract     Starting var:.. capacity_target = 4
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 101
calc_contract     13:46:35.274485 call       352     def caluculate_contract(
calc_contract     13:46:35.278474 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:46:35.278474 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:46:35.279472 line       362         if (available_vhecles_start >= demand):
calc_contract     13:46:35.280471 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:46:35.281467 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:46:35.281467 line       385         return [can_contract, rsf, rse]
calc_contract     13:46:35.282465 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:46:35.284459 line       575                                 rsf += rsf_tmp
excute 13:46:35.287450 line       576                                 rse += rse_tmp
excute 13:46:35.293434 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
move_cars     Starting var:.. i = 2
move_cars     Starting var:.. j = 6
move_cars     Starting var:.. t = 101
move_cars     Starting var:.. t_tmp = 113
move_cars     Starting var:.. can_contract = 1
move_cars     13:46:35.299419 call       388     def move_cars(
move_cars     13:46:35.305402 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:46:35.308395 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:46:35.309392 line       399         return available_vhecles
move_cars     13:46:35.312384 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -8, -8, -8, -6, -6, -6, -6, -6, -6, -6, -6, -6, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute 13:46:35.316373 line       579                                 success += can_contract
excute Modified var:.. success = 40
excute 13:46:35.321360 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 2)
excute 13:46:35.325349 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:46:35.336321 line       557                     j = i_j[1]
excute 13:46:35.342303 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.347292 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 2, 0)
excute 13:46:35.351279 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:46:35.358262 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:35.362251 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.366239 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 2, 0)
excute 13:46:35.370229 line       556                     i = i_j[0]
excute 13:46:35.374221 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:35.377209 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.381199 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 2, 0)
excute 13:46:35.385189 line       556                     i = i_j[0]
excute 13:46:35.389178 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:35.393168 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.400150 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 2, 0)
excute 13:46:35.405135 line       556                     i = i_j[0]
excute 13:46:35.409124 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:35.413115 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.417104 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 2, 0)
excute 13:46:35.421092 line       556                     i = i_j[0]
excute 13:46:35.425082 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:35.428073 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.432063 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 2, 0)
excute 13:46:35.435055 line       556                     i = i_j[0]
excute 13:46:35.439044 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:35.442036 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.447025 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 2, 0)
excute 13:46:35.450016 line       556                     i = i_j[0]
excute 13:46:35.455003 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:35.457994 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.461983 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 2, 0)
excute 13:46:35.468964 line       556                     i = i_j[0]
excute 13:46:35.474950 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:35.479936 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.485919 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 2, 0)
excute 13:46:35.490907 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:46:35.497888 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:35.504870 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.510853 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 2, 0)
excute 13:46:35.514843 line       556                     i = i_j[0]
excute 13:46:35.523820 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:35.528807 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.533792 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 2, 0)
excute 13:46:35.536784 line       556                     i = i_j[0]
excute 13:46:35.543765 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:35.547754 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.553738 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 2, 0)
excute 13:46:35.559722 line       556                     i = i_j[0]
excute 13:46:35.565707 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:35.570693 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.575679 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 2, 0)
excute 13:46:35.580665 line       556                     i = i_j[0]
excute 13:46:35.586650 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:35.590638 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.594628 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 2, 0)
excute 13:46:35.598618 line       556                     i = i_j[0]
excute 13:46:35.605613 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:35.610586 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.614577 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 2, 0)
excute 13:46:35.618565 line       556                     i = i_j[0]
excute 13:46:35.624558 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:35.627540 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.631530 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 2, 1)
excute 13:46:35.635520 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:46:35.639510 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:35.643499 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.647489 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 2, 1)
excute 13:46:35.650480 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:46:35.655467 line       557                     j = i_j[1]
excute 13:46:35.658459 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.662449 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 2, 2)
excute 13:46:35.665440 line       556                     i = i_j[0]
excute 13:46:35.669430 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:35.672452 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.676410 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 10, 0)
excute 13:46:35.679434 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:46:35.683423 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:35.687412 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.691370 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 10, 0)
excute 13:46:35.694393 line       556                     i = i_j[0]
excute 13:46:35.699357 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:35.702373 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.706364 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 10, 0)
excute 13:46:35.709354 line       556                     i = i_j[0]
excute 13:46:35.713312 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:35.717302 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.720324 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 10, 0)
excute 13:46:35.724317 line       556                     i = i_j[0]
excute 13:46:35.729304 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:35.733271 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.736282 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 10, 0)
excute 13:46:35.740270 line       556                     i = i_j[0]
excute 13:46:35.744262 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:35.747252 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.751243 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 10, 0)
excute 13:46:35.754233 line       556                     i = i_j[0]
excute 13:46:35.759190 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:35.762182 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.767170 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 10, 0)
excute 13:46:35.770161 line       556                     i = i_j[0]
excute 13:46:35.774153 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:35.777174 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.781162 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 10, 1)
excute 13:46:35.785153 line       556                     i = i_j[0]
excute 13:46:35.789111 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:35.792103 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.796091 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 110
excute 13:46:35.800080 line       560                         if (t_tmp > self.TIME):
excute 13:46:35.804078 line       563                             if (available_vhecles[i][t] == 0):
excute 13:46:35.808060 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:46:35.811051 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:46:35.815041 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:46:35.819030 line       569                                     available_vhecles[i][t],
excute 13:46:35.823019 line       570                                     available_vhecles[j][t_tmp],
excute 13:46:35.827009 line       571                                     self.S_capacities[j],
excute 13:46:35.831994 line       572                                     demands[t][i][j],
excute 13:46:35.835983 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = -8
calc_contract     Starting var:.. available_vhecles_target = 2
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 101
calc_contract     13:46:35.838974 call       352     def caluculate_contract(
calc_contract     13:46:35.841980 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:46:35.842966 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:46:35.843963 line       362         if (available_vhecles_start >= demand):
calc_contract     13:46:35.844992 line       373             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:46:35.844992 line       375                 can_contract = available_vhecles_target
calc_contract     New var:....... can_contract = 2
calc_contract     13:46:35.845957 line       376                 rse += (demand - available_vhecles_start)
calc_contract     Modified var:.. rse = 9
calc_contract     13:46:35.845957 line       385         return [can_contract, rsf, rse]
calc_contract     13:46:35.846956 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [2, 0, 9]
excute Modified var:.. can_contract = 2
excute Modified var:.. rse_tmp = 9
excute 13:46:35.847953 line       575                                 rsf += rsf_tmp
excute 13:46:35.851977 line       576                                 rse += rse_tmp
excute Modified var:.. rse = 125
excute 13:46:35.855961 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
move_cars     Starting var:.. i = 3
move_cars     Starting var:.. j = 5
move_cars     Starting var:.. t = 101
move_cars     Starting var:.. t_tmp = 110
move_cars     Starting var:.. can_contract = 2
move_cars     13:46:35.859921 call       388     def move_cars(
move_cars     13:46:35.863910 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:46:35.865905 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:46:35.866933 line       399         return available_vhecles
move_cars     13:46:35.867930 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute 13:46:35.870890 line       579                                 success += can_contract
excute Modified var:.. success = 42
excute 13:46:35.873914 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 10, 2)
excute 13:46:35.877902 line       556                     i = i_j[0]
excute 13:46:35.881860 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:35.884885 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:35.888876 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 115
excute 13:46:35.892854 line       560                         if (t_tmp > self.TIME):
excute 13:46:35.895855 line       563                             if (available_vhecles[i][t] == 0):
excute 13:46:35.899848 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:46:35.902836 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 128
excute 13:46:35.906811 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:46:35.910783 line       555                 for i_j in i_j_list:
excute 13:46:35.913776 line       581             self.write_matrix(
excute 13:46:35.920757 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:46:35.923750 line       583                 result_file_path,
excute 13:46:35.930730 line       584                 mode='a'
excute 13:46:35.941709 line       488         for t in time_steps:
excute Modified var:.. t = 102
excute 13:46:35.946688 line       489             if (t != self.TIME + 1):
excute 13:46:35.952671 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:46:35.956663 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:46:35.962646 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:46:35.966634 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:35.970623 line       494                         if (i == j):
excute 13:46:35.977606 line       495                             continue
excute 13:46:35.981595 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:35.986580 line       494                         if (i == j):
excute 13:46:35.990572 line       496                         i_j_list.append((
excute 13:46:35.995557 line       497                             i, j,
excute 13:46:36.001541 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:36.005531 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3)]
excute 13:46:36.014522 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:36.024480 line       494                         if (i == j):
excute 13:46:36.033459 line       496                         i_j_list.append((
excute 13:46:36.040438 line       497                             i, j,
excute 13:46:36.043429 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:36.050419 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0)]
excute 13:46:36.053403 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:36.059387 line       494                         if (i == j):
excute 13:46:36.065371 line       496                         i_j_list.append((
excute 13:46:36.068363 line       497                             i, j,
excute 13:46:36.073349 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:36.079336 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0)]
excute 13:46:36.085318 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:36.089307 line       494                         if (i == j):
excute 13:46:36.093297 line       496                         i_j_list.append((
excute 13:46:36.098286 line       497                             i, j,
excute 13:46:36.103271 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:36.106261 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0)]
excute 13:46:36.109252 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:36.114241 line       494                         if (i == j):
excute 13:46:36.118229 line       496                         i_j_list.append((
excute 13:46:36.121221 line       497                             i, j,
excute 13:46:36.124212 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:36.127205 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0)]
excute 13:46:36.131195 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:36.139174 line       494                         if (i == j):
excute 13:46:36.145158 line       496                         i_j_list.append((
excute 13:46:36.148150 line       497                             i, j,
excute 13:46:36.154134 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:36.163110 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0)]
excute 13:46:36.166101 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:36.170091 line       494                         if (i == j):
excute 13:46:36.173082 line       496                         i_j_list.append((
excute 13:46:36.177071 line       497                             i, j,
excute 13:46:36.180064 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:36.183055 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0)]
excute 13:46:36.186047 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:36.190037 line       494                         if (i == j):
excute 13:46:36.194027 line       496                         i_j_list.append((
excute 13:46:36.197018 line       497                             i, j,
excute 13:46:36.200010 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:36.203002 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0)]
excute 13:46:36.205994 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:36.209983 line       494                         if (i == j):
excute 13:46:36.212975 line       496                         i_j_list.append((
excute 13:46:36.216971 line       497                             i, j,
excute 13:46:36.219956 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:36.222949 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0)]
excute 13:46:36.225940 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:36.229931 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:46:36.232922 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:36.236911 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:36.239904 line       494                         if (i == j):
excute 13:46:36.244895 line       496                         i_j_list.append((
excute 13:46:36.249878 line       497                             i, j,
excute 13:46:36.253866 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:36.257856 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0)]
excute 13:46:36.261845 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:36.264836 line       494                         if (i == j):
excute 13:46:36.268827 line       495                             continue
excute 13:46:36.271818 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:36.275809 line       494                         if (i == j):
excute 13:46:36.278800 line       496                         i_j_list.append((
excute 13:46:36.282797 line       497                             i, j,
excute 13:46:36.285812 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:36.288805 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0)]
excute 13:46:36.291796 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:36.295759 line       494                         if (i == j):
excute 13:46:36.299744 line       496                         i_j_list.append((
excute 13:46:36.302768 line       497                             i, j,
excute 13:46:36.305760 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:36.308751 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0)]
excute 13:46:36.311745 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:36.316702 line       494                         if (i == j):
excute 13:46:36.322684 line       496                         i_j_list.append((
excute 13:46:36.329665 line       497                             i, j,
excute 13:46:36.338641 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:36.345622 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0)]
excute 13:46:36.353599 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:36.360581 line       494                         if (i == j):
excute 13:46:36.364574 line       496                         i_j_list.append((
excute 13:46:36.369558 line       497                             i, j,
excute 13:46:36.374544 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:36.378534 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0)]
excute 13:46:36.384524 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:36.391498 line       494                         if (i == j):
excute 13:46:36.395489 line       496                         i_j_list.append((
excute 13:46:36.401471 line       497                             i, j,
excute 13:46:36.405460 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:36.413439 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0)]
excute 13:46:36.422415 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:36.426405 line       494                         if (i == j):
excute 13:46:36.431392 line       496                         i_j_list.append((
excute 13:46:36.435382 line       497                             i, j,
excute 13:46:36.441366 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:36.449345 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0)]
excute 13:46:36.458321 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:36.465301 line       494                         if (i == j):
excute 13:46:36.476273 line       496                         i_j_list.append((
excute 13:46:36.485247 line       497                             i, j,
excute 13:46:36.493226 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:36.498214 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0)]
excute 13:46:36.504197 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:36.512176 line       494                         if (i == j):
excute 13:46:36.517162 line       496                         i_j_list.append((
excute 13:46:36.525141 line       497                             i, j,
excute 13:46:36.532123 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:36.539103 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0)]
excute 13:46:36.545088 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:36.553067 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:46:36.561047 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:36.570021 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:36.577003 line       494                         if (i == j):
excute 13:46:36.582988 line       496                         i_j_list.append((
excute 13:46:36.586975 line       497                             i, j,
excute 13:46:36.593958 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:36.599942 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0)]
excute 13:46:36.606922 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:36.612908 line       494                         if (i == j):
excute 13:46:36.618892 line       496                         i_j_list.append((
excute 13:46:36.625873 line       497                             i, j,
excute 13:46:36.632855 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:36.640832 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3)]
excute 13:46:36.645818 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:36.652802 line       494                         if (i == j):
excute 13:46:36.660779 line       495                             continue
excute 13:46:36.665766 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:36.671748 line       494                         if (i == j):
excute 13:46:36.678731 line       496                         i_j_list.append((
excute 13:46:36.684715 line       497                             i, j,
excute 13:46:36.691697 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:36.698679 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0)]
excute 13:46:36.705659 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:36.711644 line       494                         if (i == j):
excute 13:46:36.719622 line       496                         i_j_list.append((
excute 13:46:36.725606 line       497                             i, j,
excute 13:46:36.731589 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:36.739568 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:46:36.743557 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:36.751536 line       494                         if (i == j):
excute 13:46:36.758519 line       496                         i_j_list.append((
excute 13:46:36.765498 line       497                             i, j,
excute 13:46:36.771483 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:36.777469 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:46:36.781456 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:36.786444 line       494                         if (i == j):
excute 13:46:36.790432 line       496                         i_j_list.append((
excute 13:46:36.794422 line       497                             i, j,
excute 13:46:36.798411 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:36.801402 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0)]
excute 13:46:36.805392 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:36.809380 line       494                         if (i == j):
excute 13:46:36.813371 line       496                         i_j_list.append((
excute 13:46:36.817360 line       497                             i, j,
excute 13:46:36.820353 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:36.824343 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:46:36.828332 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:36.832322 line       494                         if (i == j):
excute 13:46:36.836312 line       496                         i_j_list.append((
excute 13:46:36.839302 line       497                             i, j,
excute 13:46:36.842295 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:36.846285 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:46:36.849276 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:36.853266 line       494                         if (i == j):
excute 13:46:36.857255 line       496                         i_j_list.append((
excute 13:46:36.860245 line       497                             i, j,
excute 13:46:36.864236 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:36.867227 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:46:36.871217 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:36.875205 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:46:36.878198 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:36.882186 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:36.886177 line       494                         if (i == j):
excute 13:46:36.890179 line       496                         i_j_list.append((
excute 13:46:36.893158 line       497                             i, j,
excute 13:46:36.897148 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:36.900140 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0)]
excute 13:46:36.904129 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:36.908117 line       494                         if (i == j):
excute 13:46:36.911111 line       496                         i_j_list.append((
excute 13:46:36.915100 line       497                             i, j,
excute 13:46:36.919090 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:36.922081 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3)]
excute 13:46:36.926071 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:36.929063 line       494                         if (i == j):
excute 13:46:36.933052 line       496                         i_j_list.append((
excute 13:46:36.937041 line       497                             i, j,
excute 13:46:36.941031 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:36.944022 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0)]
excute 13:46:36.949008 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:36.952999 line       494                         if (i == j):
excute 13:46:36.957986 line       495                             continue
excute 13:46:36.960977 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:36.969952 line       494                         if (i == j):
excute 13:46:36.973942 line       496                         i_j_list.append((
excute 13:46:36.976934 line       497                             i, j,
excute 13:46:36.980924 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:36.984913 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0)]
excute 13:46:36.987905 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:36.991895 line       494                         if (i == j):
excute 13:46:36.994886 line       496                         i_j_list.append((
excute 13:46:36.998876 line       497                             i, j,
excute 13:46:37.002865 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.005857 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0)]
excute 13:46:37.009847 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:37.013836 line       494                         if (i == j):
excute 13:46:37.017825 line       496                         i_j_list.append((
excute 13:46:37.021815 line       497                             i, j,
excute 13:46:37.024806 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.028795 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0)]
excute 13:46:37.032785 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:37.036773 line       494                         if (i == j):
excute 13:46:37.040764 line       496                         i_j_list.append((
excute 13:46:37.043755 line       497                             i, j,
excute 13:46:37.046747 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.050737 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0)]
excute 13:46:37.053729 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:37.057718 line       494                         if (i == j):
excute 13:46:37.062704 line       496                         i_j_list.append((
excute 13:46:37.065696 line       497                             i, j,
excute 13:46:37.069687 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.073677 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0)]
excute 13:46:37.076668 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:37.080657 line       494                         if (i == j):
excute 13:46:37.084647 line       496                         i_j_list.append((
excute 13:46:37.087639 line       497                             i, j,
excute 13:46:37.091627 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.094620 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0)]
excute 13:46:37.097613 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:37.101602 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:46:37.104594 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:37.108582 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:37.111574 line       494                         if (i == j):
excute 13:46:37.115564 line       496                         i_j_list.append((
excute 13:46:37.118555 line       497                             i, j,
excute 13:46:37.122545 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.125537 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0)]
excute 13:46:37.128529 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:37.132518 line       494                         if (i == j):
excute 13:46:37.136509 line       496                         i_j_list.append((
excute 13:46:37.139498 line       497                             i, j,
excute 13:46:37.143488 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.146481 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3)]
excute 13:46:37.149472 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:37.153463 line       494                         if (i == j):
excute 13:46:37.157450 line       496                         i_j_list.append((
excute 13:46:37.160442 line       497                             i, j,
excute 13:46:37.163434 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.167425 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0)]
excute 13:46:37.170415 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:37.176413 line       494                         if (i == j):
excute 13:46:37.179424 line       496                         i_j_list.append((
excute 13:46:37.183381 line       497                             i, j,
excute 13:46:37.186405 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.189399 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0)]
excute 13:46:37.193355 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:37.196349 line       494                         if (i == j):
excute 13:46:37.200338 line       495                             continue
excute 13:46:37.204326 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:37.207319 line       494                         if (i == j):
excute 13:46:37.211308 line       496                         i_j_list.append((
excute 13:46:37.215297 line       497                             i, j,
excute 13:46:37.218290 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.222279 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0)]
excute 13:46:37.225271 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:37.229260 line       494                         if (i == j):
excute 13:46:37.233263 line       496                         i_j_list.append((
excute 13:46:37.237238 line       497                             i, j,
excute 13:46:37.240230 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.244220 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0)]
excute 13:46:37.247212 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:37.251202 line       494                         if (i == j):
excute 13:46:37.255191 line       496                         i_j_list.append((
excute 13:46:37.259180 line       497                             i, j,
excute 13:46:37.263170 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.266161 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0)]
excute 13:46:37.270151 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:37.275138 line       494                         if (i == j):
excute 13:46:37.279126 line       496                         i_j_list.append((
excute 13:46:37.283115 line       497                             i, j,
excute 13:46:37.286108 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.289099 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0)]
excute 13:46:37.292091 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:37.296081 line       494                         if (i == j):
excute 13:46:37.300071 line       496                         i_j_list.append((
excute 13:46:37.303062 line       497                             i, j,
excute 13:46:37.306054 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.309046 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0)]
excute 13:46:37.313036 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:37.316027 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:46:37.320017 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:37.324006 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:37.329990 line       494                         if (i == j):
excute 13:46:37.338967 line       496                         i_j_list.append((
excute 13:46:37.342954 line       497                             i, j,
excute 13:46:37.346945 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.350932 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0)]
excute 13:46:37.354922 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:37.358913 line       494                         if (i == j):
excute 13:46:37.362901 line       496                         i_j_list.append((
excute 13:46:37.365893 line       497                             i, j,
excute 13:46:37.369882 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.372875 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3)]
excute 13:46:37.375866 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:37.381854 line       494                         if (i == j):
excute 13:46:37.386870 line       496                         i_j_list.append((
excute 13:46:37.390859 line       497                             i, j,
excute 13:46:37.393850 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.397808 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0)]
excute 13:46:37.400831 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:37.404789 line       494                         if (i == j):
excute 13:46:37.407780 line       496                         i_j_list.append((
excute 13:46:37.411770 line       497                             i, j,
excute 13:46:37.414762 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.418752 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0)]
excute 13:46:37.421775 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:37.425734 line       494                         if (i == j):
excute 13:46:37.429724 line       496                         i_j_list.append((
excute 13:46:37.432746 line       497                             i, j,
excute 13:46:37.436705 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.439732 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0)]
excute 13:46:37.442720 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:37.447683 line       494                         if (i == j):
excute 13:46:37.451667 line       495                             continue
excute 13:46:37.455655 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:37.459644 line       494                         if (i == j):
excute 13:46:37.463633 line       496                         i_j_list.append((
excute 13:46:37.467636 line       497                             i, j,
excute 13:46:37.470616 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.473607 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0)]
excute 13:46:37.477596 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:37.481586 line       494                         if (i == j):
excute 13:46:37.486573 line       496                         i_j_list.append((
excute 13:46:37.490561 line       497                             i, j,
excute 13:46:37.494551 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.498540 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0)]
excute 13:46:37.502541 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:37.505551 line       494                         if (i == j):
excute 13:46:37.509541 line       496                         i_j_list.append((
excute 13:46:37.513500 line       497                             i, j,
excute 13:46:37.516492 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.520481 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0)]
excute 13:46:37.524469 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:37.528461 line       494                         if (i == j):
excute 13:46:37.532449 line       496                         i_j_list.append((
excute 13:46:37.535442 line       497                             i, j,
excute 13:46:37.539431 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.542423 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0)]
excute 13:46:37.546412 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:37.550403 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:46:37.553393 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:37.557383 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:37.561372 line       494                         if (i == j):
excute 13:46:37.566357 line       496                         i_j_list.append((
excute 13:46:37.569349 line       497                             i, j,
excute 13:46:37.573339 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.576332 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0)]
excute 13:46:37.580321 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:37.584311 line       494                         if (i == j):
excute 13:46:37.589296 line       496                         i_j_list.append((
excute 13:46:37.592289 line       497                             i, j,
excute 13:46:37.596279 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.599270 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 3)]
excute 13:46:37.602262 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:37.606251 line       494                         if (i == j):
excute 13:46:37.614231 line       496                         i_j_list.append((
excute 13:46:37.620213 line       497                             i, j,
excute 13:46:37.625199 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.632194 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 3), (6, 2, 2, 0)]
excute 13:46:37.637169 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:37.640161 line       494                         if (i == j):
excute 13:46:37.644149 line       496                         i_j_list.append((
excute 13:46:37.647141 line       497                             i, j,
excute 13:46:37.651130 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.654123 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 3), (6, 2, 2, 0), (6, 3, 2, 0)]
excute 13:46:37.657114 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:37.661103 line       494                         if (i == j):
excute 13:46:37.665093 line       496                         i_j_list.append((
excute 13:46:37.668085 line       497                             i, j,
excute 13:46:37.671077 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.674069 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 3), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0)]
excute 13:46:37.678058 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:37.682080 line       494                         if (i == j):
excute 13:46:37.686039 line       496                         i_j_list.append((
excute 13:46:37.690028 line       497                             i, j,
excute 13:46:37.694049 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.697040 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 3), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0)]
excute 13:46:37.700998 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:37.704022 line       494                         if (i == j):
excute 13:46:37.707979 line       495                             continue
excute 13:46:37.711001 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:37.714960 line       494                         if (i == j):
excute 13:46:37.718951 line       496                         i_j_list.append((
excute 13:46:37.722940 line       497                             i, j,
excute 13:46:37.726928 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.729921 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 3), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0)]
excute 13:46:37.733909 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:37.737899 line       494                         if (i == j):
excute 13:46:37.741890 line       496                         i_j_list.append((
excute 13:46:37.744882 line       497                             i, j,
excute 13:46:37.748871 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.752864 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 3), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0)]
excute 13:46:37.755853 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:37.760840 line       494                         if (i == j):
excute 13:46:37.764829 line       496                         i_j_list.append((
excute 13:46:37.767820 line       497                             i, j,
excute 13:46:37.771810 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.774802 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 3), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0)]
excute 13:46:37.778800 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:37.782781 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:46:37.785773 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:37.789763 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:37.793782 line       494                         if (i == j):
excute 13:46:37.797741 line       496                         i_j_list.append((
excute 13:46:37.800762 line       497                             i, j,
excute 13:46:37.803756 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.807743 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 3), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0)]
excute 13:46:37.810737 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:37.814695 line       494                         if (i == j):
excute 13:46:37.817716 line       496                         i_j_list.append((
excute 13:46:37.821676 line       497                             i, j,
excute 13:46:37.828656 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.831680 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 3), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 3)]
excute 13:46:37.835672 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:37.839629 line       494                         if (i == j):
excute 13:46:37.843618 line       496                         i_j_list.append((
excute 13:46:37.847607 line       497                             i, j,
excute 13:46:37.850599 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.854588 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 3), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 3), (7, 2, 0, 0)]
excute 13:46:37.858577 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:37.861603 line       494                         if (i == j):
excute 13:46:37.865557 line       496                         i_j_list.append((
excute 13:46:37.868549 line       497                             i, j,
excute 13:46:37.872549 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.875530 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 3), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 3), (7, 2, 0, 0), (7, 3, 0, 0)]
excute 13:46:37.878523 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:37.882512 line       494                         if (i == j):
excute 13:46:37.886502 line       496                         i_j_list.append((
excute 13:46:37.889493 line       497                             i, j,
excute 13:46:37.892486 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.897504 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 3), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 3), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0)]
excute 13:46:37.901493 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:37.904484 line       494                         if (i == j):
excute 13:46:37.908474 line       496                         i_j_list.append((
excute 13:46:37.912441 line       497                             i, j,
excute 13:46:37.915459 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.918452 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 3), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 3), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0)]
excute 13:46:37.922424 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:37.925429 line       494                         if (i == j):
excute 13:46:37.929419 line       496                         i_j_list.append((
excute 13:46:37.932410 line       497                             i, j,
excute 13:46:37.936385 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.939395 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 3), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 3), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0)]
excute 13:46:37.942388 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:37.947374 line       494                         if (i == j):
excute 13:46:37.952328 line       495                             continue
excute 13:46:37.956316 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:37.959308 line       494                         if (i == j):
excute 13:46:37.963298 line       496                         i_j_list.append((
excute 13:46:37.967287 line       497                             i, j,
excute 13:46:37.970279 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.974268 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 3), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 3), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0)]
excute 13:46:37.978258 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:37.982245 line       494                         if (i == j):
excute 13:46:37.986236 line       496                         i_j_list.append((
excute 13:46:37.989258 line       497                             i, j,
excute 13:46:37.993248 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:37.997207 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 3), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 3), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0)]
excute 13:46:38.000229 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:38.004219 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:46:38.008209 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:38.012199 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:38.015189 line       494                         if (i == j):
excute 13:46:38.019149 line       496                         i_j_list.append((
excute 13:46:38.022169 line       497                             i, j,
excute 13:46:38.026129 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:38.029151 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 3), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 3), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0)]
excute 13:46:38.032144 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:38.036102 line       494                         if (i == j):
excute 13:46:38.040124 line       496                         i_j_list.append((
excute 13:46:38.043118 line       497                             i, j,
excute 13:46:38.046110 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:38.050065 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 3), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 3), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 3)]
excute 13:46:38.053088 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:38.057047 line       494                         if (i == j):
excute 13:46:38.063030 line       496                         i_j_list.append((
excute 13:46:38.068048 line       497                             i, j,
excute 13:46:38.072038 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:38.075033 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 3), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 3), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 3), (8, 2, 2, 0)]
excute 13:46:38.078987 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:38.082013 line       494                         if (i == j):
excute 13:46:38.085970 line       496                         i_j_list.append((
excute 13:46:38.088991 line       497                             i, j,
excute 13:46:38.092982 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:38.095974 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 3), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 3), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 3), (8, 2, 2, 0), (8, 3, 2, 0)]
excute 13:46:38.099932 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:38.103921 line       494                         if (i == j):
excute 13:46:38.107912 line       496                         i_j_list.append((
excute 13:46:38.111900 line       497                             i, j,
excute 13:46:38.114925 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:38.117919 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 3), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 3), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 3), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0)]
excute 13:46:38.121872 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:38.124863 line       494                         if (i == j):
excute 13:46:38.128853 line       496                         i_j_list.append((
excute 13:46:38.131845 line       497                             i, j,
excute 13:46:38.135835 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:38.139834 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 3), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 3), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 3), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0)]
excute 13:46:38.142847 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:38.146807 line       494                         if (i == j):
excute 13:46:38.150795 line       496                         i_j_list.append((
excute 13:46:38.153787 line       497                             i, j,
excute 13:46:38.157776 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:38.160767 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 3), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 3), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 3), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0)]
excute 13:46:38.163760 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:38.167755 line       494                         if (i == j):
excute 13:46:38.171740 line       496                         i_j_list.append((
excute 13:46:38.174762 line       497                             i, j,
excute 13:46:38.178720 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:38.181743 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 3), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 3), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 3), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0)]
excute 13:46:38.184735 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:38.188696 line       494                         if (i == j):
excute 13:46:38.192684 line       495                             continue
excute 13:46:38.195706 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:38.199688 line       494                         if (i == j):
excute 13:46:38.204652 line       496                         i_j_list.append((
excute 13:46:38.207675 line       497                             i, j,
excute 13:46:38.210669 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:38.213662 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 3), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 3), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 3), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0)]
excute 13:46:38.217648 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:38.221622 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:46:38.224630 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:38.228588 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:38.231578 line       494                         if (i == j):
excute 13:46:38.235569 line       496                         i_j_list.append((
excute 13:46:38.238560 line       497                             i, j,
excute 13:46:38.241552 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:38.245541 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 3), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 3), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 3), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 0)]
excute 13:46:38.248533 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:38.252523 line       494                         if (i == j):
excute 13:46:38.256512 line       496                         i_j_list.append((
excute 13:46:38.260501 line       497                             i, j,
excute 13:46:38.263494 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:38.267483 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 3), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 3), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 3), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 0), (9, 1, 1, 3)]
excute 13:46:38.270475 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:38.274464 line       494                         if (i == j):
excute 13:46:38.278453 line       496                         i_j_list.append((
excute 13:46:38.282444 line       497                             i, j,
excute 13:46:38.285434 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:38.288426 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 3), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 3), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 3), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 0), (9, 1, 1, 3), (9, 2, 1, 0)]
excute 13:46:38.291419 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:38.295420 line       494                         if (i == j):
excute 13:46:38.299397 line       496                         i_j_list.append((
excute 13:46:38.302389 line       497                             i, j,
excute 13:46:38.307409 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:38.311398 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 3), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 3), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 3), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 0), (9, 1, 1, 3), (9, 2, 1, 0), (9, 3, 1, 0)]
excute 13:46:38.314391 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:38.318349 line       494                         if (i == j):
excute 13:46:38.322359 line       496                         i_j_list.append((
excute 13:46:38.327324 line       497                             i, j,
excute 13:46:38.336300 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:38.340290 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 3), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 3), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 3), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 0), (9, 1, 1, 3), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0)]
excute 13:46:38.343282 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:38.349267 line       494                         if (i == j):
excute 13:46:38.353254 line       496                         i_j_list.append((
excute 13:46:38.357244 line       497                             i, j,
excute 13:46:38.360268 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:38.364258 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 3), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 3), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 3), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 0), (9, 1, 1, 3), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0)]
excute 13:46:38.367247 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:38.371238 line       494                         if (i == j):
excute 13:46:38.375227 line       496                         i_j_list.append((
excute 13:46:38.379223 line       497                             i, j,
excute 13:46:38.382209 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:38.387203 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 3), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 3), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 3), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 0), (9, 1, 1, 3), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0)]
excute 13:46:38.390186 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:38.394179 line       494                         if (i == j):
excute 13:46:38.398135 line       496                         i_j_list.append((
excute 13:46:38.402124 line       497                             i, j,
excute 13:46:38.406114 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:38.411099 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 3), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 3), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 3), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 0), (9, 1, 1, 3), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0)]
excute 13:46:38.415090 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:38.418080 line       494                         if (i == j):
excute 13:46:38.423067 line       496                         i_j_list.append((
excute 13:46:38.426058 line       497                             i, j,
excute 13:46:38.429051 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:38.432043 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 3), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 3), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 3), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 0, 0), (4, 1, 0, 3), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, -1, 0), (5, 1, -1, 3), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 2, 0), (6, 1, 2, 3), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 0, 0), (7, 1, 0, 3), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 2, 0), (8, 1, 2, 3), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 0), (9, 1, 1, 3), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0)]
excute 13:46:38.436032 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:38.439024 line       494                         if (i == j):
excute 13:46:38.443014 line       495                             continue
excute 13:46:38.447003 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:38.450033 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:46:38.454017 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (0, 1, -2, 3), (5, 0, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (5, 1, -1, 3), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (4, 0, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (7, 0, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (4, 1, 0, 3), (7, 1, 0, 3), (9, 0, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0), (9, 1, 1, 3), (2, 0, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (6, 0, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (8, 0, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (2, 1, 2, 3), (6, 1, 2, 3), (8, 1, 2, 3), (3, 0, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (3, 1, 12, 3)]
excute 13:46:38.457975 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:46:38.462965 line       505                     if (self.RELOCATE):
excute 13:46:38.468946 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:46:38.471967 line       505                     if (self.RELOCATE):
excute 13:46:38.475948 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:46:38.479916 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, -2, 0)
excute 13:46:38.482938 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:46:38.486927 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:38.490887 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:38.494880 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, -2, 0)
excute 13:46:38.498864 line       556                     i = i_j[0]
excute 13:46:38.502854 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:38.505847 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:38.511830 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, -2, 0)
excute 13:46:38.515824 line       556                     i = i_j[0]
excute 13:46:38.518842 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:38.522832 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:38.525823 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, -2, 0)
excute 13:46:38.530811 line       556                     i = i_j[0]
excute 13:46:38.534802 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:38.537794 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:38.541783 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, -2, 0)
excute 13:46:38.544774 line       556                     i = i_j[0]
excute 13:46:38.548739 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:38.551755 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:38.555746 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, -2, 0)
excute 13:46:38.559702 line       556                     i = i_j[0]
excute 13:46:38.564689 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:38.568679 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:38.572667 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, -2, 0)
excute 13:46:38.576658 line       556                     i = i_j[0]
excute 13:46:38.580646 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:38.584634 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:38.588625 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, -2, 0)
excute 13:46:38.591616 line       556                     i = i_j[0]
excute 13:46:38.595606 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:38.598597 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:38.602588 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, -2, 3)
excute 13:46:38.605579 line       556                     i = i_j[0]
excute 13:46:38.609568 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:38.613559 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:38.617552 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, -1, 0)
excute 13:46:38.621539 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:46:38.624528 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:38.628517 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:38.633506 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, -1, 0)
excute 13:46:38.636498 line       556                     i = i_j[0]
excute 13:46:38.641485 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:38.644476 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:38.648466 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, -1, 0)
excute 13:46:38.652455 line       556                     i = i_j[0]
excute 13:46:38.656445 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:38.659437 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:38.663427 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, -1, 0)
excute 13:46:38.667415 line       556                     i = i_j[0]
excute 13:46:38.672400 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:38.675393 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:38.679382 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, -1, 0)
excute 13:46:38.683371 line       556                     i = i_j[0]
excute 13:46:38.687371 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:38.705288 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:38.709275 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, -1, 0)
excute 13:46:38.713264 line       556                     i = i_j[0]
excute 13:46:38.719282 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:38.722272 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:38.726231 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, -1, 0)
excute 13:46:38.729253 line       556                     i = i_j[0]
excute 13:46:38.733213 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:38.736237 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:38.740192 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, -1, 0)
excute 13:46:38.743215 line       556                     i = i_j[0]
excute 13:46:38.747211 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:38.750197 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:38.754188 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, -1, 3)
excute 13:46:38.759144 line       556                     i = i_j[0]
excute 13:46:38.763132 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:38.767122 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:38.770144 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 112
excute 13:46:38.774133 line       560                         if (t_tmp > self.TIME):
excute 13:46:38.778125 line       563                             if (available_vhecles[i][t] == 0):
excute 13:46:38.781114 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:46:38.784110 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 130
excute 13:46:38.788097 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:46:38.792055 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 0, 0)
excute 13:46:38.795081 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:46:38.799035 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:38.803024 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:38.806016 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 0, 0)
excute 13:46:38.810005 line       556                     i = i_j[0]
excute 13:46:38.812997 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:38.816986 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:38.821976 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 0, 0)
excute 13:46:38.825964 line       556                     i = i_j[0]
excute 13:46:38.829954 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:38.833943 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:38.837933 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 0, 0)
excute 13:46:38.841922 line       556                     i = i_j[0]
excute 13:46:38.845912 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:38.849900 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:38.856881 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 0, 0)
excute 13:46:38.859872 line       556                     i = i_j[0]
excute 13:46:38.863863 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:38.867853 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:38.871842 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 0, 0)
excute 13:46:38.875831 line       556                     i = i_j[0]
excute 13:46:38.879820 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:38.883840 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:38.887801 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 0, 0)
excute 13:46:38.890825 line       556                     i = i_j[0]
excute 13:46:38.894780 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:38.897803 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:38.901761 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 0, 0)
excute 13:46:38.904784 line       556                     i = i_j[0]
excute 13:46:38.908743 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:38.911767 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:38.915756 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 0, 0)
excute 13:46:38.918747 line       556                     i = i_j[0]
excute 13:46:38.923717 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:38.926725 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:38.930719 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 0, 0)
excute 13:46:38.934674 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:46:38.937697 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:38.941687 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:38.945644 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 0, 0)
excute 13:46:38.949665 line       556                     i = i_j[0]
excute 13:46:38.953625 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:38.957612 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:38.961604 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 0, 0)
excute 13:46:38.965592 line       556                     i = i_j[0]
excute 13:46:38.969581 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:38.972573 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:38.976562 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 0, 0)
excute 13:46:38.980551 line       556                     i = i_j[0]
excute 13:46:38.985539 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:38.989526 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:38.993515 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 0, 0)
excute 13:46:38.996509 line       556                     i = i_j[0]
excute 13:46:39.000498 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:39.004487 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.008477 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 0, 0)
excute 13:46:39.012466 line       556                     i = i_j[0]
excute 13:46:39.016455 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:39.020445 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.025432 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 0, 0)
excute 13:46:39.029420 line       556                     i = i_j[0]
excute 13:46:39.032443 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:39.036432 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.039392 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 0, 0)
excute 13:46:39.043381 line       556                     i = i_j[0]
excute 13:46:39.046373 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:39.050363 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.053355 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 0, 0)
excute 13:46:39.057344 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:46:39.064327 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:39.068314 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.072304 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 0, 0)
excute 13:46:39.076295 line       556                     i = i_j[0]
excute 13:46:39.080284 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:39.084286 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.087266 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 0, 0)
excute 13:46:39.091255 line       556                     i = i_j[0]
excute 13:46:39.095255 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:39.099239 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.102227 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 0, 0)
excute 13:46:39.106215 line       556                     i = i_j[0]
excute 13:46:39.110214 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:39.113226 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.117219 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 0, 0)
excute 13:46:39.121173 line       556                     i = i_j[0]
excute 13:46:39.125164 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:39.130187 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.134141 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 0, 0)
excute 13:46:39.137163 line       556                     i = i_j[0]
excute 13:46:39.141152 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:39.145142 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.149132 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 0, 0)
excute 13:46:39.152123 line       556                     i = i_j[0]
excute 13:46:39.156080 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:39.159108 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.163095 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 0, 0)
excute 13:46:39.166085 line       556                     i = i_j[0]
excute 13:46:39.170079 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:39.174065 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.177056 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 0, 3)
excute 13:46:39.181046 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:46:39.184037 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:39.188027 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.192017 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 0, 3)
excute 13:46:39.195008 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:46:39.199965 line       557                     j = i_j[1]
excute 13:46:39.203969 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.206979 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 0)
excute 13:46:39.209972 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:46:39.213926 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:39.217916 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.221905 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:46:39.224929 line       556                     i = i_j[0]
excute 13:46:39.228888 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:39.232875 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.236867 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 0)
excute 13:46:39.239856 line       556                     i = i_j[0]
excute 13:46:39.243848 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:39.246838 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.250827 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 0)
excute 13:46:39.254817 line       556                     i = i_j[0]
excute 13:46:39.258806 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:39.261798 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.265787 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 0)
excute 13:46:39.268779 line       556                     i = i_j[0]
excute 13:46:39.272769 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:39.276758 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.280748 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 0)
excute 13:46:39.283739 line       556                     i = i_j[0]
excute 13:46:39.287728 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:39.290721 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.294710 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 0)
excute 13:46:39.297701 line       556                     i = i_j[0]
excute 13:46:39.301692 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:39.304683 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.307675 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 0)
excute 13:46:39.311664 line       556                     i = i_j[0]
excute 13:46:39.314656 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:39.318646 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.322635 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 3)
excute 13:46:39.325659 line       556                     i = i_j[0]
excute 13:46:39.337597 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:39.341585 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.345574 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:46:39.351566 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:46:39.355550 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:39.359538 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.364557 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:46:39.367547 line       556                     i = i_j[0]
excute 13:46:39.371536 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:39.375497 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.379484 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:46:39.383474 line       556                     i = i_j[0]
excute 13:46:39.387464 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:39.391453 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.394445 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:46:39.398434 line       556                     i = i_j[0]
excute 13:46:39.402424 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:39.406413 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.410402 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:46:39.413392 line       556                     i = i_j[0]
excute 13:46:39.417381 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:39.421371 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.425361 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:46:39.428352 line       556                     i = i_j[0]
excute 13:46:39.432342 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:39.436331 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.442317 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:46:39.445340 line       556                     i = i_j[0]
excute 13:46:39.450325 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:39.454317 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.458273 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:46:39.461264 line       556                     i = i_j[0]
excute 13:46:39.465255 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:39.469244 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.473233 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 2, 0)
excute 13:46:39.476225 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:46:39.480216 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:39.488193 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.494177 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 2, 0)
excute 13:46:39.498166 line       556                     i = i_j[0]
excute 13:46:39.502156 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:39.506145 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.512451 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 2, 0)
excute 13:46:39.515482 line       556                     i = i_j[0]
excute 13:46:39.519437 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:39.522463 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.526449 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 2, 0)
excute 13:46:39.530407 line       556                     i = i_j[0]
excute 13:46:39.534398 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:39.537423 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.541379 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 2, 0)
excute 13:46:39.546367 line       556                     i = i_j[0]
excute 13:46:39.550354 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:39.553347 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.557338 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 2, 0)
excute 13:46:39.562322 line       556                     i = i_j[0]
excute 13:46:39.566312 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:39.569303 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.574298 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 2, 0)
excute 13:46:39.581294 line       556                     i = i_j[0]
excute 13:46:39.585263 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:39.588254 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.592244 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 2, 0)
excute 13:46:39.596233 line       556                     i = i_j[0]
excute 13:46:39.600222 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:39.604212 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.608201 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 2, 0)
excute 13:46:39.612191 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:46:39.619171 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:39.623160 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.627151 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 2, 0)
excute 13:46:39.631139 line       556                     i = i_j[0]
excute 13:46:39.636126 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:39.639119 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.643108 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 2, 0)
excute 13:46:39.648093 line       556                     i = i_j[0]
excute 13:46:39.652083 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:39.656073 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.660062 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 2, 0)
excute 13:46:39.663054 line       556                     i = i_j[0]
excute 13:46:39.667044 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:39.671033 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.675023 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 2, 0)
excute 13:46:39.678014 line       556                     i = i_j[0]
excute 13:46:39.682004 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:39.685993 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.688984 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 2, 0)
excute 13:46:39.692975 line       556                     i = i_j[0]
excute 13:46:39.696964 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:39.699954 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.703943 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 2, 0)
excute 13:46:39.707934 line       556                     i = i_j[0]
excute 13:46:39.710927 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:39.714921 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.718905 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 2, 0)
excute 13:46:39.721897 line       556                     i = i_j[0]
excute 13:46:39.726885 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:39.729875 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.733866 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 3)
excute 13:46:39.736856 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:46:39.740847 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:39.744834 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.749834 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 2, 3)
excute 13:46:39.753811 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:46:39.757802 line       557                     j = i_j[1]
excute 13:46:39.761789 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.764781 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 2, 3)
excute 13:46:39.768771 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:46:39.771763 line       557                     j = i_j[1]
excute 13:46:39.775753 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.778744 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 12, 0)
excute 13:46:39.782734 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:46:39.785726 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:39.789746 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.793704 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 12, 0)
excute 13:46:39.796727 line       556                     i = i_j[0]
excute 13:46:39.800687 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:39.803708 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.807667 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 12, 0)
excute 13:46:39.810690 line       556                     i = i_j[0]
excute 13:46:39.814682 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:39.817674 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.821661 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 12, 0)
excute 13:46:39.825648 line       556                     i = i_j[0]
excute 13:46:39.828641 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:39.832631 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.836589 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 12, 0)
excute 13:46:39.839612 line       556                     i = i_j[0]
excute 13:46:39.843604 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:39.846596 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.850567 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 12, 0)
excute 13:46:39.854540 line       556                     i = i_j[0]
excute 13:46:39.858532 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:39.862521 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.866511 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 12, 0)
excute 13:46:39.869502 line       556                     i = i_j[0]
excute 13:46:39.874490 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:39.877481 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.881470 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 12, 0)
excute 13:46:39.885460 line       556                     i = i_j[0]
excute 13:46:39.890455 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:39.893439 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.897427 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 12, 3)
excute 13:46:39.900420 line       556                     i = i_j[0]
excute 13:46:39.905405 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:39.908428 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:39.912387 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 111
excute 13:46:39.915410 line       560                         if (t_tmp > self.TIME):
excute 13:46:39.919372 line       563                             if (available_vhecles[i][t] == 0):
excute 13:46:39.922390 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:46:39.926384 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 131
excute 13:46:39.929376 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:46:39.933330 line       555                 for i_j in i_j_list:
excute 13:46:39.940335 line       581             self.write_matrix(
excute 13:46:39.944302 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:46:39.949288 line       583                 result_file_path,
excute 13:46:39.953278 line       584                 mode='a'
excute 13:46:39.963748 line       488         for t in time_steps:
excute Modified var:.. t = 103
excute 13:46:39.969763 line       489             if (t != self.TIME + 1):
excute 13:46:39.975750 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:46:39.981732 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:46:39.986686 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:46:39.990679 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:39.994668 line       494                         if (i == j):
excute 13:46:39.999652 line       495                             continue
excute 13:46:40.003642 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:40.008661 line       494                         if (i == j):
excute 13:46:40.015609 line       496                         i_j_list.append((
excute 13:46:40.021625 line       497                             i, j,
excute 13:46:40.026612 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.035557 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0)]
excute 13:46:40.041542 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:40.045532 line       494                         if (i == j):
excute 13:46:40.052510 line       496                         i_j_list.append((
excute 13:46:40.058506 line       497                             i, j,
excute 13:46:40.061488 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.066473 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0)]
excute 13:46:40.071463 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:40.075470 line       494                         if (i == j):
excute 13:46:40.080436 line       496                         i_j_list.append((
excute 13:46:40.086421 line       497                             i, j,
excute 13:46:40.092404 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.095398 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0)]
excute 13:46:40.101411 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:40.105370 line       494                         if (i == j):
excute 13:46:40.110356 line       496                         i_j_list.append((
excute 13:46:40.116344 line       497                             i, j,
excute 13:46:40.121326 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.125315 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0)]
excute 13:46:40.128340 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:40.133296 line       494                         if (i == j):
excute 13:46:40.137293 line       496                         i_j_list.append((
excute 13:46:40.140277 line       497                             i, j,
excute 13:46:40.144267 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.148257 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1)]
excute 13:46:40.152246 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:40.156235 line       494                         if (i == j):
excute 13:46:40.161221 line       496                         i_j_list.append((
excute 13:46:40.165241 line       497                             i, j,
excute 13:46:40.168232 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.172190 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0)]
excute 13:46:40.175216 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:40.178208 line       494                         if (i == j):
excute 13:46:40.182200 line       496                         i_j_list.append((
excute 13:46:40.185187 line       497                             i, j,
excute 13:46:40.189145 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.192168 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0)]
excute 13:46:40.195130 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:40.199120 line       494                         if (i == j):
excute 13:46:40.203109 line       496                         i_j_list.append((
excute 13:46:40.207099 line       497                             i, j,
excute 13:46:40.210091 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.214079 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1)]
excute 13:46:40.217103 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:40.220093 line       494                         if (i == j):
excute 13:46:40.224052 line       496                         i_j_list.append((
excute 13:46:40.227075 line       497                             i, j,
excute 13:46:40.230067 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.234026 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0)]
excute 13:46:40.237049 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:40.240040 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:46:40.244030 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:40.247024 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:40.250980 line       494                         if (i == j):
excute 13:46:40.254004 line       496                         i_j_list.append((
excute 13:46:40.257961 line       497                             i, j,
excute 13:46:40.261955 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.268932 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1)]
excute 13:46:40.272923 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:40.277909 line       494                         if (i == j):
excute 13:46:40.281898 line       495                             continue
excute 13:46:40.284920 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:40.287913 line       494                         if (i == j):
excute 13:46:40.291872 line       496                         i_j_list.append((
excute 13:46:40.294895 line       497                             i, j,
excute 13:46:40.297887 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.300878 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0)]
excute 13:46:40.304837 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:40.307859 line       494                         if (i == j):
excute 13:46:40.311820 line       496                         i_j_list.append((
excute 13:46:40.314840 line       497                             i, j,
excute 13:46:40.317832 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.320824 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0)]
excute 13:46:40.324815 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:40.333761 line       494                         if (i == j):
excute 13:46:40.340745 line       496                         i_j_list.append((
excute 13:46:40.343763 line       497                             i, j,
excute 13:46:40.347721 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.351711 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0)]
excute 13:46:40.355702 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:40.359691 line       494                         if (i == j):
excute 13:46:40.364679 line       496                         i_j_list.append((
excute 13:46:40.368667 line       497                             i, j,
excute 13:46:40.371659 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.375649 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1)]
excute 13:46:40.379638 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:40.383627 line       494                         if (i == j):
excute 13:46:40.388635 line       496                         i_j_list.append((
excute 13:46:40.391635 line       497                             i, j,
excute 13:46:40.394627 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.397619 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0)]
excute 13:46:40.401610 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:40.405599 line       494                         if (i == j):
excute 13:46:40.408590 line       496                         i_j_list.append((
excute 13:46:40.411582 line       497                             i, j,
excute 13:46:40.415573 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.418564 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0)]
excute 13:46:40.423518 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:40.426542 line       494                         if (i == j):
excute 13:46:40.430500 line       496                         i_j_list.append((
excute 13:46:40.433524 line       497                             i, j,
excute 13:46:40.436515 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.440473 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1)]
excute 13:46:40.443465 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:40.447461 line       494                         if (i == j):
excute 13:46:40.451446 line       496                         i_j_list.append((
excute 13:46:40.455435 line       497                             i, j,
excute 13:46:40.459424 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.462416 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0)]
excute 13:46:40.467403 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:40.471405 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:46:40.475381 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:40.479370 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:40.483360 line       494                         if (i == j):
excute 13:46:40.487350 line       496                         i_j_list.append((
excute 13:46:40.490341 line       497                             i, j,
excute 13:46:40.493334 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.497323 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1)]
excute 13:46:40.500345 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:40.504318 line       494                         if (i == j):
excute 13:46:40.508292 line       496                         i_j_list.append((
excute 13:46:40.511316 line       497                             i, j,
excute 13:46:40.514307 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.518299 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0)]
excute 13:46:40.521290 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:40.525261 line       494                         if (i == j):
excute 13:46:40.528270 line       495                             continue
excute 13:46:40.532228 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:40.535252 line       494                         if (i == j):
excute 13:46:40.538244 line       496                         i_j_list.append((
excute 13:46:40.542201 line       497                             i, j,
excute 13:46:40.545226 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.548217 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:46:40.551210 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:40.556165 line       494                         if (i == j):
excute 13:46:40.559188 line       496                         i_j_list.append((
excute 13:46:40.563177 line       497                             i, j,
excute 13:46:40.566170 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.572122 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:46:40.575117 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:40.579119 line       494                         if (i == j):
excute 13:46:40.583094 line       496                         i_j_list.append((
excute 13:46:40.586115 line       497                             i, j,
excute 13:46:40.589107 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.593084 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1)]
excute 13:46:40.596089 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:40.599081 line       494                         if (i == j):
excute 13:46:40.603071 line       496                         i_j_list.append((
excute 13:46:40.606064 line       497                             i, j,
excute 13:46:40.610020 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.613044 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0)]
excute 13:46:40.616038 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:40.620026 line       494                         if (i == j):
excute 13:46:40.623017 line       496                         i_j_list.append((
excute 13:46:40.626975 line       497                             i, j,
excute 13:46:40.629966 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.633956 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:46:40.637945 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:40.640936 line       494                         if (i == j):
excute 13:46:40.645925 line       496                         i_j_list.append((
excute 13:46:40.648918 line       497                             i, j,
excute 13:46:40.652907 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.655897 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1)]
excute 13:46:40.659888 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:40.663878 line       494                         if (i == j):
excute 13:46:40.668864 line       496                         i_j_list.append((
excute 13:46:40.672854 line       497                             i, j,
excute 13:46:40.675845 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.679835 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0)]
excute 13:46:40.683823 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:40.686816 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:46:40.690806 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:40.694795 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:40.697787 line       494                         if (i == j):
excute 13:46:40.701785 line       496                         i_j_list.append((
excute 13:46:40.705766 line       497                             i, j,
excute 13:46:40.708757 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.712745 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1)]
excute 13:46:40.716736 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:40.720724 line       494                         if (i == j):
excute 13:46:40.724714 line       496                         i_j_list.append((
excute 13:46:40.727707 line       497                             i, j,
excute 13:46:40.731696 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.734689 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0)]
excute 13:46:40.737680 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:40.741682 line       494                         if (i == j):
excute 13:46:40.745658 line       496                         i_j_list.append((
excute 13:46:40.749649 line       497                             i, j,
excute 13:46:40.752640 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.756629 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0)]
excute 13:46:40.760617 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:40.763611 line       494                         if (i == j):
excute 13:46:40.767600 line       495                             continue
excute 13:46:40.771590 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:40.776577 line       494                         if (i == j):
excute 13:46:40.780566 line       496                         i_j_list.append((
excute 13:46:40.783557 line       497                             i, j,
excute 13:46:40.787547 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.791536 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0)]
excute 13:46:40.794528 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:40.798518 line       494                         if (i == j):
excute 13:46:40.804502 line       496                         i_j_list.append((
excute 13:46:40.809488 line       497                             i, j,
excute 13:46:40.812479 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.816468 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1)]
excute 13:46:40.819460 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:40.823456 line       494                         if (i == j):
excute 13:46:40.827439 line       496                         i_j_list.append((
excute 13:46:40.830433 line       497                             i, j,
excute 13:46:40.834421 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.837413 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0)]
excute 13:46:40.840404 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:40.844394 line       494                         if (i == j):
excute 13:46:40.848383 line       496                         i_j_list.append((
excute 13:46:40.851374 line       497                             i, j,
excute 13:46:40.856361 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.859352 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0)]
excute 13:46:40.863342 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:40.867365 line       494                         if (i == j):
excute 13:46:40.870355 line       496                         i_j_list.append((
excute 13:46:40.874346 line       497                             i, j,
excute 13:46:40.878307 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.881295 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1)]
excute 13:46:40.885285 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:40.889275 line       494                         if (i == j):
excute 13:46:40.893264 line       496                         i_j_list.append((
excute 13:46:40.897254 line       497                             i, j,
excute 13:46:40.900246 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.904235 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0)]
excute 13:46:40.907227 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:40.911216 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:46:40.914208 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:40.918209 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:40.921190 line       494                         if (i == j):
excute 13:46:40.925189 line       496                         i_j_list.append((
excute 13:46:40.928171 line       497                             i, j,
excute 13:46:40.932159 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.935150 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1)]
excute 13:46:40.939140 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:40.942133 line       494                         if (i == j):
excute 13:46:40.946121 line       496                         i_j_list.append((
excute 13:46:40.950112 line       497                             i, j,
excute 13:46:40.954103 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.960085 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0)]
excute 13:46:40.964073 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:40.968066 line       494                         if (i == j):
excute 13:46:40.972055 line       496                         i_j_list.append((
excute 13:46:40.975045 line       497                             i, j,
excute 13:46:40.980032 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:40.983022 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0)]
excute 13:46:40.987013 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:40.991007 line       494                         if (i == j):
excute 13:46:40.994993 line       496                         i_j_list.append((
excute 13:46:40.998982 line       497                             i, j,
excute 13:46:41.001974 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:41.005963 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0)]
excute 13:46:41.008955 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:41.013944 line       494                         if (i == j):
excute 13:46:41.017932 line       495                             continue
excute 13:46:41.020922 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:41.023914 line       494                         if (i == j):
excute 13:46:41.027903 line       496                         i_j_list.append((
excute 13:46:41.030896 line       497                             i, j,
excute 13:46:41.033887 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:41.037878 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1)]
excute 13:46:41.040869 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:41.044858 line       494                         if (i == j):
excute 13:46:41.047849 line       496                         i_j_list.append((
excute 13:46:41.051838 line       497                             i, j,
excute 13:46:41.054832 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:41.057823 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0)]
excute 13:46:41.061813 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:41.065804 line       494                         if (i == j):
excute 13:46:41.068795 line       496                         i_j_list.append((
excute 13:46:41.072784 line       497                             i, j,
excute 13:46:41.076775 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:41.079765 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0)]
excute 13:46:41.083756 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:41.087744 line       494                         if (i == j):
excute 13:46:41.091734 line       496                         i_j_list.append((
excute 13:46:41.095723 line       497                             i, j,
excute 13:46:41.099712 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:41.102704 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1)]
excute 13:46:41.106694 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:41.110682 line       494                         if (i == j):
excute 13:46:41.113676 line       496                         i_j_list.append((
excute 13:46:41.117664 line       497                             i, j,
excute 13:46:41.120656 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:41.124646 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0)]
excute 13:46:41.127637 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:41.131627 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:46:41.135616 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:41.139606 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:41.143595 line       494                         if (i == j):
excute 13:46:41.147584 line       496                         i_j_list.append((
excute 13:46:41.151574 line       497                             i, j,
excute 13:46:41.156561 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:41.162543 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1)]
excute 13:46:41.166533 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:41.169525 line       494                         if (i == j):
excute 13:46:41.173515 line       496                         i_j_list.append((
excute 13:46:41.177504 line       497                             i, j,
excute 13:46:41.181494 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:41.185488 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0)]
excute 13:46:41.189472 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:41.193460 line       494                         if (i == j):
excute 13:46:41.197452 line       496                         i_j_list.append((
excute 13:46:41.200442 line       497                             i, j,
excute 13:46:41.204432 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:41.207424 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0)]
excute 13:46:41.210415 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:41.214407 line       494                         if (i == j):
excute 13:46:41.217396 line       496                         i_j_list.append((
excute 13:46:41.221385 line       497                             i, j,
excute 13:46:41.224379 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:41.227370 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0)]
excute 13:46:41.230362 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:41.234353 line       494                         if (i == j):
excute 13:46:41.238343 line       496                         i_j_list.append((
excute 13:46:41.241333 line       497                             i, j,
excute 13:46:41.244324 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:41.248314 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0)]
excute 13:46:41.251305 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:41.256295 line       494                         if (i == j):
excute 13:46:41.260283 line       495                             continue
excute 13:46:41.264272 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:41.267265 line       494                         if (i == j):
excute 13:46:41.271254 line       496                         i_j_list.append((
excute 13:46:41.275244 line       497                             i, j,
excute 13:46:41.278265 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:41.282224 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0)]
excute 13:46:41.285246 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:41.289204 line       494                         if (i == j):
excute 13:46:41.294192 line       496                         i_j_list.append((
excute 13:46:41.297214 line       497                             i, j,
excute 13:46:41.300208 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:41.303199 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0)]
excute 13:46:41.307173 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:41.310180 line       494                         if (i == j):
excute 13:46:41.314138 line       496                         i_j_list.append((
excute 13:46:41.319126 line       497                             i, j,
excute 13:46:41.324144 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:41.335083 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1)]
excute 13:46:41.342064 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:41.346053 line       494                         if (i == j):
excute 13:46:41.352038 line       496                         i_j_list.append((
excute 13:46:41.359019 line       497                             i, j,
excute 13:46:41.363008 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:41.368992 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0)]
excute 13:46:41.376971 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:41.383954 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:46:41.389936 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:41.396950 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:41.401906 line       494                         if (i == j):
excute 13:46:41.405897 line       496                         i_j_list.append((
excute 13:46:41.409885 line       497                             i, j,
excute 13:46:41.413872 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:41.418860 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 2, 1)]
excute 13:46:41.422849 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:41.426839 line       494                         if (i == j):
excute 13:46:41.431827 line       496                         i_j_list.append((
excute 13:46:41.435812 line       497                             i, j,
excute 13:46:41.444789 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:41.451769 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 2, 1), (6, 1, 2, 0)]
excute 13:46:41.459751 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:41.470720 line       494                         if (i == j):
excute 13:46:41.477704 line       496                         i_j_list.append((
excute 13:46:41.484682 line       497                             i, j,
excute 13:46:41.489668 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:41.498645 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0)]
excute 13:46:41.504634 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:41.510613 line       494                         if (i == j):
excute 13:46:41.516600 line       496                         i_j_list.append((
excute 13:46:41.522580 line       497                             i, j,
excute 13:46:41.529562 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:41.537541 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0)]
excute 13:46:41.542527 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:41.550507 line       494                         if (i == j):
excute 13:46:41.557488 line       496                         i_j_list.append((
excute 13:46:41.565468 line       497                             i, j,
excute 13:46:41.572447 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:41.580425 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0)]
excute 13:46:41.587407 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:41.595389 line       494                         if (i == j):
excute 13:46:41.601370 line       496                         i_j_list.append((
excute 13:46:41.607357 line       497                             i, j,
excute 13:46:41.613338 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:41.618326 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1)]
excute 13:46:41.626302 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:41.634282 line       494                         if (i == j):
excute 13:46:41.640266 line       495                             continue
excute 13:46:41.645252 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:41.651237 line       494                         if (i == j):
excute 13:46:41.658219 line       496                         i_j_list.append((
excute 13:46:41.665199 line       497                             i, j,
excute 13:46:41.673177 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:41.680159 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0)]
excute 13:46:41.688139 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:41.696118 line       494                         if (i == j):
excute 13:46:41.704096 line       496                         i_j_list.append((
excute 13:46:41.709082 line       497                             i, j,
excute 13:46:41.717062 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:41.723045 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 1)]
excute 13:46:41.730039 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:41.736012 line       494                         if (i == j):
excute 13:46:41.742991 line       496                         i_j_list.append((
excute 13:46:41.747978 line       497                             i, j,
excute 13:46:41.754960 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:41.760944 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0)]
excute 13:46:41.766928 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:41.774907 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:46:41.779894 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:41.784879 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:41.788870 line       494                         if (i == j):
excute 13:46:41.792858 line       496                         i_j_list.append((
excute 13:46:41.795850 line       497                             i, j,
excute 13:46:41.798842 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:41.801834 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 1)]
excute 13:46:41.807817 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:41.811807 line       494                         if (i == j):
excute 13:46:41.815798 line       496                         i_j_list.append((
excute 13:46:41.818788 line       497                             i, j,
excute 13:46:41.821781 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:41.825769 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 1), (7, 1, 0, 0)]
excute 13:46:41.828761 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:41.832753 line       494                         if (i == j):
excute 13:46:41.836743 line       496                         i_j_list.append((
excute 13:46:41.839733 line       497                             i, j,
excute 13:46:41.842758 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:41.845749 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0)]
excute 13:46:41.849739 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:41.853696 line       494                         if (i == j):
excute 13:46:41.856720 line       496                         i_j_list.append((
excute 13:46:41.860708 line       497                             i, j,
excute 13:46:41.863700 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:41.867658 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0)]
excute 13:46:41.870682 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:41.874639 line       494                         if (i == j):
excute 13:46:41.878631 line       496                         i_j_list.append((
excute 13:46:41.882618 line       497                             i, j,
excute 13:46:41.885644 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:41.888603 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0)]
excute 13:46:41.892593 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:41.896582 line       494                         if (i == j):
excute 13:46:41.901570 line       496                         i_j_list.append((
excute 13:46:41.904561 line       497                             i, j,
excute 13:46:41.908551 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:41.912569 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1)]
excute 13:46:41.915562 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:41.919551 line       494                         if (i == j):
excute 13:46:41.923509 line       496                         i_j_list.append((
excute 13:46:41.926532 line       497                             i, j,
excute 13:46:41.930490 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:41.933516 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0)]
excute 13:46:41.936505 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:41.940465 line       494                         if (i == j):
excute 13:46:41.944486 line       495                             continue
excute 13:46:41.948443 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:41.951465 line       494                         if (i == j):
excute 13:46:41.955456 line       496                         i_j_list.append((
excute 13:46:41.959413 line       497                             i, j,
excute 13:46:41.962438 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:41.965430 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 1)]
excute 13:46:41.969386 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:41.972377 line       494                         if (i == j):
excute 13:46:41.977367 line       496                         i_j_list.append((
excute 13:46:41.980388 line       497                             i, j,
excute 13:46:41.984346 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:41.987370 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0)]
excute 13:46:41.990362 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:41.994320 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:46:41.997344 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:42.001303 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:42.004325 line       494                         if (i == j):
excute 13:46:42.008283 line       496                         i_j_list.append((
excute 13:46:42.013270 line       497                             i, j,
excute 13:46:42.016262 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:42.020252 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, 2, 1)]
excute 13:46:42.023244 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:42.028231 line       494                         if (i == j):
excute 13:46:42.031253 line       496                         i_j_list.append((
excute 13:46:42.035241 line       497                             i, j,
excute 13:46:42.038234 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:42.042225 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, 2, 1), (8, 1, 2, 0)]
excute 13:46:42.045216 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:42.049174 line       494                         if (i == j):
excute 13:46:42.052195 line       496                         i_j_list.append((
excute 13:46:42.056186 line       497                             i, j,
excute 13:46:42.059178 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:42.063159 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, 2, 1), (8, 1, 2, 0), (8, 2, 2, 0)]
excute 13:46:42.067125 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:42.071115 line       494                         if (i == j):
excute 13:46:42.075105 line       496                         i_j_list.append((
excute 13:46:42.079093 line       497                             i, j,
excute 13:46:42.082118 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:42.085110 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, 2, 1), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0)]
excute 13:46:42.088100 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:42.092090 line       494                         if (i == j):
excute 13:46:42.096048 line       496                         i_j_list.append((
excute 13:46:42.099070 line       497                             i, j,
excute 13:46:42.102065 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:42.106055 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, 2, 1), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0)]
excute 13:46:42.109045 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:42.113009 line       494                         if (i == j):
excute 13:46:42.117993 line       496                         i_j_list.append((
excute 13:46:42.120983 line       497                             i, j,
excute 13:46:42.124971 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:42.128961 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, 2, 1), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1)]
excute 13:46:42.131953 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:42.136939 line       494                         if (i == j):
excute 13:46:42.140928 line       496                         i_j_list.append((
excute 13:46:42.143921 line       497                             i, j,
excute 13:46:42.147910 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:42.150903 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, 2, 1), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1), (8, 6, 2, 0)]
excute 13:46:42.154892 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:42.158882 line       494                         if (i == j):
excute 13:46:42.162902 line       496                         i_j_list.append((
excute 13:46:42.165892 line       497                             i, j,
excute 13:46:42.168884 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:42.172852 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, 2, 1), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1), (8, 6, 2, 0), (8, 7, 2, 0)]
excute 13:46:42.175866 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:42.179824 line       494                         if (i == j):
excute 13:46:42.182846 line       495                             continue
excute 13:46:42.186837 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:42.189831 line       494                         if (i == j):
excute 13:46:42.193801 line       496                         i_j_list.append((
excute 13:46:42.196810 line       497                             i, j,
excute 13:46:42.200799 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:42.203790 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, 2, 1), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0)]
excute 13:46:42.206782 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:42.210749 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:46:42.213764 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:42.219718 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:42.222740 line       494                         if (i == j):
excute 13:46:42.226700 line       496                         i_j_list.append((
excute 13:46:42.229722 line       497                             i, j,
excute 13:46:42.233680 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:42.236705 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, 2, 1), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 1)]
excute 13:46:42.239695 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:42.243654 line       494                         if (i == j):
excute 13:46:42.247642 line       496                         i_j_list.append((
excute 13:46:42.250665 line       497                             i, j,
excute 13:46:42.253657 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:42.257648 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, 2, 1), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 1), (9, 1, 1, 0)]
excute 13:46:42.260640 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:42.264596 line       494                         if (i == j):
excute 13:46:42.268622 line       496                         i_j_list.append((
excute 13:46:42.271609 line       497                             i, j,
excute 13:46:42.275600 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:42.279557 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, 2, 1), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 1), (9, 1, 1, 0), (9, 2, 1, 0)]
excute 13:46:42.282580 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:42.286539 line       494                         if (i == j):
excute 13:46:42.290527 line       496                         i_j_list.append((
excute 13:46:42.293551 line       497                             i, j,
excute 13:46:42.296542 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:42.299534 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, 2, 1), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 1), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0)]
excute 13:46:42.303525 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:42.306516 line       494                         if (i == j):
excute 13:46:42.310507 line       496                         i_j_list.append((
excute 13:46:42.314464 line       497                             i, j,
excute 13:46:42.317489 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:42.322443 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, 2, 1), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 1), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0)]
excute 13:46:42.325465 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:42.333418 line       494                         if (i == j):
excute 13:46:42.338402 line       496                         i_j_list.append((
excute 13:46:42.341393 line       497                             i, j,
excute 13:46:42.345382 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:42.348372 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, 2, 1), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 1), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 1)]
excute 13:46:42.353393 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:42.357350 line       494                         if (i == j):
excute 13:46:42.361342 line       496                         i_j_list.append((
excute 13:46:42.364363 line       497                             i, j,
excute 13:46:42.368351 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:42.372316 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, 2, 1), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 1), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 1), (9, 6, 1, 0)]
excute 13:46:42.375300 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:42.381286 line       494                         if (i == j):
excute 13:46:42.385274 line       496                         i_j_list.append((
excute 13:46:42.389265 line       497                             i, j,
excute 13:46:42.393254 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:42.397244 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, 2, 1), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 1), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 1), (9, 6, 1, 0), (9, 7, 1, 0)]
excute 13:46:42.400235 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:42.405223 line       494                         if (i == j):
excute 13:46:42.408215 line       496                         i_j_list.append((
excute 13:46:42.412204 line       497                             i, j,
excute 13:46:42.415194 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:42.419185 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 1), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 12, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 1), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 1), (3, 9, 12, 0), (4, 0, 0, 1), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, -1, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, 2, 1), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 1, 1), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 1), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 1)]
excute 13:46:42.424170 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:42.428159 line       494                         if (i == j):
excute 13:46:42.431183 line       495                             continue
excute 13:46:42.435173 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:42.438164 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:46:42.441158 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 9, -2, 0), (0, 5, -2, 1), (0, 8, -2, 1), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 9, -1, 0), (5, 0, -1, 1), (5, 8, -1, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 9, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 9, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 6, 0, 0), (7, 9, 0, 0), (1, 0, 0, 1), (1, 5, 0, 1), (1, 8, 0, 1), (4, 0, 0, 1), (4, 5, 0, 1), (4, 8, 0, 1), (7, 0, 0, 1), (7, 5, 0, 1), (7, 8, 0, 1), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 0, 1, 1), (9, 5, 1, 1), (9, 8, 1, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 9, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 7, 2, 0), (6, 9, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (2, 0, 2, 1), (2, 5, 2, 1), (2, 8, 2, 1), (6, 0, 2, 1), (6, 5, 2, 1), (6, 8, 2, 1), (8, 0, 2, 1), (8, 5, 2, 1), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 9, 12, 0), (3, 0, 12, 1), (3, 5, 12, 1), (3, 8, 12, 1)]
excute 13:46:42.445133 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:46:42.450101 line       505                     if (self.RELOCATE):
excute 13:46:42.453124 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:46:42.457115 line       505                     if (self.RELOCATE):
excute 13:46:42.461109 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:46:42.464094 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, -2, 0)
excute 13:46:42.467087 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:46:42.471079 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:42.475035 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:42.479026 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, -2, 0)
excute 13:46:42.483012 line       556                     i = i_j[0]
excute 13:46:42.487003 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:42.490031 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:42.493997 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, -2, 0)
excute 13:46:42.497008 line       556                     i = i_j[0]
excute 13:46:42.500970 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:42.503993 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:42.507984 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, -2, 0)
excute 13:46:42.511973 line       556                     i = i_j[0]
excute 13:46:42.515926 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:42.518953 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:42.522911 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, -2, 0)
excute 13:46:42.527896 line       556                     i = i_j[0]
excute 13:46:42.531884 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:42.535873 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:42.538865 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, -2, 0)
excute 13:46:42.542854 line       556                     i = i_j[0]
excute 13:46:42.546843 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:42.550832 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:42.553826 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, -2, 0)
excute 13:46:42.557814 line       556                     i = i_j[0]
excute 13:46:42.562800 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:42.565793 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:42.569782 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, -2, 1)
excute 13:46:42.573772 line       556                     i = i_j[0]
excute 13:46:42.578759 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:42.581782 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:42.585739 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, -2, 1)
excute 13:46:42.588763 line       556                     i = i_j[0]
excute 13:46:42.592720 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:42.596711 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:42.600699 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, -1, 0)
excute 13:46:42.603691 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:46:42.607681 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:42.611688 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:42.615659 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, -1, 0)
excute 13:46:42.618681 line       556                     i = i_j[0]
excute 13:46:42.624634 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:42.631616 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:42.637600 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, -1, 0)
excute 13:46:42.641590 line       556                     i = i_j[0]
excute 13:46:42.649567 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:42.655561 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:42.659567 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, -1, 0)
excute 13:46:42.663533 line       556                     i = i_j[0]
excute 13:46:42.667554 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:42.670543 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:42.674502 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, -1, 0)
excute 13:46:42.677524 line       556                     i = i_j[0]
excute 13:46:42.681482 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:42.684505 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:42.688464 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, -1, 0)
excute 13:46:42.691489 line       556                     i = i_j[0]
excute 13:46:42.695477 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:42.699467 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:42.702457 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, -1, 0)
excute 13:46:42.706447 line       556                     i = i_j[0]
excute 13:46:42.710405 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:42.714426 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:42.717417 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, -1, 1)
excute 13:46:42.721407 line       556                     i = i_j[0]
excute 13:46:42.724399 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:42.728356 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:42.735340 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 115
excute 13:46:42.742321 line       560                         if (t_tmp > self.TIME):
excute 13:46:42.746341 line       563                             if (available_vhecles[i][t] == 0):
excute 13:46:42.749301 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:46:42.755287 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 132
excute 13:46:42.760272 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:46:42.763297 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, -1, 1)
excute 13:46:42.767253 line       556                     i = i_j[0]
excute 13:46:42.770244 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:42.774236 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:42.778227 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 0, 0)
excute 13:46:42.793248 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:46:42.798238 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:42.802227 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:42.805219 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 0, 0)
excute 13:46:42.809208 line       556                     i = i_j[0]
excute 13:46:42.813198 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:42.816221 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:42.820202 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 0, 0)
excute 13:46:42.824170 line       556                     i = i_j[0]
excute 13:46:42.828157 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:42.832148 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:42.838131 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 0, 0)
excute 13:46:42.842121 line       556                     i = i_j[0]
excute 13:46:42.846111 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:42.850100 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:42.855088 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 0, 0)
excute 13:46:42.858079 line       556                     i = i_j[0]
excute 13:46:42.862069 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:42.866058 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:42.870063 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 0, 0)
excute 13:46:42.874035 line       556                     i = i_j[0]
excute 13:46:42.878025 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:42.881018 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:42.886006 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 0, 0)
excute 13:46:42.888997 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:46:42.892985 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:42.896974 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:42.899967 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 0, 0)
excute 13:46:42.903957 line       556                     i = i_j[0]
excute 13:46:42.907945 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:42.910938 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:42.914927 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 0, 0)
excute 13:46:42.917919 line       556                     i = i_j[0]
excute 13:46:42.921908 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:42.924930 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:42.928890 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 0, 0)
excute 13:46:42.931880 line       556                     i = i_j[0]
excute 13:46:42.935872 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:42.940856 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:42.944848 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 0, 0)
excute 13:46:42.949848 line       556                     i = i_j[0]
excute 13:46:42.952826 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:42.956815 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:42.962821 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 0, 0)
excute 13:46:42.967787 line       556                     i = i_j[0]
excute 13:46:42.971788 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:42.974767 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:42.978760 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 0, 0)
excute 13:46:42.982745 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:46:42.985737 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:42.989728 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:42.993717 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 0, 0)
excute 13:46:42.996707 line       556                     i = i_j[0]
excute 13:46:43.001694 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:43.004686 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.008678 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 0, 0)
excute 13:46:43.012674 line       556                     i = i_j[0]
excute 13:46:43.015657 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:43.019646 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.022639 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 0, 0)
excute 13:46:43.025630 line       556                     i = i_j[0]
excute 13:46:43.029620 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:43.033609 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.036632 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 0, 0)
excute 13:46:43.040591 line       556                     i = i_j[0]
excute 13:46:43.044611 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:43.048603 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.051595 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 0, 0)
excute 13:46:43.055581 line       556                     i = i_j[0]
excute 13:46:43.059539 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:43.062562 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.066521 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 0, 1)
excute 13:46:43.070512 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:46:43.074500 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:43.078503 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.082494 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 0, 1)
excute 13:46:43.085501 line       556                     i = i_j[0]
excute 13:46:43.089459 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:43.092482 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.096440 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 0, 1)
excute 13:46:43.099467 line       556                     i = i_j[0]
excute 13:46:43.103423 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:43.106444 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.110419 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 0, 1)
excute 13:46:43.113426 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:46:43.117385 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:43.121375 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.125363 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 0, 1)
excute 13:46:43.128390 line       556                     i = i_j[0]
excute 13:46:43.132366 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:43.136371 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.140361 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 0, 1)
excute 13:46:43.144314 line       556                     i = i_j[0]
excute 13:46:43.148308 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:43.151330 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.155323 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 0, 1)
excute 13:46:43.159284 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:46:43.162266 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:43.166285 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.170248 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 0, 1)
excute 13:46:43.173266 line       556                     i = i_j[0]
excute 13:46:43.177237 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:43.180247 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.184206 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 118
excute 13:46:43.188196 line       560                         if (t_tmp > self.TIME):
excute 13:46:43.191219 line       563                             if (available_vhecles[i][t] == 0):
excute 13:46:43.195188 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:46:43.198200 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:46:43.201192 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:46:43.205183 line       569                                     available_vhecles[i][t],
excute 13:46:43.208175 line       570                                     available_vhecles[j][t_tmp],
excute 13:46:43.211168 line       571                                     self.S_capacities[j],
excute 13:46:43.215123 line       572                                     demands[t][i][j],
excute 13:46:43.218148 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 2
calc_contract     Starting var:.. available_vhecles_target = 4
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 103
calc_contract     13:46:43.221138 call       352     def caluculate_contract(
calc_contract     13:46:43.224135 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:46:43.225097 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:46:43.225097 line       362         if (available_vhecles_start >= demand):
calc_contract     13:46:43.226096 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:46:43.227092 line       369                 can_contract = capacity_target - available_vhecles_target
calc_contract     New var:....... can_contract = -1
calc_contract     13:46:43.227092 line       370                 rsf += (available_vhecles_target + demand - capacity_target)
calc_contract     Modified var:.. rsf = 2
calc_contract     13:46:43.228090 line       385         return [can_contract, rsf, rse]
calc_contract     13:46:43.229087 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [-1, 2, 0]
excute Modified var:.. can_contract = -1
excute Modified var:.. rsf_tmp = 2
excute Modified var:.. rse_tmp = 0
excute 13:46:43.230116 line       575                                 rsf += rsf_tmp
excute Modified var:.. rsf = 134
excute 13:46:43.235071 line       576                                 rse += rse_tmp
excute 13:46:43.239073 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
move_cars     Starting var:.. i = 7
move_cars     Starting var:.. j = 5
move_cars     Starting var:.. t = 103
move_cars     Starting var:.. t_tmp = 118
move_cars     Starting var:.. can_contract = -1
move_cars     13:46:43.242082 call       388     def move_cars(
move_cars     13:46:43.248038 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:46:43.249065 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:46:43.251029 line       399         return available_vhecles
move_cars     13:46:43.252057 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute 13:46:43.255017 line       579                                 success += can_contract
excute Modified var:.. success = 41
excute 13:46:43.258039 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 0, 1)
excute 13:46:43.261998 line       556                     i = i_j[0]
excute 13:46:43.265988 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:43.269978 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.273968 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 0)
excute 13:46:43.277959 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:46:43.281977 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:43.285967 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.289925 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:46:43.292946 line       556                     i = i_j[0]
excute 13:46:43.296906 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:43.299928 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.303887 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 0)
excute 13:46:43.307876 line       556                     i = i_j[0]
excute 13:46:43.310900 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:43.314856 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.318847 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 0)
excute 13:46:43.323837 line       556                     i = i_j[0]
excute 13:46:43.334804 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:43.340788 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.344778 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 0)
excute 13:46:43.350762 line       556                     i = i_j[0]
excute 13:46:43.354786 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:43.358771 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.362730 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 0)
excute 13:46:43.365721 line       556                     i = i_j[0]
excute 13:46:43.369741 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:43.373731 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.377690 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 1)
excute 13:46:43.380711 line       556                     i = i_j[0]
excute 13:46:43.385700 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:43.388692 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.392680 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 1)
excute 13:46:43.396638 line       556                     i = i_j[0]
excute 13:46:43.400629 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:43.403650 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.407610 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 1)
excute 13:46:43.410635 line       556                     i = i_j[0]
excute 13:46:43.414591 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:43.417613 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.421571 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 116
excute 13:46:43.425593 line       560                         if (t_tmp > self.TIME):
excute 13:46:43.429553 line       563                             if (available_vhecles[i][t] == 0):
excute 13:46:43.432573 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:46:43.435565 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:46:43.439558 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:46:43.442550 line       569                                     available_vhecles[i][t],
excute 13:46:43.447563 line       570                                     available_vhecles[j][t_tmp],
excute 13:46:43.453487 line       571                                     self.S_capacities[j],
excute 13:46:43.457514 line       572                                     demands[t][i][j],
excute 13:46:43.460505 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 2
calc_contract     Starting var:.. available_vhecles_target = 1
calc_contract     Starting var:.. capacity_target = 2
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 103
calc_contract     13:46:43.463494 call       352     def caluculate_contract(
calc_contract     13:46:43.467469 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:46:43.467469 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:46:43.468447 line       362         if (available_vhecles_start >= demand):
calc_contract     13:46:43.469445 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:46:43.469445 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:46:43.470443 line       385         return [can_contract, rsf, rse]
calc_contract     13:46:43.471441 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute Modified var:.. can_contract = 1
excute Modified var:.. rsf_tmp = 0
excute 13:46:43.472437 line       575                                 rsf += rsf_tmp
excute 13:46:43.476435 line       576                                 rse += rse_tmp
excute 13:46:43.479450 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
move_cars     Starting var:.. i = 9
move_cars     Starting var:.. j = 8
move_cars     Starting var:.. t = 103
move_cars     Starting var:.. t_tmp = 116
move_cars     Starting var:.. can_contract = 1
move_cars     13:46:43.484404 call       388     def move_cars(
move_cars     13:46:43.488393 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     13:46:43.490423 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:46:43.492383 line       399         return available_vhecles
move_cars     13:46:43.493417 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:46:43.495408 line       579                                 success += can_contract
excute Modified var:.. success = 42
excute 13:46:43.499403 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:46:43.503352 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:46:43.507343 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:43.511332 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.515322 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:46:43.518349 line       556                     i = i_j[0]
excute 13:46:43.522302 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:43.525330 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.529283 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:46:43.532277 line       556                     i = i_j[0]
excute 13:46:43.536266 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:43.540255 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.544245 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:46:43.548265 line       556                     i = i_j[0]
excute 13:46:43.552254 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:43.557209 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.560233 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:46:43.564191 line       556                     i = i_j[0]
excute 13:46:43.567215 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:43.571171 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.575162 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:46:43.579182 line       556                     i = i_j[0]
excute 13:46:43.583151 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:43.586166 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.590137 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 2, 0)
excute 13:46:43.593149 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:46:43.597103 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:43.604085 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.612062 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 2, 0)
excute 13:46:43.615055 line       556                     i = i_j[0]
excute 13:46:43.619043 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:43.623032 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.627022 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 2, 0)
excute 13:46:43.630045 line       556                     i = i_j[0]
excute 13:46:43.634007 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:43.638024 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.641983 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 2, 0)
excute 13:46:43.644973 line       556                     i = i_j[0]
excute 13:46:43.648965 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:43.653951 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.658939 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 2, 0)
excute 13:46:43.661959 line       556                     i = i_j[0]
excute 13:46:43.665926 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:43.669939 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.673899 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 2, 0)
excute 13:46:43.676921 line       556                     i = i_j[0]
excute 13:46:43.680880 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:43.683901 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.687859 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 2, 0)
excute 13:46:43.690882 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:46:43.694847 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:43.698831 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.702819 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 2, 0)
excute 13:46:43.706808 line       556                     i = i_j[0]
excute 13:46:43.710798 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:43.714788 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.718777 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 2, 0)
excute 13:46:43.721804 line       556                     i = i_j[0]
excute 13:46:43.725790 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:43.729747 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.732771 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 2, 0)
excute 13:46:43.736760 line       556                     i = i_j[0]
excute 13:46:43.739752 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:43.743731 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.747701 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 2, 0)
excute 13:46:43.750691 line       556                     i = i_j[0]
excute 13:46:43.755679 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:43.759669 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.764655 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 2, 0)
excute 13:46:43.767678 line       556                     i = i_j[0]
excute 13:46:43.785600 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:43.789588 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.793579 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 2, 0)
excute 13:46:43.796601 line       556                     i = i_j[0]
excute 13:46:43.800559 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:43.803581 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.807547 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 1)
excute 13:46:43.811531 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:46:43.818536 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:43.823496 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.827487 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 1)
excute 13:46:43.831477 line       556                     i = i_j[0]
excute 13:46:43.835466 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:43.838490 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.842446 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 1)
excute 13:46:43.845437 line       556                     i = i_j[0]
excute 13:46:43.849430 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:43.852421 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.857407 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 2, 1)
excute 13:46:43.860433 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:46:43.866416 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:43.869406 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.873399 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 2, 1)
excute 13:46:43.876388 line       556                     i = i_j[0]
excute 13:46:43.880377 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:43.884366 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.888356 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 2, 1)
excute 13:46:43.891315 line       556                     i = i_j[0]
excute 13:46:43.895306 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:43.899296 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.902288 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 2, 1)
excute 13:46:43.906277 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:46:43.910267 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:43.914270 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.918244 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 2, 1)
excute 13:46:43.921237 line       556                     i = i_j[0]
excute 13:46:43.925226 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:43.929215 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.933205 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 12, 0)
excute 13:46:43.937194 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:46:43.941184 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:43.945173 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.950159 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 12, 0)
excute 13:46:43.955145 line       556                     i = i_j[0]
excute 13:46:43.958172 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:43.962129 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.968110 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 12, 0)
excute 13:46:43.972100 line       556                     i = i_j[0]
excute 13:46:43.975123 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:43.979112 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.982107 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 12, 0)
excute 13:46:43.986094 line       556                     i = i_j[0]
excute 13:46:43.989056 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:43.993046 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:43.997035 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 12, 0)
excute 13:46:44.000056 line       556                     i = i_j[0]
excute 13:46:44.004017 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:44.007037 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:44.011028 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 12, 0)
excute 13:46:44.014021 line       556                     i = i_j[0]
excute 13:46:44.018010 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:44.021967 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:44.024961 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 12, 1)
excute 13:46:44.028949 line       556                     i = i_j[0]
excute 13:46:44.032938 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:44.036928 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:44.040918 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 12, 1)
excute 13:46:44.043909 line       556                     i = i_j[0]
excute 13:46:44.047898 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:44.051888 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:44.055877 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 12, 1)
excute 13:46:44.059865 line       556                     i = i_j[0]
excute 13:46:44.062893 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:44.066846 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:44.070837 line       555                 for i_j in i_j_list:
excute 13:46:44.074828 line       581             self.write_matrix(
excute 13:46:44.078846 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:46:44.081838 line       583                 result_file_path,
excute 13:46:44.085829 line       584                 mode='a'
excute 13:46:44.090782 line       488         for t in time_steps:
excute Modified var:.. t = 104
excute 13:46:44.095801 line       489             if (t != self.TIME + 1):
excute 13:46:44.102751 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:46:44.108735 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:46:44.112724 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:46:44.116746 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:44.120738 line       494                         if (i == j):
excute 13:46:44.124694 line       495                             continue
excute 13:46:44.128681 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:44.134665 line       494                         if (i == j):
excute 13:46:44.140650 line       496                         i_j_list.append((
excute 13:46:44.147631 line       497                             i, j,
excute 13:46:44.151623 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:44.156609 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0)]
excute 13:46:44.166585 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:44.171567 line       494                         if (i == j):
excute 13:46:44.178549 line       496                         i_j_list.append((
excute 13:46:44.181539 line       497                             i, j,
excute 13:46:44.185531 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:44.191546 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0)]
excute 13:46:44.195502 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:44.200526 line       494                         if (i == j):
excute 13:46:44.204512 line       496                         i_j_list.append((
excute 13:46:44.210463 line       497                             i, j,
excute 13:46:44.213454 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:44.218444 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1)]
excute 13:46:44.224426 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:44.228415 line       494                         if (i == j):
excute 13:46:44.235399 line       496                         i_j_list.append((
excute 13:46:44.238389 line       497                             i, j,
excute 13:46:44.242379 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:44.245370 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0)]
excute 13:46:44.250362 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:44.255343 line       494                         if (i == j):
excute 13:46:44.259334 line       496                         i_j_list.append((
excute 13:46:44.262354 line       497                             i, j,
excute 13:46:44.266326 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:44.269357 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2)]
excute 13:46:44.272331 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:44.277284 line       494                         if (i == j):
excute 13:46:44.282273 line       496                         i_j_list.append((
excute 13:46:44.285264 line       497                             i, j,
excute 13:46:44.289253 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:44.293242 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1)]
excute 13:46:44.296268 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:44.300239 line       494                         if (i == j):
excute 13:46:44.303246 line       496                         i_j_list.append((
excute 13:46:44.307203 line       497                             i, j,
excute 13:46:44.310198 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:44.313189 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0)]
excute 13:46:44.317179 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:44.321180 line       494                         if (i == j):
excute 13:46:44.324157 line       496                         i_j_list.append((
excute 13:46:44.335130 line       497                             i, j,
excute 13:46:44.340148 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:44.343139 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0)]
excute 13:46:44.346131 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:44.352084 line       494                         if (i == j):
excute 13:46:44.356098 line       496                         i_j_list.append((
excute 13:46:44.360063 line       497                             i, j,
excute 13:46:44.363086 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:44.366047 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0)]
excute 13:46:44.371033 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:44.374056 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:46:44.379012 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:44.383999 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:44.390979 line       494                         if (i == j):
excute 13:46:44.398965 line       496                         i_j_list.append((
excute 13:46:44.403954 line       497                             i, j,
excute 13:46:44.410928 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:44.415914 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0)]
excute 13:46:44.419903 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:44.425897 line       494                         if (i == j):
excute 13:46:44.431872 line       495                             continue
excute 13:46:44.436893 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:44.439849 line       494                         if (i == j):
excute 13:46:44.445842 line       496                         i_j_list.append((
excute 13:46:44.449823 line       497                             i, j,
excute 13:46:44.455811 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:44.461793 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0)]
excute 13:46:44.467775 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:44.473759 line       494                         if (i == j):
excute 13:46:44.477748 line       496                         i_j_list.append((
excute 13:46:44.484730 line       497                             i, j,
excute 13:46:44.488721 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:44.493736 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1)]
excute 13:46:44.497695 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:44.505675 line       494                         if (i == j):
excute 13:46:44.512655 line       496                         i_j_list.append((
excute 13:46:44.516679 line       497                             i, j,
excute 13:46:44.523657 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:44.529610 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0)]
excute 13:46:44.539618 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:44.542574 line       494                         if (i == j):
excute 13:46:44.547562 line       496                         i_j_list.append((
excute 13:46:44.550555 line       497                             i, j,
excute 13:46:44.553547 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:44.557536 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2)]
excute 13:46:44.561526 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:44.565514 line       494                         if (i == j):
excute 13:46:44.569504 line       496                         i_j_list.append((
excute 13:46:44.573523 line       497                             i, j,
excute 13:46:44.579507 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:44.585462 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1)]
excute 13:46:44.589449 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:44.593470 line       494                         if (i == j):
excute 13:46:44.597429 line       496                         i_j_list.append((
excute 13:46:44.600451 line       497                             i, j,
excute 13:46:44.603443 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:44.607401 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0)]
excute 13:46:44.610425 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:44.614385 line       494                         if (i == j):
excute 13:46:44.620401 line       496                         i_j_list.append((
excute 13:46:44.624355 line       497                             i, j,
excute 13:46:44.627380 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:44.630370 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0)]
excute 13:46:44.633363 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:44.637353 line       494                         if (i == j):
excute 13:46:44.641314 line       496                         i_j_list.append((
excute 13:46:44.644336 line       497                             i, j,
excute 13:46:44.648291 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:44.651284 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0)]
excute 13:46:44.656270 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:44.660260 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:46:44.663254 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:44.668239 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:44.672230 line       494                         if (i == j):
excute 13:46:44.675219 line       496                         i_j_list.append((
excute 13:46:44.679211 line       497                             i, j,
excute 13:46:44.683201 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:44.687188 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0)]
excute 13:46:44.691179 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:44.695167 line       494                         if (i == j):
excute 13:46:44.699158 line       496                         i_j_list.append((
excute 13:46:44.702149 line       497                             i, j,
excute 13:46:44.706139 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:44.709131 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0)]
excute 13:46:44.712123 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:44.717114 line       494                         if (i == j):
excute 13:46:44.720102 line       495                             continue
excute 13:46:44.724091 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:44.727082 line       494                         if (i == j):
excute 13:46:44.731073 line       496                         i_j_list.append((
excute 13:46:44.734064 line       497                             i, j,
excute 13:46:44.737056 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:44.741045 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1)]
excute 13:46:44.744037 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:44.748027 line       494                         if (i == j):
excute 13:46:44.752016 line       496                         i_j_list.append((
excute 13:46:44.756005 line       497                             i, j,
excute 13:46:44.759995 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:44.763018 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0)]
excute 13:46:44.766008 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:44.769969 line       494                         if (i == j):
excute 13:46:44.773989 line       496                         i_j_list.append((
excute 13:46:44.776979 line       497                             i, j,
excute 13:46:44.779975 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:44.782967 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2)]
excute 13:46:44.786922 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:44.790910 line       494                         if (i == j):
excute 13:46:44.794902 line       496                         i_j_list.append((
excute 13:46:44.797894 line       497                             i, j,
excute 13:46:44.801883 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:44.804875 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1)]
excute 13:46:44.807866 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:44.812853 line       494                         if (i == j):
excute 13:46:44.815875 line       496                         i_j_list.append((
excute 13:46:44.819842 line       497                             i, j,
excute 13:46:44.822827 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:44.825848 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0)]
excute 13:46:44.829811 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:44.832830 line       494                         if (i == j):
excute 13:46:44.836788 line       496                         i_j_list.append((
excute 13:46:44.839811 line       497                             i, j,
excute 13:46:44.842803 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:44.846797 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:46:44.849752 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:44.853777 line       494                         if (i == j):
excute 13:46:44.857732 line       496                         i_j_list.append((
excute 13:46:44.860726 line       497                             i, j,
excute 13:46:44.863717 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:44.866709 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:46:44.870698 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:44.873721 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:46:44.876713 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:44.882665 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:44.886689 line       494                         if (i == j):
excute 13:46:44.892640 line       496                         i_j_list.append((
excute 13:46:44.895632 line       497                             i, j,
excute 13:46:44.898624 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:44.902613 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0)]
excute 13:46:44.905605 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:44.909594 line       494                         if (i == j):
excute 13:46:44.913589 line       496                         i_j_list.append((
excute 13:46:44.916605 line       497                             i, j,
excute 13:46:44.919598 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:44.922589 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0)]
excute 13:46:44.926561 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:44.929571 line       494                         if (i == j):
excute 13:46:44.933529 line       496                         i_j_list.append((
excute 13:46:44.936553 line       497                             i, j,
excute 13:46:44.939548 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:44.943537 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0)]
excute 13:46:44.947495 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:44.951514 line       494                         if (i == j):
excute 13:46:44.955505 line       495                             continue
excute 13:46:44.958498 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:44.962483 line       494                         if (i == j):
excute 13:46:44.966442 line       496                         i_j_list.append((
excute 13:46:44.969465 line       497                             i, j,
excute 13:46:44.972457 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:44.976446 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0)]
excute 13:46:44.979440 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:44.983416 line       494                         if (i == j):
excute 13:46:44.987386 line       496                         i_j_list.append((
excute 13:46:44.990412 line       497                             i, j,
excute 13:46:44.994367 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:44.997358 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2)]
excute 13:46:45.001349 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:45.005339 line       494                         if (i == j):
excute 13:46:45.010327 line       496                         i_j_list.append((
excute 13:46:45.013317 line       497                             i, j,
excute 13:46:45.017307 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.020299 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1)]
excute 13:46:45.023291 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:45.027280 line       494                         if (i == j):
excute 13:46:45.031270 line       496                         i_j_list.append((
excute 13:46:45.035259 line       497                             i, j,
excute 13:46:45.038250 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.042239 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0)]
excute 13:46:45.045233 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:45.048254 line       494                         if (i == j):
excute 13:46:45.052245 line       496                         i_j_list.append((
excute 13:46:45.056234 line       497                             i, j,
excute 13:46:45.059227 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.062220 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0)]
excute 13:46:45.066207 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:45.069169 line       494                         if (i == j):
excute 13:46:45.073158 line       496                         i_j_list.append((
excute 13:46:45.077177 line       497                             i, j,
excute 13:46:45.080168 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.083163 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0)]
excute 13:46:45.087151 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:45.094102 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:46:45.100085 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:45.105073 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:45.108094 line       494                         if (i == j):
excute 13:46:45.112055 line       496                         i_j_list.append((
excute 13:46:45.119065 line       497                             i, j,
excute 13:46:45.122057 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.126015 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0)]
excute 13:46:45.129038 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:45.132996 line       494                         if (i == j):
excute 13:46:45.136987 line       496                         i_j_list.append((
excute 13:46:45.140975 line       497                             i, j,
excute 13:46:45.143998 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.146992 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0)]
excute 13:46:45.149985 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:45.153973 line       494                         if (i == j):
excute 13:46:45.157964 line       496                         i_j_list.append((
excute 13:46:45.160953 line       497                             i, j,
excute 13:46:45.164923 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.167904 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0)]
excute 13:46:45.175907 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:45.179874 line       494                         if (i == j):
excute 13:46:45.186853 line       496                         i_j_list.append((
excute 13:46:45.193846 line       497                             i, j,
excute 13:46:45.197823 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.202846 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1)]
excute 13:46:45.205837 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:45.209793 line       494                         if (i == j):
excute 13:46:45.213784 line       495                             continue
excute 13:46:45.216803 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:45.219795 line       494                         if (i == j):
excute 13:46:45.223756 line       496                         i_j_list.append((
excute 13:46:45.226779 line       497                             i, j,
excute 13:46:45.230735 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.233759 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2)]
excute 13:46:45.236749 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:45.240708 line       494                         if (i == j):
excute 13:46:45.245698 line       496                         i_j_list.append((
excute 13:46:45.248689 line       497                             i, j,
excute 13:46:45.252677 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.256666 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1)]
excute 13:46:45.259659 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:45.263648 line       494                         if (i == j):
excute 13:46:45.267637 line       496                         i_j_list.append((
excute 13:46:45.271627 line       497                             i, j,
excute 13:46:45.277609 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.282595 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0)]
excute 13:46:45.289609 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:45.293568 line       494                         if (i == j):
excute 13:46:45.297557 line       496                         i_j_list.append((
excute 13:46:45.300579 line       497                             i, j,
excute 13:46:45.305534 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.308528 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0)]
excute 13:46:45.311520 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:45.315509 line       494                         if (i == j):
excute 13:46:45.319499 line       496                         i_j_list.append((
excute 13:46:45.323519 line       497                             i, j,
excute 13:46:45.328474 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.335457 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0)]
excute 13:46:45.339476 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:45.343433 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:46:45.346459 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:45.350415 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:45.355434 line       494                         if (i == j):
excute 13:46:45.359396 line       496                         i_j_list.append((
excute 13:46:45.362384 line       497                             i, j,
excute 13:46:45.366372 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.370362 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0)]
excute 13:46:45.374353 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:45.378342 line       494                         if (i == j):
excute 13:46:45.382332 line       496                         i_j_list.append((
excute 13:46:45.386352 line       497                             i, j,
excute 13:46:45.390313 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.393302 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0)]
excute 13:46:45.397291 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:45.401281 line       494                         if (i == j):
excute 13:46:45.407264 line       496                         i_j_list.append((
excute 13:46:45.410290 line       497                             i, j,
excute 13:46:45.414275 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.418267 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0)]
excute 13:46:45.421260 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:45.425232 line       494                         if (i == j):
excute 13:46:45.429239 line       496                         i_j_list.append((
excute 13:46:45.433193 line       497                             i, j,
excute 13:46:45.436217 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.439209 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1)]
excute 13:46:45.442203 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:45.446182 line       494                         if (i == j):
excute 13:46:45.451160 line       496                         i_j_list.append((
excute 13:46:45.455135 line       497                             i, j,
excute 13:46:45.458129 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.461120 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0)]
excute 13:46:45.465108 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:45.469135 line       494                         if (i == j):
excute 13:46:45.472122 line       495                             continue
excute 13:46:45.476101 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:45.479102 line       494                         if (i == j):
excute 13:46:45.483061 line       496                         i_j_list.append((
excute 13:46:45.486088 line       497                             i, j,
excute 13:46:45.489076 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.493035 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1)]
excute 13:46:45.496061 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:45.500016 line       494                         if (i == j):
excute 13:46:45.504014 line       496                         i_j_list.append((
excute 13:46:45.508991 line       497                             i, j,
excute 13:46:45.512982 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.516971 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0)]
excute 13:46:45.520961 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:45.524949 line       494                         if (i == j):
excute 13:46:45.527942 line       496                         i_j_list.append((
excute 13:46:45.531932 line       497                             i, j,
excute 13:46:45.534923 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.538912 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0)]
excute 13:46:45.541905 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:45.545894 line       494                         if (i == j):
excute 13:46:45.549883 line       496                         i_j_list.append((
excute 13:46:45.553872 line       497                             i, j,
excute 13:46:45.557862 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.560854 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0)]
excute 13:46:45.564843 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:45.569829 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:46:45.573819 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:45.577809 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:45.580800 line       494                         if (i == j):
excute 13:46:45.584790 line       496                         i_j_list.append((
excute 13:46:45.587783 line       497                             i, j,
excute 13:46:45.591770 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.594792 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0)]
excute 13:46:45.598751 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:45.601777 line       494                         if (i == j):
excute 13:46:45.605732 line       496                         i_j_list.append((
excute 13:46:45.608755 line       497                             i, j,
excute 13:46:45.613745 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.616735 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0)]
excute 13:46:45.619727 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:45.623686 line       494                         if (i == j):
excute 13:46:45.627677 line       496                         i_j_list.append((
excute 13:46:45.630697 line       497                             i, j,
excute 13:46:45.633692 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.637679 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0)]
excute 13:46:45.640671 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:45.644627 line       494                         if (i == j):
excute 13:46:45.649616 line       496                         i_j_list.append((
excute 13:46:45.655599 line       497                             i, j,
excute 13:46:45.662604 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.666594 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 1)]
excute 13:46:45.669586 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:45.673551 line       494                         if (i == j):
excute 13:46:45.677542 line       496                         i_j_list.append((
excute 13:46:45.680563 line       497                             i, j,
excute 13:46:45.683555 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.687514 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 1), (6, 4, 2, 0)]
excute 13:46:45.690537 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:45.694495 line       494                         if (i == j):
excute 13:46:45.697521 line       496                         i_j_list.append((
excute 13:46:45.701507 line       497                             i, j,
excute 13:46:45.704499 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.707493 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 1), (6, 4, 2, 0), (6, 5, 2, 2)]
excute 13:46:45.711481 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:45.717434 line       494                         if (i == j):
excute 13:46:45.721424 line       495                             continue
excute 13:46:45.724454 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:45.727443 line       494                         if (i == j):
excute 13:46:45.731433 line       496                         i_j_list.append((
excute 13:46:45.735399 line       497                             i, j,
excute 13:46:45.738414 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.741407 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 1), (6, 4, 2, 0), (6, 5, 2, 2), (6, 7, 2, 0)]
excute 13:46:45.744398 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:45.748350 line       494                         if (i == j):
excute 13:46:45.752340 line       496                         i_j_list.append((
excute 13:46:45.756331 line       497                             i, j,
excute 13:46:45.759323 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.763313 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 1), (6, 4, 2, 0), (6, 5, 2, 2), (6, 7, 2, 0), (6, 8, 2, 0)]
excute 13:46:45.767300 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:45.771290 line       494                         if (i == j):
excute 13:46:45.775280 line       496                         i_j_list.append((
excute 13:46:45.778273 line       497                             i, j,
excute 13:46:45.782262 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.786250 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 1), (6, 4, 2, 0), (6, 5, 2, 2), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0)]
excute 13:46:45.789244 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:45.792235 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:46:45.796224 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:45.800214 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:45.804201 line       494                         if (i == j):
excute 13:46:45.808192 line       496                         i_j_list.append((
excute 13:46:45.811214 line       497                             i, j,
excute 13:46:45.814206 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.819164 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 1), (6, 4, 2, 0), (6, 5, 2, 2), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -1, 0)]
excute 13:46:45.823182 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:45.827142 line       494                         if (i == j):
excute 13:46:45.831132 line       496                         i_j_list.append((
excute 13:46:45.834153 line       497                             i, j,
excute 13:46:45.837145 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.841103 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 1), (6, 4, 2, 0), (6, 5, 2, 2), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -1, 0), (7, 1, -1, 0)]
excute 13:46:45.844130 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:45.847119 line       494                         if (i == j):
excute 13:46:45.851108 line       496                         i_j_list.append((
excute 13:46:45.855098 line       497                             i, j,
excute 13:46:45.858089 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.861082 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 1), (6, 4, 2, 0), (6, 5, 2, 2), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0)]
excute 13:46:45.865042 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:45.868065 line       494                         if (i == j):
excute 13:46:45.872053 line       496                         i_j_list.append((
excute 13:46:45.875044 line       497                             i, j,
excute 13:46:45.879033 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.882025 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 1), (6, 4, 2, 0), (6, 5, 2, 2), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1)]
excute 13:46:45.886016 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:45.890004 line       494                         if (i == j):
excute 13:46:45.892995 line       496                         i_j_list.append((
excute 13:46:45.896983 line       497                             i, j,
excute 13:46:45.899945 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.906927 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 1), (6, 4, 2, 0), (6, 5, 2, 2), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0)]
excute 13:46:45.910916 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:45.914916 line       494                         if (i == j):
excute 13:46:45.917935 line       496                         i_j_list.append((
excute 13:46:45.921888 line       497                             i, j,
excute 13:46:45.925908 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.928901 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 1), (6, 4, 2, 0), (6, 5, 2, 2), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 2)]
excute 13:46:45.932858 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:45.935882 line       494                         if (i == j):
excute 13:46:45.939867 line       496                         i_j_list.append((
excute 13:46:45.942862 line       497                             i, j,
excute 13:46:45.946820 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.950811 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 1), (6, 4, 2, 0), (6, 5, 2, 2), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 1)]
excute 13:46:45.955799 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:45.959788 line       494                         if (i == j):
excute 13:46:45.966771 line       495                             continue
excute 13:46:45.970758 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:45.974747 line       494                         if (i == j):
excute 13:46:45.978736 line       496                         i_j_list.append((
excute 13:46:45.981758 line       497                             i, j,
excute 13:46:45.985749 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:45.988739 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 1), (6, 4, 2, 0), (6, 5, 2, 2), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 1), (7, 8, -1, 0)]
excute 13:46:45.992698 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:45.995724 line       494                         if (i == j):
excute 13:46:45.999711 line       496                         i_j_list.append((
excute 13:46:46.003670 line       497                             i, j,
excute 13:46:46.007660 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:46.010649 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 1), (6, 4, 2, 0), (6, 5, 2, 2), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0)]
excute 13:46:46.014640 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:46.018630 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:46:46.022619 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:46.027604 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:46.031594 line       494                         if (i == j):
excute 13:46:46.034617 line       496                         i_j_list.append((
excute 13:46:46.038606 line       497                             i, j,
excute 13:46:46.041568 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:46.045558 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 1), (6, 4, 2, 0), (6, 5, 2, 2), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0)]
excute 13:46:46.048550 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:46.052539 line       494                         if (i == j):
excute 13:46:46.057542 line       496                         i_j_list.append((
excute 13:46:46.060518 line       497                             i, j,
excute 13:46:46.063509 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:46.067499 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 1), (6, 4, 2, 0), (6, 5, 2, 2), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0)]
excute 13:46:46.071489 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:46.075478 line       494                         if (i == j):
excute 13:46:46.079467 line       496                         i_j_list.append((
excute 13:46:46.082459 line       497                             i, j,
excute 13:46:46.086448 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:46.091434 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 1), (6, 4, 2, 0), (6, 5, 2, 2), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0)]
excute 13:46:46.096455 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:46.100410 line       494                         if (i == j):
excute 13:46:46.103434 line       496                         i_j_list.append((
excute 13:46:46.106425 line       497                             i, j,
excute 13:46:46.110415 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:46.113406 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 1), (6, 4, 2, 0), (6, 5, 2, 2), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 1)]
excute 13:46:46.117364 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:46.120391 line       494                         if (i == j):
excute 13:46:46.124377 line       496                         i_j_list.append((
excute 13:46:46.129333 line       497                             i, j,
excute 13:46:46.132326 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:46.136315 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 1), (6, 4, 2, 0), (6, 5, 2, 2), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 1), (8, 4, 2, 0)]
excute 13:46:46.140303 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:46.144293 line       494                         if (i == j):
excute 13:46:46.147319 line       496                         i_j_list.append((
excute 13:46:46.151273 line       497                             i, j,
excute 13:46:46.154297 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:46.158267 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 1), (6, 4, 2, 0), (6, 5, 2, 2), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 1), (8, 4, 2, 0), (8, 5, 2, 2)]
excute 13:46:46.161249 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:46.166235 line       494                         if (i == j):
excute 13:46:46.169228 line       496                         i_j_list.append((
excute 13:46:46.172220 line       497                             i, j,
excute 13:46:46.176208 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:46.180198 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 1), (6, 4, 2, 0), (6, 5, 2, 2), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 1), (8, 4, 2, 0), (8, 5, 2, 2), (8, 6, 2, 1)]
excute 13:46:46.183193 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:46.187185 line       494                         if (i == j):
excute 13:46:46.191198 line       496                         i_j_list.append((
excute 13:46:46.194190 line       497                             i, j,
excute 13:46:46.198180 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:46.201171 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 1), (6, 4, 2, 0), (6, 5, 2, 2), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 1), (8, 4, 2, 0), (8, 5, 2, 2), (8, 6, 2, 1), (8, 7, 2, 0)]
excute 13:46:46.205161 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:46.209123 line       494                         if (i == j):
excute 13:46:46.213110 line       495                             continue
excute 13:46:46.216134 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:46.220089 line       494                         if (i == j):
excute 13:46:46.223113 line       496                         i_j_list.append((
excute 13:46:46.227071 line       497                             i, j,
excute 13:46:46.230066 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:46.234054 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 1), (6, 4, 2, 0), (6, 5, 2, 2), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 1), (8, 4, 2, 0), (8, 5, 2, 2), (8, 6, 2, 1), (8, 7, 2, 0), (8, 9, 2, 0)]
excute 13:46:46.238043 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:46.242033 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:46:46.246021 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:46:46.250042 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:46.254031 line       494                         if (i == j):
excute 13:46:46.257988 line       496                         i_j_list.append((
excute 13:46:46.261979 line       497                             i, j,
excute 13:46:46.265968 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:46.269957 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 1), (6, 4, 2, 0), (6, 5, 2, 2), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 1), (8, 4, 2, 0), (8, 5, 2, 2), (8, 6, 2, 1), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0)]
excute 13:46:46.272950 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:46.277938 line       494                         if (i == j):
excute 13:46:46.281927 line       496                         i_j_list.append((
excute 13:46:46.285916 line       497                             i, j,
excute 13:46:46.288937 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:46.292895 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 1), (6, 4, 2, 0), (6, 5, 2, 2), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 1), (8, 4, 2, 0), (8, 5, 2, 2), (8, 6, 2, 1), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0)]
excute 13:46:46.295921 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:46.299876 line       494                         if (i == j):
excute 13:46:46.303866 line       496                         i_j_list.append((
excute 13:46:46.306857 line       497                             i, j,
excute 13:46:46.310848 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:46.313870 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 1), (6, 4, 2, 0), (6, 5, 2, 2), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 1), (8, 4, 2, 0), (8, 5, 2, 2), (8, 6, 2, 1), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0)]
excute 13:46:46.320821 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:46.326806 line       494                         if (i == j):
excute 13:46:46.344757 line       496                         i_j_list.append((
excute 13:46:46.348747 line       497                             i, j,
excute 13:46:46.356726 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:46.365702 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 1), (6, 4, 2, 0), (6, 5, 2, 2), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 1), (8, 4, 2, 0), (8, 5, 2, 2), (8, 6, 2, 1), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 1)]
excute 13:46:46.374678 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:46.379664 line       494                         if (i == j):
excute 13:46:46.389637 line       496                         i_j_list.append((
excute 13:46:46.394624 line       497                             i, j,
excute 13:46:46.398613 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:46.403602 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 1), (6, 4, 2, 0), (6, 5, 2, 2), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 1), (8, 4, 2, 0), (8, 5, 2, 2), (8, 6, 2, 1), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 1), (9, 4, 2, 0)]
excute 13:46:46.410594 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:46.420557 line       494                         if (i == j):
excute 13:46:46.431526 line       496                         i_j_list.append((
excute 13:46:46.438508 line       497                             i, j,
excute 13:46:46.444490 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:46.451472 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 1), (6, 4, 2, 0), (6, 5, 2, 2), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 1), (8, 4, 2, 0), (8, 5, 2, 2), (8, 6, 2, 1), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 1), (9, 4, 2, 0), (9, 5, 2, 2)]
excute 13:46:46.455462 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:46.461446 line       494                         if (i == j):
excute 13:46:46.469424 line       496                         i_j_list.append((
excute 13:46:46.476407 line       497                             i, j,
excute 13:46:46.481392 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:46.485381 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 1), (6, 4, 2, 0), (6, 5, 2, 2), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 1), (8, 4, 2, 0), (8, 5, 2, 2), (8, 6, 2, 1), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 1), (9, 4, 2, 0), (9, 5, 2, 2), (9, 6, 2, 1)]
excute 13:46:46.494357 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:46.501340 line       494                         if (i == j):
excute 13:46:46.507323 line       496                         i_j_list.append((
excute 13:46:46.514303 line       497                             i, j,
excute 13:46:46.519292 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:46.524278 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 1), (6, 4, 2, 0), (6, 5, 2, 2), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 1), (8, 4, 2, 0), (8, 5, 2, 2), (8, 6, 2, 1), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 1), (9, 4, 2, 0), (9, 5, 2, 2), (9, 6, 2, 1), (9, 7, 2, 0)]
excute 13:46:46.529264 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:46.537242 line       494                         if (i == j):
excute 13:46:46.542230 line       496                         i_j_list.append((
excute 13:46:46.550208 line       497                             i, j,
excute 13:46:46.556192 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:46.562175 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 1), (0, 4, -2, 0), (0, 5, -2, 2), (0, 6, -2, 1), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 2), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 2), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 1), (6, 4, 2, 0), (6, 5, 2, 2), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 1), (8, 4, 2, 0), (8, 5, 2, 2), (8, 6, 2, 1), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 1), (9, 4, 2, 0), (9, 5, 2, 2), (9, 6, 2, 1), (9, 7, 2, 0), (9, 8, 2, 0)]
excute 13:46:46.566165 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:46.572149 line       494                         if (i == j):
excute 13:46:46.577140 line       495                             continue
excute 13:46:46.583121 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:46.588107 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:46:46.594091 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 4, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (0, 3, -2, 1), (0, 6, -2, 1), (0, 5, -2, 2), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 4, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (7, 3, -1, 1), (7, 6, -1, 1), (7, 5, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 4, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (1, 3, 0, 1), (1, 6, 0, 1), (4, 3, 0, 1), (4, 6, 0, 1), (1, 5, 0, 2), (4, 5, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 4, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (5, 3, 1, 1), (5, 6, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 4, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 4, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 4, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 4, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0), (2, 3, 2, 1), (2, 6, 2, 1), (6, 3, 2, 1), (8, 3, 2, 1), (8, 6, 2, 1), (9, 3, 2, 1), (9, 6, 2, 1), (2, 5, 2, 2), (6, 5, 2, 2), (8, 5, 2, 2), (9, 5, 2, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (3, 6, 10, 1), (3, 5, 10, 2)]
excute 13:46:46.600076 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:46:46.605061 line       505                     if (self.RELOCATE):
excute 13:46:46.611046 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:46:46.616032 line       505                     if (self.RELOCATE):
excute 13:46:46.622015 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:46:46.626005 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, -2, 0)
excute 13:46:46.630992 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:46:46.639968 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:46.643957 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:46.653931 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, -2, 0)
excute 13:46:46.659914 line       556                     i = i_j[0]
excute 13:46:46.666899 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:46.672879 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:46.678865 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, -2, 0)
excute 13:46:46.684848 line       556                     i = i_j[0]
excute 13:46:46.692827 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:46.697813 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:46.702800 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, -2, 0)
excute 13:46:46.710778 line       556                     i = i_j[0]
excute 13:46:46.716763 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:46.722748 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:46.728732 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, -2, 0)
excute 13:46:46.735711 line       556                     i = i_j[0]
excute 13:46:46.742693 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:46.748680 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:46.755658 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, -2, 0)
excute 13:46:46.763639 line       556                     i = i_j[0]
excute 13:46:46.771618 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:46.776603 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:46.783586 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, -2, 1)
excute 13:46:46.788570 line       556                     i = i_j[0]
excute 13:46:46.793557 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:46.799541 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:46.806522 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, -2, 1)
excute 13:46:46.810512 line       556                     i = i_j[0]
excute 13:46:46.818490 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:46.825471 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:46.831456 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, -2, 2)
excute 13:46:46.837441 line       556                     i = i_j[0]
excute 13:46:46.843424 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:46.849408 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:46.856391 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -1, 0)
excute 13:46:46.860380 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:46:46.864374 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:46.875472 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:46.880397 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -1, 0)
excute 13:46:46.884384 line       556                     i = i_j[0]
excute 13:46:46.888374 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:46.892363 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:46.896352 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -1, 0)
excute 13:46:46.900342 line       556                     i = i_j[0]
excute 13:46:46.904332 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:46.907324 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:46.911313 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -1, 0)
excute 13:46:46.914305 line       556                     i = i_j[0]
excute 13:46:46.918294 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:46.921286 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:46.926274 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -1, 0)
excute 13:46:46.931261 line       556                     i = i_j[0]
excute 13:46:46.936247 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:46.940237 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:46.945224 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -1, 0)
excute 13:46:46.951208 line       556                     i = i_j[0]
excute 13:46:46.958189 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:46.966167 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:46.973148 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -1, 1)
excute 13:46:46.979132 line       556                     i = i_j[0]
excute 13:46:46.987111 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:46.992099 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.000076 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -1, 1)
excute 13:46:47.007057 line       556                     i = i_j[0]
excute 13:46:47.014038 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:47.021021 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.027005 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -1, 2)
excute 13:46:47.033985 line       556                     i = i_j[0]
excute 13:46:47.038972 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:47.043963 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.048946 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 0, 0)
excute 13:46:47.053933 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:46:47.058919 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:47.063920 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.068893 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 0, 0)
excute 13:46:47.074877 line       556                     i = i_j[0]
excute 13:46:47.080862 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:47.084850 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.090834 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 0, 0)
excute 13:46:47.096818 line       556                     i = i_j[0]
excute 13:46:47.100811 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:47.104796 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.108786 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 0, 0)
excute 13:46:47.112775 line       556                     i = i_j[0]
excute 13:46:47.116765 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:47.120753 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.126737 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 0, 0)
excute 13:46:47.132721 line       556                     i = i_j[0]
excute 13:46:47.137710 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:47.143694 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.148678 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 0, 0)
excute 13:46:47.154663 line       556                     i = i_j[0]
excute 13:46:47.160648 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:47.167628 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.171625 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 0, 0)
excute 13:46:47.179596 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:46:47.186577 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:47.192562 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.197549 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 0, 0)
excute 13:46:47.204530 line       556                     i = i_j[0]
excute 13:46:47.210513 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:47.213505 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.217495 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 0, 0)
excute 13:46:47.220486 line       556                     i = i_j[0]
excute 13:46:47.227468 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:47.230461 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.239437 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 0, 0)
excute 13:46:47.244424 line       556                     i = i_j[0]
excute 13:46:47.250407 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:47.254396 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.262375 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 0, 0)
excute 13:46:47.265366 line       556                     i = i_j[0]
excute 13:46:47.271351 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:47.277335 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.281324 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 0, 0)
excute 13:46:47.285314 line       556                     i = i_j[0]
excute 13:46:47.289302 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:47.292294 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.296284 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 0, 1)
excute 13:46:47.300274 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:46:47.303265 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:47.309249 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.313240 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 113
excute 13:46:47.316231 line       560                         if (t_tmp > self.TIME):
excute 13:46:47.320220 line       563                             if (available_vhecles[i][t] == 0):
excute 13:46:47.325208 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:46:47.333187 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:46:47.342162 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:46:47.349143 line       569                                     available_vhecles[i][t],
excute 13:46:47.356126 line       570                                     available_vhecles[j][t_tmp],
excute 13:46:47.363105 line       571                                     self.S_capacities[j],
excute 13:46:47.366098 line       572                                     demands[t][i][j],
excute 13:46:47.372082 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 3
calc_contract     Starting var:.. available_vhecles_target = -7
calc_contract     Starting var:.. capacity_target = 2
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 104
calc_contract     13:46:47.376071 call       352     def caluculate_contract(
calc_contract     13:46:47.380061 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:46:47.381059 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:46:47.382055 line       362         if (available_vhecles_start >= demand):
calc_contract     13:46:47.384050 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:46:47.385046 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:46:47.385046 line       385         return [can_contract, rsf, rse]
calc_contract     13:46:47.386045 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:46:47.387042 line       575                                 rsf += rsf_tmp
excute 13:46:47.392028 line       576                                 rse += rse_tmp
excute 13:46:47.397016 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     Starting var:.. i = 1
move_cars     Starting var:.. j = 3
move_cars     Starting var:.. t = 104
move_cars     Starting var:.. t_tmp = 113
move_cars     Starting var:.. can_contract = 1
move_cars     13:46:47.400006 call       388     def move_cars(
move_cars     13:46:47.403996 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:46:47.404994 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:46:47.406987 line       399         return available_vhecles
move_cars     13:46:47.408983 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:46:47.411976 line       579                                 success += can_contract
excute Modified var:.. success = 43
excute 13:46:47.415966 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 0, 1)
excute 13:46:47.419955 line       556                     i = i_j[0]
excute 13:46:47.424940 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:47.429927 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.433917 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 0, 1)
excute 13:46:47.437906 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:46:47.441896 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:47.447880 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.452865 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 0, 1)
excute 13:46:47.457853 line       556                     i = i_j[0]
excute 13:46:47.461842 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:47.469820 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.475806 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 0, 2)
excute 13:46:47.479794 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:46:47.484783 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:47.488774 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.492759 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 0, 2)
excute 13:46:47.496754 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:46:47.500739 line       557                     j = i_j[1]
excute 13:46:47.504728 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.508717 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 1, 0)
excute 13:46:47.511709 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:46:47.515698 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:47.522682 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.526669 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 1, 0)
excute 13:46:47.530657 line       556                     i = i_j[0]
excute 13:46:47.534646 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:47.538635 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.541627 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 1, 0)
excute 13:46:47.545617 line       556                     i = i_j[0]
excute 13:46:47.549606 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:47.552598 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.557585 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 1, 0)
excute 13:46:47.560577 line       556                     i = i_j[0]
excute 13:46:47.564566 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:47.568558 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.573543 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 1, 0)
excute 13:46:47.579528 line       556                     i = i_j[0]
excute 13:46:47.583550 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:47.586540 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.590498 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 1, 0)
excute 13:46:47.596481 line       556                     i = i_j[0]
excute 13:46:47.602468 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:47.605459 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.609448 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 1, 0)
excute 13:46:47.613439 line       556                     i = i_j[0]
excute 13:46:47.618425 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:47.621416 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.625406 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 1, 1)
excute 13:46:47.630393 line       556                     i = i_j[0]
excute 13:46:47.638370 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:47.643358 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.648343 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 1, 1)
excute 13:46:47.656322 line       556                     i = i_j[0]
excute 13:46:47.660324 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:47.667293 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.672278 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:46:47.678263 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:46:47.686242 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:47.691229 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.695219 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:46:47.700204 line       556                     i = i_j[0]
excute 13:46:47.705192 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:47.711175 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.716165 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:46:47.720152 line       556                     i = i_j[0]
excute 13:46:47.725138 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:47.732119 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.740098 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:46:47.746083 line       556                     i = i_j[0]
excute 13:46:47.753063 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:47.757053 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.762042 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:46:47.767027 line       556                     i = i_j[0]
excute 13:46:47.771015 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:47.776002 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.780989 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:46:47.785977 line       556                     i = i_j[0]
excute 13:46:47.790962 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:47.794952 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.799939 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 2, 0)
excute 13:46:47.803928 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:46:47.808916 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:47.812905 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.817890 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 2, 0)
excute 13:46:47.824871 line       556                     i = i_j[0]
excute 13:46:47.830855 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:47.835842 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.839832 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 2, 0)
excute 13:46:47.845815 line       556                     i = i_j[0]
excute 13:46:47.850802 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:47.854792 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.859779 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 2, 0)
excute 13:46:47.869613 line       556                     i = i_j[0]
excute 13:46:47.873605 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:47.876628 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.880586 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 2, 0)
excute 13:46:47.886570 line       556                     i = i_j[0]
excute 13:46:47.891561 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:47.895548 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.899535 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 2, 0)
excute 13:46:47.903553 line       556                     i = i_j[0]
excute 13:46:47.907516 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:47.910532 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.914496 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 2, 0)
excute 13:46:47.919485 line       556                     i = i_j[0]
excute 13:46:47.923474 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:47.926465 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.931450 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 2, 0)
excute 13:46:47.935439 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:46:47.940429 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:47.944416 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.949403 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 2, 0)
excute 13:46:47.953399 line       556                     i = i_j[0]
excute 13:46:47.958377 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:47.963366 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.967388 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 2, 0)
excute 13:46:47.972342 line       556                     i = i_j[0]
excute 13:46:47.976332 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:47.979353 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:47.983345 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 2, 0)
excute 13:46:47.988299 line       556                     i = i_j[0]
excute 13:46:47.993287 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:47.997275 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:48.001265 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 2, 0)
excute 13:46:48.006249 line       556                     i = i_j[0]
excute 13:46:48.013231 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:48.019216 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:48.027194 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 2, 0)
excute 13:46:48.031186 line       556                     i = i_j[0]
excute 13:46:48.037167 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:48.043151 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:48.049169 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 2, 0)
excute 13:46:48.052158 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:46:48.057114 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:48.065095 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:48.069085 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 2, 0)
excute 13:46:48.072076 line       556                     i = i_j[0]
excute 13:46:48.076065 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:48.081052 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:48.085039 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 2, 0)
excute 13:46:48.089031 line       556                     i = i_j[0]
excute 13:46:48.095014 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:48.100998 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:48.106013 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 2, 0)
excute 13:46:48.109007 line       556                     i = i_j[0]
excute 13:46:48.112996 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:48.117951 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:48.123936 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 2, 0)
excute 13:46:48.127925 line       556                     i = i_j[0]
excute 13:46:48.130949 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:48.134939 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:48.142241 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 2, 0)
excute 13:46:48.146234 line       556                     i = i_j[0]
excute 13:46:48.149256 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:48.153245 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:48.157235 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 1)
excute 13:46:48.161195 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:46:48.166182 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:48.170171 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:48.175158 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 1)
excute 13:46:48.178149 line       556                     i = i_j[0]
excute 13:46:48.183136 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:48.187124 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:48.191114 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 116
excute 13:46:48.195102 line       560                         if (t_tmp > self.TIME):
excute 13:46:48.202096 line       563                             if (available_vhecles[i][t] == 0):
excute 13:46:48.206074 line       564                                 rse += demands[t][i][j]
excute Modified var:.. rse = 126
excute 13:46:48.211059 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:46:48.218044 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 135
excute 13:46:48.224028 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:46:48.232006 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 2, 1)
excute 13:46:48.237989 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:46:48.242989 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:48.247961 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:48.250985 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 2, 1)
excute 13:46:48.256938 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:46:48.263920 line       557                     j = i_j[1]
excute 13:46:48.268906 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:48.272926 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 2, 1)
excute 13:46:48.275919 line       556                     i = i_j[0]
excute 13:46:48.281871 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:48.284893 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:48.289851 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 2, 1)
excute 13:46:48.294837 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:46:48.302816 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:48.306806 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:48.310795 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 2, 1)
excute 13:46:48.314784 line       556                     i = i_j[0]
excute 13:46:48.318773 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:48.322764 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:48.327751 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 2)
excute 13:46:48.337722 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:46:48.345734 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:48.349724 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:48.357668 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 115
excute 13:46:48.361659 line       560                         if (t_tmp > self.TIME):
excute 13:46:48.365647 line       563                             if (available_vhecles[i][t] == 0):
excute 13:46:48.369668 line       564                                 rse += demands[t][i][j]
excute Modified var:.. rse = 128
excute 13:46:48.373625 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:46:48.377623 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:46:48.385594 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 2, 2)
excute 13:46:48.390587 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:46:48.394600 line       557                     j = i_j[1]
excute 13:46:48.399556 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:48.404545 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 2, 2)
excute 13:46:48.409540 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:46:48.414516 line       557                     j = i_j[1]
excute 13:46:48.419506 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:48.424492 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 2, 2)
excute 13:46:48.429476 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:46:48.434463 line       557                     j = i_j[1]
excute 13:46:48.440449 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:48.445433 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 10, 0)
excute 13:46:48.450453 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:46:48.456419 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:48.461402 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:48.466381 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 10, 0)
excute 13:46:48.470368 line       556                     i = i_j[0]
excute 13:46:48.474359 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:48.478345 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:48.483332 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 10, 0)
excute 13:46:48.487323 line       556                     i = i_j[0]
excute 13:46:48.492309 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:48.497296 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:48.502281 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 10, 0)
excute 13:46:48.507270 line       556                     i = i_j[0]
excute 13:46:48.512256 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:48.517242 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:48.522231 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 10, 0)
excute 13:46:48.527215 line       556                     i = i_j[0]
excute 13:46:48.532209 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:48.538188 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:48.544170 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 10, 0)
excute 13:46:48.551151 line       556                     i = i_j[0]
excute 13:46:48.556138 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:48.560126 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:48.566110 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 10, 0)
excute 13:46:48.570100 line       556                     i = i_j[0]
excute 13:46:48.575090 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:48.580073 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:48.584063 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 10, 1)
excute 13:46:48.587055 line       556                     i = i_j[0]
excute 13:46:48.591045 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:48.595034 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:48.600019 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 10, 2)
excute 13:46:48.604011 line       556                     i = i_j[0]
excute 13:46:48.609997 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:48.613984 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:48.617973 line       555                 for i_j in i_j_list:
excute 13:46:48.620965 line       581             self.write_matrix(
excute 13:46:48.624955 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:46:48.627946 line       583                 result_file_path,
excute 13:46:48.631935 line       584                 mode='a'
excute 13:46:48.637920 line       488         for t in time_steps:
excute Modified var:.. t = 105
excute 13:46:48.642907 line       489             if (t != self.TIME + 1):
excute 13:46:48.648892 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:46:48.655871 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:46:48.658864 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:46:48.662854 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:48.666842 line       494                         if (i == j):
excute 13:46:48.672825 line       495                             continue
excute 13:46:48.679808 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:48.684795 line       494                         if (i == j):
excute 13:46:48.689781 line       496                         i_j_list.append((
excute 13:46:48.693771 line       497                             i, j,
excute 13:46:48.697759 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:48.701750 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0)]
excute 13:46:48.708730 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:48.723690 line       494                         if (i == j):
excute 13:46:48.731668 line       496                         i_j_list.append((
excute 13:46:48.737654 line       497                             i, j,
excute 13:46:48.743637 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:48.750619 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0)]
excute 13:46:48.755604 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:48.763583 line       494                         if (i == j):
excute 13:46:48.770564 line       496                         i_j_list.append((
excute 13:46:48.774553 line       497                             i, j,
excute 13:46:48.778543 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:48.782532 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0)]
excute 13:46:48.787522 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:48.793504 line       494                         if (i == j):
excute 13:46:48.801482 line       496                         i_j_list.append((
excute 13:46:48.806475 line       497                             i, j,
excute 13:46:48.810461 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:48.815444 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0)]
excute 13:46:48.823423 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:48.828410 line       494                         if (i == j):
excute 13:46:48.833400 line       496                         i_j_list.append((
excute 13:46:48.838383 line       497                             i, j,
excute 13:46:48.841375 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:48.847359 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0)]
excute 13:46:48.851349 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:48.857334 line       494                         if (i == j):
excute 13:46:48.863317 line       496                         i_j_list.append((
excute 13:46:48.868305 line       497                             i, j,
excute 13:46:48.872296 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:48.877279 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0)]
excute 13:46:48.881269 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:48.885258 line       494                         if (i == j):
excute 13:46:48.890244 line       496                         i_j_list.append((
excute 13:46:48.896229 line       497                             i, j,
excute 13:46:48.901218 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:48.905209 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0)]
excute 13:46:48.909193 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:48.915177 line       494                         if (i == j):
excute 13:46:48.920166 line       496                         i_j_list.append((
excute 13:46:48.926149 line       497                             i, j,
excute 13:46:48.931135 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:48.935124 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0)]
excute 13:46:48.941108 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:48.950085 line       494                         if (i == j):
excute 13:46:48.956068 line       496                         i_j_list.append((
excute 13:46:48.960057 line       497                             i, j,
excute 13:46:48.968037 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:48.973023 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0)]
excute 13:46:48.977013 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:48.981001 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:46:48.985988 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:48.991973 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:48.995962 line       494                         if (i == j):
excute 13:46:49.002944 line       496                         i_j_list.append((
excute 13:46:49.006934 line       497                             i, j,
excute 13:46:49.011919 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:49.015908 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0)]
excute 13:46:49.019898 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:49.023886 line       494                         if (i == j):
excute 13:46:49.030869 line       495                             continue
excute 13:46:49.037851 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:49.045832 line       494                         if (i == j):
excute 13:46:49.050816 line       496                         i_j_list.append((
excute 13:46:49.053807 line       497                             i, j,
excute 13:46:49.057797 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:49.062782 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0)]
excute 13:46:49.066773 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:49.069764 line       494                         if (i == j):
excute 13:46:49.073753 line       496                         i_j_list.append((
excute 13:46:49.078740 line       497                             i, j,
excute 13:46:49.082729 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:49.086719 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0)]
excute 13:46:49.092704 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:49.100683 line       494                         if (i == j):
excute 13:46:49.104671 line       496                         i_j_list.append((
excute 13:46:49.109658 line       497                             i, j,
excute 13:46:49.113646 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:49.116638 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0)]
excute 13:46:49.120629 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:49.126612 line       494                         if (i == j):
excute 13:46:49.133596 line       496                         i_j_list.append((
excute 13:46:49.138581 line       497                             i, j,
excute 13:46:49.143567 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:49.146558 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0)]
excute 13:46:49.150549 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:49.154539 line       494                         if (i == j):
excute 13:46:49.158529 line       496                         i_j_list.append((
excute 13:46:49.161519 line       497                             i, j,
excute 13:46:49.166506 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:49.171492 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0)]
excute 13:46:49.175483 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:49.180469 line       494                         if (i == j):
excute 13:46:49.183460 line       496                         i_j_list.append((
excute 13:46:49.187460 line       497                             i, j,
excute 13:46:49.191438 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:49.195429 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0)]
excute 13:46:49.198420 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:49.203408 line       494                         if (i == j):
excute 13:46:49.208394 line       496                         i_j_list.append((
excute 13:46:49.211385 line       497                             i, j,
excute 13:46:49.214377 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:49.218367 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0)]
excute 13:46:49.225348 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:49.230335 line       494                         if (i == j):
excute 13:46:49.236322 line       496                         i_j_list.append((
excute 13:46:49.240310 line       497                             i, j,
excute 13:46:49.243301 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:49.249285 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0)]
excute 13:46:49.255270 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:49.259258 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:46:49.263248 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:49.267236 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:49.271226 line       494                         if (i == j):
excute 13:46:49.275216 line       496                         i_j_list.append((
excute 13:46:49.279205 line       497                             i, j,
excute 13:46:49.283194 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:49.287183 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0)]
excute 13:46:49.291173 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:49.294165 line       494                         if (i == j):
excute 13:46:49.298154 line       496                         i_j_list.append((
excute 13:46:49.302142 line       497                             i, j,
excute 13:46:49.305135 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:49.309125 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0)]
excute 13:46:49.312117 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:49.315108 line       494                         if (i == j):
excute 13:46:49.319098 line       495                             continue
excute 13:46:49.324086 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:49.332063 line       494                         if (i == j):
excute 13:46:49.343036 line       496                         i_j_list.append((
excute 13:46:49.347023 line       497                             i, j,
excute 13:46:49.351016 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:49.356997 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:46:49.361983 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:49.365973 line       494                         if (i == j):
excute 13:46:49.370961 line       496                         i_j_list.append((
excute 13:46:49.374948 line       497                             i, j,
excute 13:46:49.378940 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:49.382928 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:46:49.386917 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:49.394896 line       494                         if (i == j):
excute 13:46:49.399884 line       496                         i_j_list.append((
excute 13:46:49.403874 line       497                             i, j,
excute 13:46:49.410852 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:49.414843 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:46:49.419829 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:49.423819 line       494                         if (i == j):
excute 13:46:49.428805 line       496                         i_j_list.append((
excute 13:46:49.436784 line       497                             i, j,
excute 13:46:49.445761 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:49.453752 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0)]
excute 13:46:49.457727 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:49.462098 line       494                         if (i == j):
excute 13:46:49.466091 line       496                         i_j_list.append((
excute 13:46:49.469082 line       497                             i, j,
excute 13:46:49.473072 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:49.476063 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:46:49.480067 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:49.483045 line       494                         if (i == j):
excute 13:46:49.489030 line       496                         i_j_list.append((
excute 13:46:49.492020 line       497                             i, j,
excute 13:46:49.495012 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:49.499004 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:46:49.501994 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:49.505985 line       494                         if (i == j):
excute 13:46:49.509007 line       496                         i_j_list.append((
excute 13:46:49.514960 line       497                             i, j,
excute 13:46:49.517987 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:49.520974 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:46:49.524933 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:49.531914 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:46:49.534908 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:49.538895 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:49.541887 line       494                         if (i == j):
excute 13:46:49.546875 line       496                         i_j_list.append((
excute 13:46:49.551860 line       497                             i, j,
excute 13:46:49.554854 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:49.558842 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0)]
excute 13:46:49.564827 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:49.569819 line       494                         if (i == j):
excute 13:46:49.573803 line       496                         i_j_list.append((
excute 13:46:49.576825 line       497                             i, j,
excute 13:46:49.581782 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:49.584805 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0)]
excute 13:46:49.588783 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:49.591786 line       494                         if (i == j):
excute 13:46:49.596742 line       496                         i_j_list.append((
excute 13:46:49.600744 line       497                             i, j,
excute 13:46:49.603753 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:49.610704 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0)]
excute 13:46:49.617716 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:49.621675 line       494                         if (i == j):
excute 13:46:49.626663 line       495                             continue
excute 13:46:49.629654 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:49.633643 line       494                         if (i == j):
excute 13:46:49.641621 line       496                         i_j_list.append((
excute 13:46:49.644612 line       497                             i, j,
excute 13:46:49.647604 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:49.655584 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0)]
excute 13:46:49.661569 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:49.667554 line       494                         if (i == j):
excute 13:46:49.671543 line       496                         i_j_list.append((
excute 13:46:49.675532 line       497                             i, j,
excute 13:46:49.678554 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:49.682512 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0)]
excute 13:46:49.685534 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:49.692486 line       494                         if (i == j):
excute 13:46:49.699467 line       496                         i_j_list.append((
excute 13:46:49.706448 line       497                             i, j,
excute 13:46:49.714427 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:49.721409 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0)]
excute 13:46:49.729387 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:49.735371 line       494                         if (i == j):
excute 13:46:49.743349 line       496                         i_j_list.append((
excute 13:46:49.750330 line       497                             i, j,
excute 13:46:49.758309 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:49.765291 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0)]
excute 13:46:49.772273 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:49.779254 line       494                         if (i == j):
excute 13:46:49.785240 line       496                         i_j_list.append((
excute 13:46:49.789226 line       497                             i, j,
excute 13:46:49.793216 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:49.797208 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0)]
excute 13:46:49.801195 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:49.805184 line       494                         if (i == j):
excute 13:46:49.809180 line       496                         i_j_list.append((
excute 13:46:49.813162 line       497                             i, j,
excute 13:46:49.817154 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:49.820143 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0)]
excute 13:46:49.823135 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:49.827125 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:46:49.833110 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:49.839103 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:49.843083 line       494                         if (i == j):
excute 13:46:49.848073 line       496                         i_j_list.append((
excute 13:46:49.853065 line       497                             i, j,
excute 13:46:49.858042 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:49.864029 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0)]
excute 13:46:49.870014 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:49.876993 line       494                         if (i == j):
excute 13:46:49.884971 line       496                         i_j_list.append((
excute 13:46:49.890955 line       497                             i, j,
excute 13:46:49.895941 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:49.899931 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0)]
excute 13:46:49.907910 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:49.910901 line       494                         if (i == j):
excute 13:46:49.914891 line       496                         i_j_list.append((
excute 13:46:49.917882 line       497                             i, j,
excute 13:46:49.924865 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:49.929850 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0)]
excute 13:46:49.933842 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:49.937829 line       494                         if (i == j):
excute 13:46:49.942816 line       496                         i_j_list.append((
excute 13:46:49.946807 line       497                             i, j,
excute 13:46:49.952789 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:49.956779 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0)]
excute 13:46:49.962779 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:49.965754 line       494                         if (i == j):
excute 13:46:49.970743 line       495                             continue
excute 13:46:49.974732 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:49.977723 line       494                         if (i == j):
excute 13:46:49.980714 line       496                         i_j_list.append((
excute 13:46:49.984706 line       497                             i, j,
excute 13:46:49.988694 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:49.993681 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0)]
excute 13:46:49.997669 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:50.002657 line       494                         if (i == j):
excute 13:46:50.008640 line       496                         i_j_list.append((
excute 13:46:50.014624 line       497                             i, j,
excute 13:46:50.020610 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.027591 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0)]
excute 13:46:50.033575 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:50.040555 line       494                         if (i == j):
excute 13:46:50.045542 line       496                         i_j_list.append((
excute 13:46:50.049531 line       497                             i, j,
excute 13:46:50.057510 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.062497 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0)]
excute 13:46:50.066486 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:50.071472 line       494                         if (i == j):
excute 13:46:50.076460 line       496                         i_j_list.append((
excute 13:46:50.080449 line       497                             i, j,
excute 13:46:50.084438 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.087430 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0)]
excute 13:46:50.091421 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:50.096406 line       494                         if (i == j):
excute 13:46:50.100396 line       496                         i_j_list.append((
excute 13:46:50.104384 line       497                             i, j,
excute 13:46:50.111366 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.114357 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0)]
excute 13:46:50.118347 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:50.123334 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:46:50.127323 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:50.134304 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:50.138325 line       494                         if (i == j):
excute 13:46:50.142284 line       496                         i_j_list.append((
excute 13:46:50.145309 line       497                             i, j,
excute 13:46:50.149264 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.153254 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0)]
excute 13:46:50.157243 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:50.161232 line       494                         if (i == j):
excute 13:46:50.166230 line       496                         i_j_list.append((
excute 13:46:50.170213 line       497                             i, j,
excute 13:46:50.173199 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.177196 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0)]
excute 13:46:50.180217 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:50.184182 line       494                         if (i == j):
excute 13:46:50.188161 line       496                         i_j_list.append((
excute 13:46:50.191184 line       497                             i, j,
excute 13:46:50.194175 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.198164 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0)]
excute 13:46:50.201160 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:50.205115 line       494                         if (i == j):
excute 13:46:50.209109 line       496                         i_j_list.append((
excute 13:46:50.212127 line       497                             i, j,
excute 13:46:50.215119 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.218111 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0)]
excute 13:46:50.222070 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:50.227056 line       494                         if (i == j):
excute 13:46:50.232042 line       496                         i_j_list.append((
excute 13:46:50.238027 line       497                             i, j,
excute 13:46:50.242016 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.247002 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0)]
excute 13:46:50.251989 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:50.256010 line       494                         if (i == j):
excute 13:46:50.259999 line       495                             continue
excute 13:46:50.263988 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:50.266981 line       494                         if (i == j):
excute 13:46:50.271937 line       496                         i_j_list.append((
excute 13:46:50.274959 line       497                             i, j,
excute 13:46:50.278948 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.282911 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0)]
excute 13:46:50.285900 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:50.289888 line       494                         if (i == j):
excute 13:46:50.293880 line       496                         i_j_list.append((
excute 13:46:50.296903 line       497                             i, j,
excute 13:46:50.299892 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.303882 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0)]
excute 13:46:50.306873 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:50.310832 line       494                         if (i == j):
excute 13:46:50.314823 line       496                         i_j_list.append((
excute 13:46:50.317845 line       497                             i, j,
excute 13:46:50.321803 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.324826 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0)]
excute 13:46:50.331776 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:50.340752 line       494                         if (i == j):
excute 13:46:50.343744 line       496                         i_j_list.append((
excute 13:46:50.347733 line       497                             i, j,
excute 13:46:50.350725 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.354715 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0)]
excute 13:46:50.358708 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:50.362692 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:46:50.366682 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:50.370672 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:50.374662 line       494                         if (i == j):
excute 13:46:50.379685 line       496                         i_j_list.append((
excute 13:46:50.382674 line       497                             i, j,
excute 13:46:50.386661 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.389652 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0)]
excute 13:46:50.393643 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:50.397608 line       494                         if (i == j):
excute 13:46:50.400626 line       496                         i_j_list.append((
excute 13:46:50.404613 line       497                             i, j,
excute 13:46:50.407604 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.411564 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0)]
excute 13:46:50.415584 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:50.420540 line       494                         if (i == j):
excute 13:46:50.423562 line       496                         i_j_list.append((
excute 13:46:50.427551 line       497                             i, j,
excute 13:46:50.432540 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.436530 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0)]
excute 13:46:50.439519 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:50.443478 line       494                         if (i == j):
excute 13:46:50.447468 line       496                         i_j_list.append((
excute 13:46:50.451487 line       497                             i, j,
excute 13:46:50.454450 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.458436 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0)]
excute 13:46:50.462428 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:50.468410 line       494                         if (i == j):
excute 13:46:50.472400 line       496                         i_j_list.append((
excute 13:46:50.475392 line       497                             i, j,
excute 13:46:50.479412 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.483370 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0)]
excute 13:46:50.486395 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:50.490385 line       494                         if (i == j):
excute 13:46:50.494377 line       496                         i_j_list.append((
excute 13:46:50.498331 line       497                             i, j,
excute 13:46:50.501354 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.504348 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0)]
excute 13:46:50.508308 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:50.512293 line       494                         if (i == j):
excute 13:46:50.516298 line       495                             continue
excute 13:46:50.519307 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:50.523295 line       494                         if (i == j):
excute 13:46:50.527268 line       496                         i_j_list.append((
excute 13:46:50.534235 line       497                             i, j,
excute 13:46:50.541242 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.544208 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0)]
excute 13:46:50.548198 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:50.555180 line       494                         if (i == j):
excute 13:46:50.559170 line       496                         i_j_list.append((
excute 13:46:50.563157 line       497                             i, j,
excute 13:46:50.566151 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.570139 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0)]
excute 13:46:50.573130 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:50.577120 line       494                         if (i == j):
excute 13:46:50.582109 line       496                         i_j_list.append((
excute 13:46:50.585098 line       497                             i, j,
excute 13:46:50.589088 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.592080 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0)]
excute 13:46:50.596069 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:50.599060 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:46:50.603050 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:50.607040 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:50.611032 line       494                         if (i == j):
excute 13:46:50.615020 line       496                         i_j_list.append((
excute 13:46:50.618042 line       497                             i, j,
excute 13:46:50.622033 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.625023 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0)]
excute 13:46:50.628015 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:50.632007 line       494                         if (i == j):
excute 13:46:50.635966 line       496                         i_j_list.append((
excute 13:46:50.639986 line       497                             i, j,
excute 13:46:50.642979 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.645967 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0)]
excute 13:46:50.649927 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:50.653915 line       494                         if (i == j):
excute 13:46:50.656906 line       496                         i_j_list.append((
excute 13:46:50.660895 line       497                             i, j,
excute 13:46:50.663887 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.666880 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0)]
excute 13:46:50.670872 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:50.674860 line       494                         if (i == j):
excute 13:46:50.678848 line       496                         i_j_list.append((
excute 13:46:50.682838 line       497                             i, j,
excute 13:46:50.685829 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.689818 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0)]
excute 13:46:50.692810 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:50.696800 line       494                         if (i == j):
excute 13:46:50.700789 line       496                         i_j_list.append((
excute 13:46:50.703780 line       497                             i, j,
excute 13:46:50.706773 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.710762 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0)]
excute 13:46:50.713754 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:50.717743 line       494                         if (i == j):
excute 13:46:50.721733 line       496                         i_j_list.append((
excute 13:46:50.724725 line       497                             i, j,
excute 13:46:50.727717 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.730710 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0)]
excute 13:46:50.734698 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:50.737692 line       494                         if (i == j):
excute 13:46:50.741680 line       496                         i_j_list.append((
excute 13:46:50.744672 line       497                             i, j,
excute 13:46:50.748670 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.751653 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0)]
excute 13:46:50.754645 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:50.759677 line       494                         if (i == j):
excute 13:46:50.762660 line       495                             continue
excute 13:46:50.766644 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:50.769636 line       494                         if (i == j):
excute 13:46:50.773596 line       496                         i_j_list.append((
excute 13:46:50.776621 line       497                             i, j,
excute 13:46:50.779610 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.784573 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0)]
excute 13:46:50.787559 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:50.791546 line       494                         if (i == j):
excute 13:46:50.795536 line       496                         i_j_list.append((
excute 13:46:50.798527 line       497                             i, j,
excute 13:46:50.801520 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.804512 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0)]
excute 13:46:50.807504 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:50.811493 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:46:50.814485 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:50.818474 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:50.822497 line       494                         if (i == j):
excute 13:46:50.826471 line       496                         i_j_list.append((
excute 13:46:50.829477 line       497                             i, j,
excute 13:46:50.832469 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.836458 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0)]
excute 13:46:50.839418 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:50.843408 line       494                         if (i == j):
excute 13:46:50.848396 line       496                         i_j_list.append((
excute 13:46:50.851387 line       497                             i, j,
excute 13:46:50.855376 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.858368 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0)]
excute 13:46:50.862357 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:50.865349 line       494                         if (i == j):
excute 13:46:50.869339 line       496                         i_j_list.append((
excute 13:46:50.872331 line       497                             i, j,
excute 13:46:50.876320 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.879311 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0)]
excute 13:46:50.882304 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:50.887291 line       494                         if (i == j):
excute 13:46:50.891281 line       496                         i_j_list.append((
excute 13:46:50.895270 line       497                             i, j,
excute 13:46:50.898261 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.901253 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0)]
excute 13:46:50.904245 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:50.908236 line       494                         if (i == j):
excute 13:46:50.912224 line       496                         i_j_list.append((
excute 13:46:50.915216 line       497                             i, j,
excute 13:46:50.918207 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.922197 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0)]
excute 13:46:50.925189 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:50.929179 line       494                         if (i == j):
excute 13:46:50.933174 line       496                         i_j_list.append((
excute 13:46:50.936160 line       497                             i, j,
excute 13:46:50.940159 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.943175 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0)]
excute 13:46:50.947164 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:50.952119 line       494                         if (i == j):
excute 13:46:50.956108 line       496                         i_j_list.append((
excute 13:46:50.962400 line       497                             i, j,
excute 13:46:50.965425 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.969385 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0)]
excute 13:46:50.972409 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:50.977399 line       494                         if (i == j):
excute 13:46:50.980387 line       496                         i_j_list.append((
excute 13:46:50.984377 line       497                             i, j,
excute 13:46:50.988335 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:50.992355 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0)]
excute 13:46:50.995346 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:50.999337 line       494                         if (i == j):
excute 13:46:51.003293 line       495                             continue
excute 13:46:51.007285 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:51.010306 line       494                         if (i == j):
excute 13:46:51.014295 line       496                         i_j_list.append((
excute 13:46:51.018255 line       497                             i, j,
excute 13:46:51.021277 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:51.024268 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0)]
excute 13:46:51.027261 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:51.031251 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:46:51.035216 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:46:51.038232 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:51.042222 line       494                         if (i == j):
excute 13:46:51.046182 line       496                         i_j_list.append((
excute 13:46:51.049204 line       497                             i, j,
excute 13:46:51.053160 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:51.056183 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0)]
excute 13:46:51.060141 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:51.063165 line       494                         if (i == j):
excute 13:46:51.067154 line       496                         i_j_list.append((
excute 13:46:51.071113 line       497                             i, j,
excute 13:46:51.075103 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:51.079093 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0)]
excute 13:46:51.082084 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:51.086073 line       494                         if (i == j):
excute 13:46:51.090063 line       496                         i_j_list.append((
excute 13:46:51.095080 line       497                             i, j,
excute 13:46:51.098071 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:51.102061 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0)]
excute 13:46:51.106050 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:51.112005 line       494                         if (i == j):
excute 13:46:51.115993 line       496                         i_j_list.append((
excute 13:46:51.119983 line       497                             i, j,
excute 13:46:51.123972 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:51.126964 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0)]
excute 13:46:51.130954 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:51.135942 line       494                         if (i == j):
excute 13:46:51.139928 line       496                         i_j_list.append((
excute 13:46:51.142955 line       497                             i, j,
excute 13:46:51.146942 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:51.149932 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0)]
excute 13:46:51.152927 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:51.157899 line       494                         if (i == j):
excute 13:46:51.160874 line       496                         i_j_list.append((
excute 13:46:51.164863 line       497                             i, j,
excute 13:46:51.168852 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:51.172844 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0)]
excute 13:46:51.175834 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:51.179822 line       494                         if (i == j):
excute 13:46:51.182815 line       496                         i_j_list.append((
excute 13:46:51.186804 line       497                             i, j,
excute 13:46:51.190794 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:51.195781 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0)]
excute 13:46:51.198770 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:51.203758 line       494                         if (i == j):
excute 13:46:51.207749 line       496                         i_j_list.append((
excute 13:46:51.210740 line       497                             i, j,
excute 13:46:51.214730 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:51.218717 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0)]
excute 13:46:51.221712 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:51.225700 line       494                         if (i == j):
excute 13:46:51.229702 line       496                         i_j_list.append((
excute 13:46:51.233679 line       497                             i, j,
excute 13:46:51.236671 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:51.240660 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0)]
excute 13:46:51.244650 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:51.248637 line       494                         if (i == j):
excute 13:46:51.252628 line       495                             continue
excute 13:46:51.256617 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:51.260607 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:46:51.263599 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0)]
excute 13:46:51.267588 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:46:51.271579 line       505                     if (self.RELOCATE):
excute 13:46:51.274570 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:46:51.278559 line       505                     if (self.RELOCATE):
excute 13:46:51.282547 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:46:51.286536 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, -2, 0)
excute 13:46:51.289530 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:46:51.293519 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:51.298504 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:51.302493 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, -2, 0)
excute 13:46:51.306482 line       556                     i = i_j[0]
excute 13:46:51.310473 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:51.313463 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:51.321444 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, -2, 0)
excute 13:46:51.329423 line       556                     i = i_j[0]
excute 13:46:51.341391 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:51.345379 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:51.354356 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, -2, 0)
excute 13:46:51.360339 line       556                     i = i_j[0]
excute 13:46:51.368318 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:51.374302 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:51.379288 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, -2, 0)
excute 13:46:51.387267 line       556                     i = i_j[0]
excute 13:46:51.393252 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:51.398239 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:51.406217 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, -2, 0)
excute 13:46:51.411204 line       556                     i = i_j[0]
excute 13:46:51.416191 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:51.420181 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:51.425169 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, -2, 0)
excute 13:46:51.429157 line       556                     i = i_j[0]
excute 13:46:51.439129 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:51.447110 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:51.452095 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, -2, 0)
excute 13:46:51.458078 line       556                     i = i_j[0]
excute 13:46:51.468052 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:51.475034 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:51.484010 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, -2, 0)
excute 13:46:51.492985 line       556                     i = i_j[0]
excute 13:46:51.499966 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:51.506949 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:51.512932 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -1, 0)
excute 13:46:51.520912 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:46:51.525898 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:51.531880 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:51.539860 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -1, 0)
excute 13:46:51.545844 line       556                     i = i_j[0]
excute 13:46:51.553823 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:51.559807 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:51.568782 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -1, 0)
excute 13:46:51.574766 line       556                     i = i_j[0]
excute 13:46:51.581747 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:51.589726 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:51.596708 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -1, 0)
excute 13:46:51.602692 line       556                     i = i_j[0]
excute 13:46:51.612665 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:51.618649 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:51.624633 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -1, 0)
excute 13:46:51.630616 line       556                     i = i_j[0]
excute 13:46:51.639593 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:51.645577 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:51.654553 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -1, 0)
excute 13:46:51.662532 line       556                     i = i_j[0]
excute 13:46:51.669513 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:51.675498 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:51.683475 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -1, 0)
excute 13:46:51.689460 line       556                     i = i_j[0]
excute 13:46:51.698435 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:51.703422 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:51.710405 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -1, 0)
excute 13:46:51.716387 line       556                     i = i_j[0]
excute 13:46:51.724370 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:51.732345 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:51.738330 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -1, 0)
excute 13:46:51.746306 line       556                     i = i_j[0]
excute 13:46:51.752292 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:51.759273 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:51.765256 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 0, 0)
excute 13:46:51.774233 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:46:51.779219 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:51.786201 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:51.790190 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 0, 0)
excute 13:46:51.794179 line       556                     i = i_j[0]
excute 13:46:51.798170 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:51.801160 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:51.805151 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 0, 0)
excute 13:46:51.808141 line       556                     i = i_j[0]
excute 13:46:51.812133 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:51.816120 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:51.820110 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 0, 0)
excute 13:46:51.824100 line       556                     i = i_j[0]
excute 13:46:51.827091 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:51.831081 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:51.834073 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 0, 0)
excute 13:46:51.838062 line       556                     i = i_j[0]
excute 13:46:51.841054 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:51.845043 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:51.849033 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 0, 0)
excute 13:46:51.852024 line       556                     i = i_j[0]
excute 13:46:51.857012 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:51.860034 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:51.863999 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 0, 0)
excute 13:46:51.867015 line       556                     i = i_j[0]
excute 13:46:51.870976 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:51.873999 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:51.877956 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 0, 0)
excute 13:46:51.880979 line       556                     i = i_j[0]
excute 13:46:51.885971 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:51.888957 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:51.892915 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 0, 0)
excute 13:46:51.895938 line       556                     i = i_j[0]
excute 13:46:51.899896 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:51.902922 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:51.906878 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 1, 0)
excute 13:46:51.909902 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:46:51.913866 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:51.922836 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:51.934806 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 1, 0)
excute 13:46:51.937828 line       556                     i = i_j[0]
excute 13:46:51.941798 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:51.944808 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:51.955748 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 1, 0)
excute 13:46:51.959736 line       556                     i = i_j[0]
excute 13:46:51.967718 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:51.971736 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:51.975707 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 1, 0)
excute 13:46:51.978718 line       556                     i = i_j[0]
excute 13:46:51.982678 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:51.985700 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:51.989656 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 1, 0)
excute 13:46:51.993647 line       556                     i = i_j[0]
excute 13:46:51.998640 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:52.001658 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.005615 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 1, 0)
excute 13:46:52.008637 line       556                     i = i_j[0]
excute 13:46:52.012627 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:52.016585 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.020576 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 1, 0)
excute 13:46:52.024563 line       556                     i = i_j[0]
excute 13:46:52.028555 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:52.031576 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.035535 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 1, 0)
excute 13:46:52.038526 line       556                     i = i_j[0]
excute 13:46:52.042547 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:52.046506 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.049530 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 1, 0)
excute 13:46:52.053518 line       556                     i = i_j[0]
excute 13:46:52.057478 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:52.060498 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.064458 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 1, 0)
excute 13:46:52.067479 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:46:52.071472 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:52.075429 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.079419 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 1, 0)
excute 13:46:52.083407 line       556                     i = i_j[0]
excute 13:46:52.087397 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:52.091386 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.095377 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 1, 0)
excute 13:46:52.098367 line       556                     i = i_j[0]
excute 13:46:52.102356 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:52.106347 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.110369 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 1, 0)
excute 13:46:52.113359 line       556                     i = i_j[0]
excute 13:46:52.117347 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:52.121339 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.125294 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 1, 0)
excute 13:46:52.129285 line       556                     i = i_j[0]
excute 13:46:52.134306 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:52.137295 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.141253 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 1, 0)
excute 13:46:52.144274 line       556                     i = i_j[0]
excute 13:46:52.148233 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:52.151256 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.155245 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 1, 0)
excute 13:46:52.159230 line       556                     i = i_j[0]
excute 13:46:52.162228 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:52.166185 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.169210 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 1, 0)
excute 13:46:52.173179 line       556                     i = i_j[0]
excute 13:46:52.176189 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:52.180161 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.183171 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 1, 0)
excute 13:46:52.187131 line       556                     i = i_j[0]
excute 13:46:52.190154 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:52.194142 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.198100 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 1, 0)
excute 13:46:52.201124 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:46:52.205083 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:52.209105 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.212093 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 1, 0)
excute 13:46:52.216083 line       556                     i = i_j[0]
excute 13:46:52.220043 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:52.223034 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.230016 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 1, 0)
excute 13:46:52.234005 line       556                     i = i_j[0]
excute 13:46:52.237995 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:52.240987 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.244976 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 1, 0)
excute 13:46:52.248965 line       556                     i = i_j[0]
excute 13:46:52.253951 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:52.256943 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.261929 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 1, 0)
excute 13:46:52.265918 line       556                     i = i_j[0]
excute 13:46:52.270904 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:52.274894 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.278883 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 1, 0)
excute 13:46:52.282872 line       556                     i = i_j[0]
excute 13:46:52.286864 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:52.289885 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.293844 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 1, 0)
excute 13:46:52.296868 line       556                     i = i_j[0]
excute 13:46:52.300825 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:52.303847 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.307806 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 1, 0)
excute 13:46:52.310830 line       556                     i = i_j[0]
excute 13:46:52.314788 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:52.317812 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.333739 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 1, 0)
excute 13:46:52.340719 line       556                     i = i_j[0]
excute 13:46:52.345737 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:52.349728 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.353683 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:46:52.358672 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:46:52.362664 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:52.367649 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.373641 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:46:52.376621 line       556                     i = i_j[0]
excute 13:46:52.382639 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:52.386596 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.391585 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:46:52.394576 line       556                     i = i_j[0]
excute 13:46:52.398565 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:52.402555 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.407540 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:46:52.410533 line       556                     i = i_j[0]
excute 13:46:52.414523 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:52.418512 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.422500 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:46:52.426488 line       556                     i = i_j[0]
excute 13:46:52.430481 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:52.435465 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.439456 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:46:52.442477 line       556                     i = i_j[0]
excute 13:46:52.447434 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:52.451453 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.455414 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:46:52.459403 line       556                     i = i_j[0]
excute 13:46:52.463392 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:52.466383 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.471371 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:46:52.474363 line       556                     i = i_j[0]
excute 13:46:52.478352 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:52.481344 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.485334 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:46:52.489322 line       556                     i = i_j[0]
excute 13:46:52.492314 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:52.496303 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.500293 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 2, 0)
excute 13:46:52.504282 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:46:52.508272 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:52.512262 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.516250 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 2, 0)
excute 13:46:52.520240 line       556                     i = i_j[0]
excute 13:46:52.524229 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:52.528219 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.532206 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 2, 0)
excute 13:46:52.535199 line       556                     i = i_j[0]
excute 13:46:52.540187 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:52.544175 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.548164 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 2, 0)
excute 13:46:52.551157 line       556                     i = i_j[0]
excute 13:46:52.556143 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:52.559136 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.564123 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 2, 0)
excute 13:46:52.567114 line       556                     i = i_j[0]
excute 13:46:52.571104 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:52.575093 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.579083 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 2, 0)
excute 13:46:52.583072 line       556                     i = i_j[0]
excute 13:46:52.587062 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:52.590053 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.594043 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 2, 0)
excute 13:46:52.597034 line       556                     i = i_j[0]
excute 13:46:52.601023 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:52.606011 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.611994 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 2, 0)
excute 13:46:52.614985 line       556                     i = i_j[0]
excute 13:46:52.618977 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:52.621967 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.625957 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 2, 0)
excute 13:46:52.628948 line       556                     i = i_j[0]
excute 13:46:52.632938 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:52.636927 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.641916 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 2, 0)
excute 13:46:52.644906 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:46:52.648896 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:52.653882 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.657873 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 2, 0)
excute 13:46:52.660864 line       556                     i = i_j[0]
excute 13:46:52.664852 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:52.668843 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.672833 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 2, 0)
excute 13:46:52.675824 line       556                     i = i_j[0]
excute 13:46:52.680809 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:52.683833 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.687798 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 2, 0)
excute 13:46:52.690815 line       556                     i = i_j[0]
excute 13:46:52.694771 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:52.697795 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.701784 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 2, 0)
excute 13:46:52.704776 line       556                     i = i_j[0]
excute 13:46:52.708767 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:52.712729 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.716748 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 2, 0)
excute 13:46:52.719738 line       556                     i = i_j[0]
excute 13:46:52.723726 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:52.727683 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.730708 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 2, 0)
excute 13:46:52.734672 line       556                     i = i_j[0]
excute 13:46:52.737689 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:52.741647 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.745635 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 2, 0)
excute 13:46:52.749652 line       556                     i = i_j[0]
excute 13:46:52.752648 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:52.756640 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.760596 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 2, 0)
excute 13:46:52.763619 line       556                     i = i_j[0]
excute 13:46:52.767578 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:52.770600 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.774559 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 10, 0)
excute 13:46:52.777581 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:46:52.781540 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:52.785530 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.789519 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 10, 0)
excute 13:46:52.792542 line       556                     i = i_j[0]
excute 13:46:52.796501 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:52.799525 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.803482 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 10, 0)
excute 13:46:52.806506 line       556                     i = i_j[0]
excute 13:46:52.810463 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:52.813456 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.817445 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 10, 0)
excute 13:46:52.821434 line       556                     i = i_j[0]
excute 13:46:52.826420 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:52.829413 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.833403 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 10, 0)
excute 13:46:52.837392 line       556                     i = i_j[0]
excute 13:46:52.841382 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:52.845372 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.849360 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 10, 0)
excute 13:46:52.853349 line       556                     i = i_j[0]
excute 13:46:52.857339 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:52.861329 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.864321 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 10, 0)
excute 13:46:52.868309 line       556                     i = i_j[0]
excute 13:46:52.872299 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:52.875290 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.880278 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 10, 0)
excute 13:46:52.883269 line       556                     i = i_j[0]
excute 13:46:52.888256 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:52.891247 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.895238 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 10, 0)
excute 13:46:52.898229 line       556                     i = i_j[0]
excute 13:46:52.902220 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:52.905211 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:52.909199 line       555                 for i_j in i_j_list:
excute 13:46:52.912192 line       581             self.write_matrix(
excute 13:46:52.916181 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:46:52.920169 line       583                 result_file_path,
excute 13:46:52.924159 line       584                 mode='a'
excute 13:46:52.929779 line       488         for t in time_steps:
excute Modified var:.. t = 106
excute 13:46:52.933767 line       489             if (t != self.TIME + 1):
excute 13:46:52.938752 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:46:52.944736 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:46:52.950721 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:46:52.954711 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:52.961693 line       494                         if (i == j):
excute 13:46:52.964683 line       495                             continue
excute 13:46:52.968674 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:52.972662 line       494                         if (i == j):
excute 13:46:52.975653 line       496                         i_j_list.append((
excute 13:46:52.979643 line       497                             i, j,
excute 13:46:52.983633 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:52.988619 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2)]
excute 13:46:52.997601 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:53.001583 line       494                         if (i == j):
excute 13:46:53.006573 line       496                         i_j_list.append((
excute 13:46:53.010560 line       497                             i, j,
excute 13:46:53.014549 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.017541 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0)]
excute 13:46:53.021537 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:53.025520 line       494                         if (i == j):
excute 13:46:53.028512 line       496                         i_j_list.append((
excute 13:46:53.032501 line       497                             i, j,
excute 13:46:53.035493 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.039484 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0)]
excute 13:46:53.042475 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:53.046466 line       494                         if (i == j):
excute 13:46:53.053446 line       496                         i_j_list.append((
excute 13:46:53.060436 line       497                             i, j,
excute 13:46:53.064416 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.068406 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0)]
excute 13:46:53.072395 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:53.076385 line       494                         if (i == j):
excute 13:46:53.080374 line       496                         i_j_list.append((
excute 13:46:53.083365 line       497                             i, j,
excute 13:46:53.087355 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.094336 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0)]
excute 13:46:53.097328 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:53.101317 line       494                         if (i == j):
excute 13:46:53.108299 line       496                         i_j_list.append((
excute 13:46:53.114283 line       497                             i, j,
excute 13:46:53.119270 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.123260 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0)]
excute 13:46:53.126251 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:53.130241 line       494                         if (i == j):
excute 13:46:53.135227 line       496                         i_j_list.append((
excute 13:46:53.139217 line       497                             i, j,
excute 13:46:53.142209 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.146199 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0)]
excute 13:46:53.150187 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:53.155176 line       494                         if (i == j):
excute 13:46:53.159165 line       496                         i_j_list.append((
excute 13:46:53.162155 line       497                             i, j,
excute 13:46:53.165147 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.169136 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0)]
excute 13:46:53.172129 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:53.175120 line       494                         if (i == j):
excute 13:46:53.179110 line       496                         i_j_list.append((
excute 13:46:53.182101 line       497                             i, j,
excute 13:46:53.186091 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.189083 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0)]
excute 13:46:53.194070 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:53.199057 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:46:53.202048 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:53.206041 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:53.209062 line       494                         if (i == j):
excute 13:46:53.213020 line       496                         i_j_list.append((
excute 13:46:53.216013 line       497                             i, j,
excute 13:46:53.220000 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.224987 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0)]
excute 13:46:53.229008 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:53.232977 line       494                         if (i == j):
excute 13:46:53.236958 line       495                             continue
excute 13:46:53.240946 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:53.243938 line       494                         if (i == j):
excute 13:46:53.247927 line       496                         i_j_list.append((
excute 13:46:53.251917 line       497                             i, j,
excute 13:46:53.255906 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.259893 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0)]
excute 13:46:53.264881 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:53.268870 line       494                         if (i == j):
excute 13:46:53.273857 line       496                         i_j_list.append((
excute 13:46:53.277845 line       497                             i, j,
excute 13:46:53.280838 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.283829 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0)]
excute 13:46:53.287820 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:53.290810 line       494                         if (i == j):
excute 13:46:53.294800 line       496                         i_j_list.append((
excute 13:46:53.297791 line       497                             i, j,
excute 13:46:53.300784 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.304773 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0)]
excute 13:46:53.307765 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:53.311755 line       494                         if (i == j):
excute 13:46:53.314746 line       496                         i_j_list.append((
excute 13:46:53.318737 line       497                             i, j,
excute 13:46:53.321728 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.324720 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0)]
excute 13:46:53.333699 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:53.340682 line       494                         if (i == j):
excute 13:46:53.343702 line       496                         i_j_list.append((
excute 13:46:53.347659 line       497                             i, j,
excute 13:46:53.350688 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.354641 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0)]
excute 13:46:53.360628 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:53.364646 line       494                         if (i == j):
excute 13:46:53.368613 line       496                         i_j_list.append((
excute 13:46:53.372625 line       497                             i, j,
excute 13:46:53.375615 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.378608 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0)]
excute 13:46:53.382566 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:53.386588 line       494                         if (i == j):
excute 13:46:53.390557 line       496                         i_j_list.append((
excute 13:46:53.393568 line       497                             i, j,
excute 13:46:53.397532 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.400551 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0)]
excute 13:46:53.404539 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:53.408497 line       494                         if (i == j):
excute 13:46:53.411520 line       496                         i_j_list.append((
excute 13:46:53.414515 line       497                             i, j,
excute 13:46:53.418501 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.421461 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0)]
excute 13:46:53.424453 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:53.428443 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:46:53.431466 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:53.435442 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:53.438451 line       494                         if (i == j):
excute 13:46:53.442406 line       496                         i_j_list.append((
excute 13:46:53.445428 line       497                             i, j,
excute 13:46:53.449388 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.453408 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0)]
excute 13:46:53.457366 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:53.460358 line       494                         if (i == j):
excute 13:46:53.468340 line       496                         i_j_list.append((
excute 13:46:53.472358 line       497                             i, j,
excute 13:46:53.475349 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.479306 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2)]
excute 13:46:53.482299 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:53.486293 line       494                         if (i == j):
excute 13:46:53.490279 line       495                             continue
excute 13:46:53.493272 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:53.497261 line       494                         if (i == j):
excute 13:46:53.501253 line       496                         i_j_list.append((
excute 13:46:53.505239 line       497                             i, j,
excute 13:46:53.509229 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.513218 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0)]
excute 13:46:53.516210 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:53.520200 line       494                         if (i == j):
excute 13:46:53.525186 line       496                         i_j_list.append((
excute 13:46:53.528178 line       497                             i, j,
excute 13:46:53.531170 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.535159 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:46:53.539149 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:53.543139 line       494                         if (i == j):
excute 13:46:53.546128 line       496                         i_j_list.append((
excute 13:46:53.549120 line       497                             i, j,
excute 13:46:53.553110 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.556101 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:46:53.559094 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:53.563084 line       494                         if (i == j):
excute 13:46:53.567105 line       496                         i_j_list.append((
excute 13:46:53.571094 line       497                             i, j,
excute 13:46:53.574088 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.578043 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0)]
excute 13:46:53.581067 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:53.584059 line       494                         if (i == j):
excute 13:46:53.588016 line       496                         i_j_list.append((
excute 13:46:53.591039 line       497                             i, j,
excute 13:46:53.594032 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.598021 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:46:53.601013 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:53.604972 line       494                         if (i == j):
excute 13:46:53.610956 line       496                         i_j_list.append((
excute 13:46:53.613986 line       497                             i, j,
excute 13:46:53.616971 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.619964 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:46:53.623921 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:53.626945 line       494                         if (i == j):
excute 13:46:53.630903 line       496                         i_j_list.append((
excute 13:46:53.633925 line       497                             i, j,
excute 13:46:53.637883 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.640876 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:46:53.643866 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:53.647858 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:46:53.650848 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:53.654838 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:53.657861 line       494                         if (i == j):
excute 13:46:53.661820 line       496                         i_j_list.append((
excute 13:46:53.665810 line       497                             i, j,
excute 13:46:53.670797 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.673819 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0)]
excute 13:46:53.676810 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:53.680773 line       494                         if (i == j):
excute 13:46:53.684759 line       496                         i_j_list.append((
excute 13:46:53.687752 line       497                             i, j,
excute 13:46:53.691741 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.695730 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2)]
excute 13:46:53.699720 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:53.703710 line       494                         if (i == j):
excute 13:46:53.707709 line       496                         i_j_list.append((
excute 13:46:53.710691 line       497                             i, j,
excute 13:46:53.713683 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.717669 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0)]
excute 13:46:53.720662 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:53.724651 line       494                         if (i == j):
excute 13:46:53.728640 line       495                             continue
excute 13:46:53.731632 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:53.734625 line       494                         if (i == j):
excute 13:46:53.738613 line       496                         i_j_list.append((
excute 13:46:53.741605 line       497                             i, j,
excute 13:46:53.744597 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.747590 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0)]
excute 13:46:53.750582 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:53.754572 line       494                         if (i == j):
excute 13:46:53.758562 line       496                         i_j_list.append((
excute 13:46:53.761587 line       497                             i, j,
excute 13:46:53.765577 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.768566 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0)]
excute 13:46:53.773523 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:53.776544 line       494                         if (i == j):
excute 13:46:53.780533 line       496                         i_j_list.append((
excute 13:46:53.783525 line       497                             i, j,
excute 13:46:53.787485 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.790510 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0)]
excute 13:46:53.793501 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:53.797458 line       494                         if (i == j):
excute 13:46:53.801480 line       496                         i_j_list.append((
excute 13:46:53.804439 line       497                             i, j,
excute 13:46:53.808429 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.812418 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0)]
excute 13:46:53.815443 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:53.819434 line       494                         if (i == j):
excute 13:46:53.823388 line       496                         i_j_list.append((
excute 13:46:53.826413 line       497                             i, j,
excute 13:46:53.829405 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.832395 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0)]
excute 13:46:53.836385 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:53.839376 line       494                         if (i == j):
excute 13:46:53.843337 line       496                         i_j_list.append((
excute 13:46:53.846357 line       497                             i, j,
excute 13:46:53.850316 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.853338 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0)]
excute 13:46:53.856301 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:53.860290 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:46:53.864279 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:53.868269 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:53.872261 line       494                         if (i == j):
excute 13:46:53.876257 line       496                         i_j_list.append((
excute 13:46:53.879269 line       497                             i, j,
excute 13:46:53.883231 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.886251 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0)]
excute 13:46:53.890243 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:53.893232 line       494                         if (i == j):
excute 13:46:53.897221 line       496                         i_j_list.append((
excute 13:46:53.901191 line       497                             i, j,
excute 13:46:53.904203 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.907194 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2)]
excute 13:46:53.910187 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:53.914146 line       494                         if (i == j):
excute 13:46:53.918135 line       496                         i_j_list.append((
excute 13:46:53.921158 line       497                             i, j,
excute 13:46:53.924149 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.928108 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0)]
excute 13:46:53.931099 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:53.935088 line       494                         if (i == j):
excute 13:46:53.939079 line       496                         i_j_list.append((
excute 13:46:53.942070 line       497                             i, j,
excute 13:46:53.945062 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.950051 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0)]
excute 13:46:53.955035 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:53.959024 line       494                         if (i == j):
excute 13:46:53.964012 line       495                             continue
excute 13:46:53.967003 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:53.970026 line       494                         if (i == j):
excute 13:46:53.973984 line       496                         i_j_list.append((
excute 13:46:53.978006 line       497                             i, j,
excute 13:46:53.981964 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:53.984987 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0)]
excute 13:46:53.987979 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:53.991938 line       494                         if (i == j):
excute 13:46:53.994960 line       496                         i_j_list.append((
excute 13:46:53.998951 line       497                             i, j,
excute 13:46:54.001945 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.004933 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0)]
excute 13:46:54.007925 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:54.012881 line       494                         if (i == j):
excute 13:46:54.015905 line       496                         i_j_list.append((
excute 13:46:54.019871 line       497                             i, j,
excute 13:46:54.022856 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.026845 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0)]
excute 13:46:54.029838 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:54.033826 line       494                         if (i == j):
excute 13:46:54.038812 line       496                         i_j_list.append((
excute 13:46:54.041803 line       497                             i, j,
excute 13:46:54.044795 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.048816 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0)]
excute 13:46:54.051809 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:54.055767 line       494                         if (i == j):
excute 13:46:54.059791 line       496                         i_j_list.append((
excute 13:46:54.062779 line       497                             i, j,
excute 13:46:54.065771 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.068766 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0)]
excute 13:46:54.072753 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:54.076712 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:46:54.080733 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:54.083723 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:54.087712 line       494                         if (i == j):
excute 13:46:54.090705 line       496                         i_j_list.append((
excute 13:46:54.094700 line       497                             i, j,
excute 13:46:54.097686 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.100680 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0)]
excute 13:46:54.103638 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:54.108626 line       494                         if (i == j):
excute 13:46:54.111653 line       496                         i_j_list.append((
excute 13:46:54.115622 line       497                             i, j,
excute 13:46:54.118629 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.121621 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2)]
excute 13:46:54.125580 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:54.128603 line       494                         if (i == j):
excute 13:46:54.132562 line       496                         i_j_list.append((
excute 13:46:54.136573 line       497                             i, j,
excute 13:46:54.139543 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.142569 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0)]
excute 13:46:54.146556 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:54.150513 line       494                         if (i == j):
excute 13:46:54.153536 line       496                         i_j_list.append((
excute 13:46:54.157525 line       497                             i, j,
excute 13:46:54.160518 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.163510 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0)]
excute 13:46:54.167500 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:54.170491 line       494                         if (i == j):
excute 13:46:54.174483 line       496                         i_j_list.append((
excute 13:46:54.177473 line       497                             i, j,
excute 13:46:54.182459 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.185451 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0)]
excute 13:46:54.188445 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:54.192433 line       494                         if (i == j):
excute 13:46:54.196391 line       495                             continue
excute 13:46:54.200380 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:54.203371 line       494                         if (i == j):
excute 13:46:54.206363 line       496                         i_j_list.append((
excute 13:46:54.210352 line       497                             i, j,
excute 13:46:54.213344 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.216337 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0)]
excute 13:46:54.220335 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:54.226313 line       494                         if (i == j):
excute 13:46:54.230302 line       496                         i_j_list.append((
excute 13:46:54.235286 line       497                             i, j,
excute 13:46:54.239277 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.243268 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0)]
excute 13:46:54.246259 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:54.251246 line       494                         if (i == j):
excute 13:46:54.255234 line       496                         i_j_list.append((
excute 13:46:54.259224 line       497                             i, j,
excute 13:46:54.262245 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.265237 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0)]
excute 13:46:54.269222 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:54.272219 line       494                         if (i == j):
excute 13:46:54.276190 line       496                         i_j_list.append((
excute 13:46:54.280196 line       497                             i, j,
excute 13:46:54.285184 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.289174 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0)]
excute 13:46:54.292136 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:54.296125 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:46:54.299118 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:54.304103 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:54.307096 line       494                         if (i == j):
excute 13:46:54.311084 line       496                         i_j_list.append((
excute 13:46:54.314078 line       497                             i, j,
excute 13:46:54.318067 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.322055 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0)]
excute 13:46:54.327043 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:54.335021 line       494                         if (i == j):
excute 13:46:54.339010 line       496                         i_j_list.append((
excute 13:46:54.343997 line       497                             i, j,
excute 13:46:54.346991 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.349981 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 2)]
excute 13:46:54.353968 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:54.358955 line       494                         if (i == j):
excute 13:46:54.361979 line       496                         i_j_list.append((
excute 13:46:54.365969 line       497                             i, j,
excute 13:46:54.368960 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.372950 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 2), (6, 2, 1, 0)]
excute 13:46:54.376911 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:54.379931 line       494                         if (i == j):
excute 13:46:54.383921 line       496                         i_j_list.append((
excute 13:46:54.388907 line       497                             i, j,
excute 13:46:54.391899 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.395891 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 2), (6, 2, 1, 0), (6, 3, 1, 0)]
excute 13:46:54.398881 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:54.402839 line       494                         if (i == j):
excute 13:46:54.406827 line       496                         i_j_list.append((
excute 13:46:54.409851 line       497                             i, j,
excute 13:46:54.412844 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.415835 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 2), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0)]
excute 13:46:54.419796 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:54.423786 line       494                         if (i == j):
excute 13:46:54.426805 line       496                         i_j_list.append((
excute 13:46:54.430796 line       497                             i, j,
excute 13:46:54.433787 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.436779 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 2), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0)]
excute 13:46:54.439771 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:54.443761 line       494                         if (i == j):
excute 13:46:54.448749 line       495                             continue
excute 13:46:54.451709 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:54.455698 line       494                         if (i == j):
excute 13:46:54.459686 line       496                         i_j_list.append((
excute 13:46:54.462678 line       497                             i, j,
excute 13:46:54.466667 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.469691 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 2), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0)]
excute 13:46:54.473650 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:54.476640 line       494                         if (i == j):
excute 13:46:54.480630 line       496                         i_j_list.append((
excute 13:46:54.483622 line       497                             i, j,
excute 13:46:54.486614 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.490606 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 2), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0)]
excute 13:46:54.494625 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:54.498582 line       494                         if (i == j):
excute 13:46:54.501605 line       496                         i_j_list.append((
excute 13:46:54.505565 line       497                             i, j,
excute 13:46:54.508587 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.512544 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 2), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0)]
excute 13:46:54.515537 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:54.519526 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:46:54.522518 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:54.526507 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:54.529499 line       494                         if (i == j):
excute 13:46:54.533489 line       496                         i_j_list.append((
excute 13:46:54.536481 line       497                             i, j,
excute 13:46:54.539473 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.543462 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 2), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0)]
excute 13:46:54.546486 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:54.550450 line       494                         if (i == j):
excute 13:46:54.553467 line       496                         i_j_list.append((
excute 13:46:54.557456 line       497                             i, j,
excute 13:46:54.560448 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.564406 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 2), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 2)]
excute 13:46:54.567429 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:54.571428 line       494                         if (i == j):
excute 13:46:54.575377 line       496                         i_j_list.append((
excute 13:46:54.578369 line       497                             i, j,
excute 13:46:54.581361 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.585351 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 2), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 2), (7, 2, -1, 0)]
excute 13:46:54.588342 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:54.592333 line       494                         if (i == j):
excute 13:46:54.596356 line       496                         i_j_list.append((
excute 13:46:54.599345 line       497                             i, j,
excute 13:46:54.603305 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.608321 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 2), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 2), (7, 2, -1, 0), (7, 3, -1, 0)]
excute 13:46:54.612310 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:54.619295 line       494                         if (i == j):
excute 13:46:54.623250 line       496                         i_j_list.append((
excute 13:46:54.626273 line       497                             i, j,
excute 13:46:54.629265 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.632256 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 2), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 2), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0)]
excute 13:46:54.636246 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:54.640204 line       494                         if (i == j):
excute 13:46:54.644196 line       496                         i_j_list.append((
excute 13:46:54.647216 line       497                             i, j,
excute 13:46:54.650210 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.654199 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 2), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 2), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0)]
excute 13:46:54.657190 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:54.661148 line       494                         if (i == j):
excute 13:46:54.666135 line       496                         i_j_list.append((
excute 13:46:54.669128 line       497                             i, j,
excute 13:46:54.673152 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.676139 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 2), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 2), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0)]
excute 13:46:54.679131 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:54.683089 line       494                         if (i == j):
excute 13:46:54.687078 line       495                             continue
excute 13:46:54.690070 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:54.694059 line       494                         if (i == j):
excute 13:46:54.701042 line       496                         i_j_list.append((
excute 13:46:54.704035 line       497                             i, j,
excute 13:46:54.711015 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.715005 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 2), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 2), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0)]
excute 13:46:54.718993 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:54.722982 line       494                         if (i == j):
excute 13:46:54.726982 line       496                         i_j_list.append((
excute 13:46:54.729996 line       497                             i, j,
excute 13:46:54.732987 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.735979 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 2), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 2), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0)]
excute 13:46:54.739969 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:54.743927 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:46:54.746950 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:54.750908 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:54.753932 line       494                         if (i == j):
excute 13:46:54.757890 line       496                         i_j_list.append((
excute 13:46:54.761894 line       497                             i, j,
excute 13:46:54.764903 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.767894 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 2), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 2), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0)]
excute 13:46:54.771852 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:54.774875 line       494                         if (i == j):
excute 13:46:54.778833 line       496                         i_j_list.append((
excute 13:46:54.782824 line       497                             i, j,
excute 13:46:54.785816 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.788808 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 2), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 2), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 2)]
excute 13:46:54.792797 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:54.796787 line       494                         if (i == j):
excute 13:46:54.801776 line       496                         i_j_list.append((
excute 13:46:54.804763 line       497                             i, j,
excute 13:46:54.807756 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.813739 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 2), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 2), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 2), (8, 2, 2, 0)]
excute 13:46:54.817729 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:54.822750 line       494                         if (i == j):
excute 13:46:54.826707 line       496                         i_j_list.append((
excute 13:46:54.830696 line       497                             i, j,
excute 13:46:54.834685 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.837678 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 2), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 2), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 2), (8, 2, 2, 0), (8, 3, 2, 0)]
excute 13:46:54.841666 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:54.845656 line       494                         if (i == j):
excute 13:46:54.849646 line       496                         i_j_list.append((
excute 13:46:54.853635 line       497                             i, j,
excute 13:46:54.857624 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.860616 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 2), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 2), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 2), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0)]
excute 13:46:54.863608 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:54.868596 line       494                         if (i == j):
excute 13:46:54.872585 line       496                         i_j_list.append((
excute 13:46:54.875576 line       497                             i, j,
excute 13:46:54.879565 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.883555 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 2), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 2), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 2), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0)]
excute 13:46:54.887543 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:54.890536 line       494                         if (i == j):
excute 13:46:54.894525 line       496                         i_j_list.append((
excute 13:46:54.898514 line       497                             i, j,
excute 13:46:54.903500 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.906491 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 2), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 2), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 2), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0)]
excute 13:46:54.909483 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:54.913473 line       494                         if (i == j):
excute 13:46:54.917462 line       496                         i_j_list.append((
excute 13:46:54.920454 line       497                             i, j,
excute 13:46:54.923446 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.927435 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 2), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 2), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 2), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0)]
excute 13:46:54.930427 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:54.934417 line       494                         if (i == j):
excute 13:46:54.938406 line       495                             continue
excute 13:46:54.941398 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:54.944390 line       494                         if (i == j):
excute 13:46:54.949377 line       496                         i_j_list.append((
excute 13:46:54.952369 line       497                             i, j,
excute 13:46:54.956390 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.959382 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 2), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 2), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 2), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0)]
excute 13:46:54.965336 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:54.969355 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:46:54.974310 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:46:54.978300 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:54.981292 line       494                         if (i == j):
excute 13:46:54.985280 line       496                         i_j_list.append((
excute 13:46:54.989273 line       497                             i, j,
excute 13:46:54.993264 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:54.996254 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 2), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 2), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 2), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0)]
excute 13:46:55.001240 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:55.008221 line       494                         if (i == j):
excute 13:46:55.013206 line       496                         i_j_list.append((
excute 13:46:55.017198 line       497                             i, j,
excute 13:46:55.021187 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:55.025174 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 2), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 2), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 2), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 2)]
excute 13:46:55.029163 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:55.033153 line       494                         if (i == j):
excute 13:46:55.036145 line       496                         i_j_list.append((
excute 13:46:55.040134 line       497                             i, j,
excute 13:46:55.043126 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:55.046118 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 2), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 2), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 2), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 2), (9, 2, 2, 0)]
excute 13:46:55.051172 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:55.056171 line       494                         if (i == j):
excute 13:46:55.059189 line       496                         i_j_list.append((
excute 13:46:55.063177 line       497                             i, j,
excute 13:46:55.066168 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:55.069160 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 2), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 2), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 2), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 2), (9, 2, 2, 0), (9, 3, 2, 0)]
excute 13:46:55.073150 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:55.077108 line       494                         if (i == j):
excute 13:46:55.081098 line       496                         i_j_list.append((
excute 13:46:55.084120 line       497                             i, j,
excute 13:46:55.087112 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:55.091104 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 2), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 2), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 2), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 2), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0)]
excute 13:46:55.094097 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:55.098053 line       494                         if (i == j):
excute 13:46:55.102041 line       496                         i_j_list.append((
excute 13:46:55.106033 line       497                             i, j,
excute 13:46:55.112015 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:55.115039 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 2), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 2), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 2), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 2), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0)]
excute 13:46:55.118996 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:55.124719 line       494                         if (i == j):
excute 13:46:55.127708 line       496                         i_j_list.append((
excute 13:46:55.131698 line       497                             i, j,
excute 13:46:55.134690 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:55.138715 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 2), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 2), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 2), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 2), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0)]
excute 13:46:55.141706 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:55.145662 line       494                         if (i == j):
excute 13:46:55.149659 line       496                         i_j_list.append((
excute 13:46:55.152678 line       497                             i, j,
excute 13:46:55.156663 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:55.159656 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 2), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 2), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 2), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 2), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0)]
excute 13:46:55.163644 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:55.167637 line       494                         if (i == j):
excute 13:46:55.171597 line       496                         i_j_list.append((
excute 13:46:55.174585 line       497                             i, j,
excute 13:46:55.177577 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:55.181568 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 2), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 2), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 2), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 2), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 2), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 2), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 2), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 2), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 2), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0)]
excute 13:46:55.184558 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:55.188548 line       494                         if (i == j):
excute 13:46:55.192537 line       495                             continue
excute 13:46:55.195559 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:55.199542 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:46:55.202541 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 0), (0, 9, -2, 0), (0, 1, -2, 2), (7, 0, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (7, 1, -1, 2), (4, 0, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (4, 1, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (5, 0, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (5, 1, 1, 2), (6, 1, 1, 2), (2, 0, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (8, 0, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0), (2, 1, 2, 2), (8, 1, 2, 2), (9, 1, 2, 2), (3, 0, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (3, 1, 10, 2)]
excute 13:46:55.205534 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:46:55.210489 line       505                     if (self.RELOCATE):
excute 13:46:55.214479 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:46:55.217501 line       505                     if (self.RELOCATE):
excute 13:46:55.221460 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:46:55.224481 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, -2, 0)
excute 13:46:55.228449 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:46:55.231463 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:55.235453 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.239415 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, -2, 0)
excute 13:46:55.243407 line       556                     i = i_j[0]
excute 13:46:55.246423 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:55.250397 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.254404 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, -2, 0)
excute 13:46:55.257394 line       556                     i = i_j[0]
excute 13:46:55.261353 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:55.264345 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.269332 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, -2, 0)
excute 13:46:55.272324 line       556                     i = i_j[0]
excute 13:46:55.276313 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:55.280302 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.284292 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, -2, 0)
excute 13:46:55.288281 line       556                     i = i_j[0]
excute 13:46:55.292271 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:55.296260 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.300248 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, -2, 0)
excute 13:46:55.304239 line       556                     i = i_j[0]
excute 13:46:55.308230 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:55.311220 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.316210 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, -2, 0)
excute 13:46:55.319228 line       556                     i = i_j[0]
excute 13:46:55.324218 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:55.331167 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.339172 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, -2, 0)
excute 13:46:55.344130 line       556                     i = i_j[0]
excute 13:46:55.348120 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:55.351111 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.356132 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, -2, 2)
excute 13:46:55.361118 line       556                     i = i_j[0]
excute 13:46:55.365110 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:55.368097 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.372089 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -1, 0)
excute 13:46:55.376046 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:46:55.381034 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:55.385023 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.390038 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -1, 0)
excute 13:46:55.393998 line       556                     i = i_j[0]
excute 13:46:55.398985 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:55.401977 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.406963 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -1, 0)
excute 13:46:55.409956 line       556                     i = i_j[0]
excute 13:46:55.414942 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:55.418962 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.422921 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -1, 0)
excute 13:46:55.425943 line       556                     i = i_j[0]
excute 13:46:55.429903 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:55.433890 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.437912 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -1, 0)
excute 13:46:55.440872 line       556                     i = i_j[0]
excute 13:46:55.448851 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:55.452875 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.456846 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -1, 0)
excute 13:46:55.459821 line       556                     i = i_j[0]
excute 13:46:55.463810 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:55.466802 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.470795 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -1, 0)
excute 13:46:55.473784 line       556                     i = i_j[0]
excute 13:46:55.477773 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:55.480765 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.484754 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -1, 0)
excute 13:46:55.487746 line       556                     i = i_j[0]
excute 13:46:55.491737 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:55.495727 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.499717 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -1, 2)
excute 13:46:55.502708 line       556                     i = i_j[0]
excute 13:46:55.506697 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:55.510686 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.514676 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 0, 0)
excute 13:46:55.520660 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:46:55.523682 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:55.527676 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.531631 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 0, 0)
excute 13:46:55.534652 line       556                     i = i_j[0]
excute 13:46:55.538612 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:55.542601 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.546591 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 0, 0)
excute 13:46:55.550580 line       556                     i = i_j[0]
excute 13:46:55.554571 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:55.558557 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.562549 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 0, 0)
excute 13:46:55.565570 line       556                     i = i_j[0]
excute 13:46:55.569529 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:55.573549 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.577510 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 0, 0)
excute 13:46:55.580534 line       556                     i = i_j[0]
excute 13:46:55.584517 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:55.587512 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.591484 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 0, 0)
excute 13:46:55.594493 line       556                     i = i_j[0]
excute 13:46:55.598484 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:55.601474 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.605432 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 0, 0)
excute 13:46:55.610422 line       556                     i = i_j[0]
excute 13:46:55.613442 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:55.617432 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.621392 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 0, 0)
excute 13:46:55.625380 line       556                     i = i_j[0]
excute 13:46:55.629369 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:55.633358 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.638347 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 0, 2)
excute 13:46:55.641338 line       556                     i = i_j[0]
excute 13:46:55.645326 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:55.649316 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.653307 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 113
excute 13:46:55.656297 line       560                         if (t_tmp > self.TIME):
excute 13:46:55.661288 line       563                             if (available_vhecles[i][t] == 0):
excute 13:46:55.665272 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:46:55.671287 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:46:55.674279 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:46:55.677271 line       569                                     available_vhecles[i][t],
excute 13:46:55.681251 line       570                                     available_vhecles[j][t_tmp],
excute 13:46:55.684255 line       571                                     self.S_capacities[j],
excute 13:46:55.687248 line       572                                     demands[t][i][j],
excute 13:46:55.691207 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 3
calc_contract     Starting var:.. available_vhecles_target = 2
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 2
calc_contract     Starting var:.. t = 106
calc_contract     13:46:55.694226 call       352     def caluculate_contract(
calc_contract     13:46:55.697187 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:46:55.698199 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:46:55.698199 line       362         if (available_vhecles_start >= demand):
calc_contract     13:46:55.699183 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:46:55.700180 line       369                 can_contract = capacity_target - available_vhecles_target
calc_contract     New var:....... can_contract = 1
calc_contract     13:46:55.700180 line       370                 rsf += (available_vhecles_target + demand - capacity_target)
calc_contract     Modified var:.. rsf = 1
calc_contract     13:46:55.701178 line       385         return [can_contract, rsf, rse]
calc_contract     13:46:55.702207 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 1, 0]
excute Modified var:.. rsf_tmp = 1
excute 13:46:55.703203 line       575                                 rsf += rsf_tmp
excute Modified var:.. rsf = 136
excute 13:46:55.707162 line       576                                 rse += rse_tmp
excute 13:46:55.711187 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     Starting var:.. i = 4
move_cars     Starting var:.. j = 1
move_cars     Starting var:.. t = 106
move_cars     Starting var:.. t_tmp = 113
move_cars     Starting var:.. can_contract = 1
move_cars     13:46:55.714142 call       388     def move_cars(
move_cars     13:46:55.718142 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:46:55.720158 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:46:55.721156 line       399         return available_vhecles
move_cars     13:46:55.722153 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:46:55.726110 line       579                                 success += can_contract
excute Modified var:.. success = 44
excute 13:46:55.730100 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 1, 0)
excute 13:46:55.734089 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:46:55.738111 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:55.741101 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.745090 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 1, 0)
excute 13:46:55.749055 line       556                     i = i_j[0]
excute 13:46:55.752072 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:55.756064 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.760023 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 1, 0)
excute 13:46:55.763042 line       556                     i = i_j[0]
excute 13:46:55.767036 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:55.770989 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.774015 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 1, 0)
excute 13:46:55.777970 line       556                     i = i_j[0]
excute 13:46:55.780994 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:55.784985 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.788974 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 1, 0)
excute 13:46:55.791965 line       556                     i = i_j[0]
excute 13:46:55.796921 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:55.799944 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.803935 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 1, 0)
excute 13:46:55.807921 line       556                     i = i_j[0]
excute 13:46:55.810914 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:55.814908 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.818893 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 1, 0)
excute 13:46:55.821885 line       556                     i = i_j[0]
excute 13:46:55.825845 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:55.829832 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.833821 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 1, 0)
excute 13:46:55.836813 line       556                     i = i_j[0]
excute 13:46:55.840803 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:55.843794 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.847784 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 1, 0)
excute 13:46:55.850776 line       556                     i = i_j[0]
excute 13:46:55.855764 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:55.858787 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.862777 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 1, 0)
excute 13:46:55.867731 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:46:55.873716 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:55.880721 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.886681 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 1, 0)
excute 13:46:55.889672 line       556                     i = i_j[0]
excute 13:46:55.896655 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:55.900643 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.903667 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 1, 0)
excute 13:46:55.907659 line       556                     i = i_j[0]
excute 13:46:55.910651 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:55.914637 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.917628 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 1, 0)
excute 13:46:55.921618 line       556                     i = i_j[0]
excute 13:46:55.925609 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:55.928599 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.934552 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 1, 0)
excute 13:46:55.937545 line       556                     i = i_j[0]
excute 13:46:55.941535 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:55.946522 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.950512 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 1, 0)
excute 13:46:55.954501 line       556                     i = i_j[0]
excute 13:46:55.958488 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:55.962478 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.966467 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 1, 0)
excute 13:46:55.969459 line       556                     i = i_j[0]
excute 13:46:55.974445 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:55.978466 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.982461 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 1, 0)
excute 13:46:55.985447 line       556                     i = i_j[0]
excute 13:46:55.989407 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:55.992428 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:55.996402 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 1, 0)
excute 13:46:55.999410 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:46:56.003403 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:56.007358 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.011351 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 1, 0)
excute 13:46:56.014374 line       556                     i = i_j[0]
excute 13:46:56.018359 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:56.021352 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.025341 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 1, 0)
excute 13:46:56.029299 line       556                     i = i_j[0]
excute 13:46:56.033291 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:56.037277 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.040301 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 1, 0)
excute 13:46:56.044291 line       556                     i = i_j[0]
excute 13:46:56.047285 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:56.051274 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.055232 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 1, 0)
excute 13:46:56.058253 line       556                     i = i_j[0]
excute 13:46:56.062247 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:56.065234 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.069225 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 1, 0)
excute 13:46:56.073214 line       556                     i = i_j[0]
excute 13:46:56.077171 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:56.080194 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.084185 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 1, 0)
excute 13:46:56.087176 line       556                     i = i_j[0]
excute 13:46:56.091169 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:56.094161 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.098116 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 1, 0)
excute 13:46:56.101139 line       556                     i = i_j[0]
excute 13:46:56.105097 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:56.111080 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.115070 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 1, 2)
excute 13:46:56.118092 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:46:56.122082 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:56.126042 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.130031 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 1, 2)
excute 13:46:56.133053 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:46:56.139006 line       557                     j = i_j[1]
excute 13:46:56.141997 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.145986 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:46:56.149010 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:46:56.153002 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:56.157958 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.161947 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:46:56.164938 line       556                     i = i_j[0]
excute 13:46:56.169926 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:56.172917 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.176906 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:46:56.180895 line       556                     i = i_j[0]
excute 13:46:56.184884 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:56.188874 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.192863 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:46:56.196852 line       556                     i = i_j[0]
excute 13:46:56.200842 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:56.204831 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.208820 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:46:56.212810 line       556                     i = i_j[0]
excute 13:46:56.216800 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:56.219791 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.223781 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:46:56.227770 line       556                     i = i_j[0]
excute 13:46:56.231758 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:56.234751 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.239737 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:46:56.242761 line       556                     i = i_j[0]
excute 13:46:56.246749 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:56.250707 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.253698 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:46:56.257719 line       556                     i = i_j[0]
excute 13:46:56.261680 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:56.265669 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.269658 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 2, 0)
excute 13:46:56.272650 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:46:56.277638 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:56.281627 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.285616 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 2, 0)
excute 13:46:56.288607 line       556                     i = i_j[0]
excute 13:46:56.292597 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:56.296586 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.300575 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 2, 0)
excute 13:46:56.304565 line       556                     i = i_j[0]
excute 13:46:56.307557 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:56.311546 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.316532 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 2, 0)
excute 13:46:56.320521 line       556                     i = i_j[0]
excute 13:46:56.330495 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:56.341465 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.350441 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 2, 0)
excute 13:46:56.354429 line       556                     i = i_j[0]
excute 13:46:56.360415 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:56.367395 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.372383 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 2, 0)
excute 13:46:56.376371 line       556                     i = i_j[0]
excute 13:46:56.382363 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:56.387346 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.395320 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 2, 0)
excute 13:46:56.399313 line       556                     i = i_j[0]
excute 13:46:56.407288 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:56.410283 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.421251 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 2, 0)
excute 13:46:56.430229 line       556                     i = i_j[0]
excute 13:46:56.441198 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:56.444190 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.453167 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 2, 0)
excute 13:46:56.461144 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:46:56.474110 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:56.483087 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.491065 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 2, 0)
excute 13:46:56.499046 line       556                     i = i_j[0]
excute 13:46:56.507033 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:56.515001 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.522979 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 2, 0)
excute 13:46:56.527967 line       556                     i = i_j[0]
excute 13:46:56.535944 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:56.543923 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.552899 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 2, 0)
excute 13:46:56.560881 line       556                     i = i_j[0]
excute 13:46:56.566862 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:56.571849 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.578831 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 2, 0)
excute 13:46:56.585810 line       556                     i = i_j[0]
excute 13:46:56.594788 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:56.602766 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.612740 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 2, 0)
excute 13:46:56.619721 line       556                     i = i_j[0]
excute 13:46:56.627700 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:56.633684 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.640666 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 2, 0)
excute 13:46:56.646650 line       556                     i = i_j[0]
excute 13:46:56.652633 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:56.658619 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.667592 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 2, 0)
excute 13:46:56.676570 line       556                     i = i_j[0]
excute 13:46:56.683551 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:56.690531 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.699507 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 2)
excute 13:46:56.704494 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:46:56.710479 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:56.718458 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.724440 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 2, 2)
excute 13:46:56.729427 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:46:56.735413 line       557                     j = i_j[1]
excute 13:46:56.744389 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.750371 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 2, 2)
excute 13:46:56.756355 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:46:56.765332 line       557                     j = i_j[1]
excute 13:46:56.772313 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.778297 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 10, 0)
excute 13:46:56.782286 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:46:56.789268 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:56.794254 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.798243 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 10, 0)
excute 13:46:56.801235 line       556                     i = i_j[0]
excute 13:46:56.805225 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:56.809214 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.813203 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 10, 0)
excute 13:46:56.816195 line       556                     i = i_j[0]
excute 13:46:56.820185 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:56.824174 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.828164 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 10, 0)
excute 13:46:56.832153 line       556                     i = i_j[0]
excute 13:46:56.836146 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:56.839133 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.843123 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 10, 0)
excute 13:46:56.846115 line       556                     i = i_j[0]
excute 13:46:56.850104 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:56.853096 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.857086 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 10, 0)
excute 13:46:56.861075 line       556                     i = i_j[0]
excute 13:46:56.865067 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:56.870052 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.873043 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 10, 0)
excute 13:46:56.877033 line       556                     i = i_j[0]
excute 13:46:56.880025 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:56.884016 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.888004 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 10, 0)
excute 13:46:56.891027 line       556                     i = i_j[0]
excute 13:46:56.895015 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:56.898995 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.901998 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 10, 2)
excute 13:46:56.905986 line       556                     i = i_j[0]
excute 13:46:56.909945 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:56.912971 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:56.916960 line       555                 for i_j in i_j_list:
excute 13:46:56.919950 line       581             self.write_matrix(
excute 13:46:56.923943 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:46:56.927899 line       583                 result_file_path,
excute 13:46:56.930920 line       584                 mode='a'
excute 13:46:56.936874 line       488         for t in time_steps:
excute Modified var:.. t = 107
excute 13:46:56.941859 line       489             if (t != self.TIME + 1):
excute 13:46:56.948841 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:46:56.954825 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:46:56.958815 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:46:56.963802 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:56.967790 line       494                         if (i == j):
excute 13:46:56.974772 line       495                             continue
excute 13:46:56.977766 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:56.980757 line       494                         if (i == j):
excute 13:46:56.984747 line       496                         i_j_list.append((
excute 13:46:56.988736 line       497                             i, j,
excute 13:46:56.993722 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:56.997712 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0)]
excute 13:46:57.005696 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:57.012670 line       494                         if (i == j):
excute 13:46:57.016660 line       496                         i_j_list.append((
excute 13:46:57.019651 line       497                             i, j,
excute 13:46:57.024640 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.027631 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0)]
excute 13:46:57.031622 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:57.035610 line       494                         if (i == j):
excute 13:46:57.039600 line       496                         i_j_list.append((
excute 13:46:57.043606 line       497                             i, j,
excute 13:46:57.046580 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.050569 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0)]
excute 13:46:57.053561 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:57.058549 line       494                         if (i == j):
excute 13:46:57.062537 line       496                         i_j_list.append((
excute 13:46:57.068525 line       497                             i, j,
excute 13:46:57.074517 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.078495 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0)]
excute 13:46:57.081486 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:57.085477 line       494                         if (i == j):
excute 13:46:57.089467 line       496                         i_j_list.append((
excute 13:46:57.093456 line       497                             i, j,
excute 13:46:57.096448 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.100437 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0)]
excute 13:46:57.103429 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:57.107419 line       494                         if (i == j):
excute 13:46:57.113401 line       496                         i_j_list.append((
excute 13:46:57.120382 line       497                             i, j,
excute 13:46:57.126367 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.129358 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0)]
excute 13:46:57.133348 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:57.136340 line       494                         if (i == j):
excute 13:46:57.140331 line       496                         i_j_list.append((
excute 13:46:57.143322 line       497                             i, j,
excute 13:46:57.146314 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.150303 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0)]
excute 13:46:57.153295 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:57.157285 line       494                         if (i == j):
excute 13:46:57.161275 line       496                         i_j_list.append((
excute 13:46:57.164265 line       497                             i, j,
excute 13:46:57.167257 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.170249 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1)]
excute 13:46:57.174240 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:57.179226 line       494                         if (i == j):
excute 13:46:57.183216 line       496                         i_j_list.append((
excute 13:46:57.186238 line       497                             i, j,
excute 13:46:57.190200 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.193187 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0)]
excute 13:46:57.196179 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:57.200168 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:46:57.203160 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:57.207150 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:57.210142 line       494                         if (i == j):
excute 13:46:57.214131 line       496                         i_j_list.append((
excute 13:46:57.217123 line       497                             i, j,
excute 13:46:57.220114 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.224106 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0)]
excute 13:46:57.231087 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:57.238067 line       494                         if (i == j):
excute 13:46:57.244051 line       495                             continue
excute 13:46:57.248042 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:57.251034 line       494                         if (i == j):
excute 13:46:57.256020 line       496                         i_j_list.append((
excute 13:46:57.261009 line       497                             i, j,
excute 13:46:57.264009 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.267988 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0)]
excute 13:46:57.271978 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:57.276966 line       494                         if (i == j):
excute 13:46:57.280954 line       496                         i_j_list.append((
excute 13:46:57.284974 line       497                             i, j,
excute 13:46:57.287967 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.290961 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0)]
excute 13:46:57.294939 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:57.297939 line       494                         if (i == j):
excute 13:46:57.301897 line       496                         i_j_list.append((
excute 13:46:57.304919 line       497                             i, j,
excute 13:46:57.307912 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.311883 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0)]
excute 13:46:57.314898 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:57.317886 line       494                         if (i == j):
excute 13:46:57.321875 line       496                         i_j_list.append((
excute 13:46:57.325864 line       497                             i, j,
excute 13:46:57.333813 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.336837 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0)]
excute 13:46:57.340824 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:57.345779 line       494                         if (i == j):
excute 13:46:57.348771 line       496                         i_j_list.append((
excute 13:46:57.352760 line       497                             i, j,
excute 13:46:57.355754 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.359742 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0)]
excute 13:46:57.362734 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:57.366723 line       494                         if (i == j):
excute 13:46:57.370713 line       496                         i_j_list.append((
excute 13:46:57.374707 line       497                             i, j,
excute 13:46:57.377725 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.380718 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0)]
excute 13:46:57.384679 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:57.389664 line       494                         if (i == j):
excute 13:46:57.393651 line       496                         i_j_list.append((
excute 13:46:57.396675 line       497                             i, j,
excute 13:46:57.399670 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.402657 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1)]
excute 13:46:57.406618 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:57.409610 line       494                         if (i == j):
excute 13:46:57.413599 line       496                         i_j_list.append((
excute 13:46:57.417590 line       497                             i, j,
excute 13:46:57.420581 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.423572 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0)]
excute 13:46:57.426599 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:57.430584 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:46:57.433577 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:57.437559 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:57.440558 line       494                         if (i == j):
excute 13:46:57.444515 line       496                         i_j_list.append((
excute 13:46:57.448505 line       497                             i, j,
excute 13:46:57.451529 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.455520 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0)]
excute 13:46:57.458513 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:57.462499 line       494                         if (i == j):
excute 13:46:57.466459 line       496                         i_j_list.append((
excute 13:46:57.469480 line       497                             i, j,
excute 13:46:57.472473 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.476462 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0)]
excute 13:46:57.479456 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:57.484410 line       494                         if (i == j):
excute 13:46:57.487435 line       495                             continue
excute 13:46:57.491392 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:57.495381 line       494                         if (i == j):
excute 13:46:57.499371 line       496                         i_j_list.append((
excute 13:46:57.503358 line       497                             i, j,
excute 13:46:57.506386 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.509374 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:46:57.513331 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:57.517321 line       494                         if (i == j):
excute 13:46:57.520312 line       496                         i_j_list.append((
excute 13:46:57.524302 line       497                             i, j,
excute 13:46:57.527294 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.530286 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:46:57.533278 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:57.537268 line       494                         if (i == j):
excute 13:46:57.541257 line       496                         i_j_list.append((
excute 13:46:57.544248 line       497                             i, j,
excute 13:46:57.547241 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.550232 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:46:57.553224 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:57.557214 line       494                         if (i == j):
excute 13:46:57.561204 line       496                         i_j_list.append((
excute 13:46:57.564227 line       497                             i, j,
excute 13:46:57.568185 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.571209 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0)]
excute 13:46:57.575169 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:57.579157 line       494                         if (i == j):
excute 13:46:57.582179 line       496                         i_j_list.append((
excute 13:46:57.585173 line       497                             i, j,
excute 13:46:57.589143 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.593119 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:46:57.596143 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:57.599135 line       494                         if (i == j):
excute 13:46:57.603124 line       496                         i_j_list.append((
excute 13:46:57.606115 line       497                             i, j,
excute 13:46:57.610084 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.613097 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1)]
excute 13:46:57.616088 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:57.620047 line       494                         if (i == j):
excute 13:46:57.625034 line       496                         i_j_list.append((
excute 13:46:57.629022 line       497                             i, j,
excute 13:46:57.632014 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.636003 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0)]
excute 13:46:57.639995 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:57.643985 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:46:57.646976 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:57.651964 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:57.654955 line       494                         if (i == j):
excute 13:46:57.658943 line       496                         i_j_list.append((
excute 13:46:57.661936 line       497                             i, j,
excute 13:46:57.665926 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.670946 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0)]
excute 13:46:57.674900 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:57.678889 line       494                         if (i == j):
excute 13:46:57.681912 line       496                         i_j_list.append((
excute 13:46:57.685871 line       497                             i, j,
excute 13:46:57.688894 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.691886 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0)]
excute 13:46:57.696841 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:57.700830 line       494                         if (i == j):
excute 13:46:57.703822 line       496                         i_j_list.append((
excute 13:46:57.706845 line       497                             i, j,
excute 13:46:57.710827 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.713831 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0)]
excute 13:46:57.716819 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:57.720778 line       494                         if (i == j):
excute 13:46:57.724802 line       495                             continue
excute 13:46:57.727789 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:57.730782 line       494                         if (i == j):
excute 13:46:57.734741 line       496                         i_j_list.append((
excute 13:46:57.737767 line       497                             i, j,
excute 13:46:57.741722 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.744744 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0)]
excute 13:46:57.747736 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:57.751728 line       494                         if (i == j):
excute 13:46:57.755687 line       496                         i_j_list.append((
excute 13:46:57.759675 line       497                             i, j,
excute 13:46:57.762666 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.766656 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0)]
excute 13:46:57.770645 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:57.774633 line       494                         if (i == j):
excute 13:46:57.778634 line       496                         i_j_list.append((
excute 13:46:57.781614 line       497                             i, j,
excute 13:46:57.785603 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.788595 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0)]
excute 13:46:57.791587 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:57.795578 line       494                         if (i == j):
excute 13:46:57.799600 line       496                         i_j_list.append((
excute 13:46:57.803556 line       497                             i, j,
excute 13:46:57.806582 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.809575 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0)]
excute 13:46:57.812563 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:57.816553 line       494                         if (i == j):
excute 13:46:57.820513 line       496                         i_j_list.append((
excute 13:46:57.824500 line       497                             i, j,
excute 13:46:57.827494 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.831480 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1)]
excute 13:46:57.834474 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:57.839463 line       494                         if (i == j):
excute 13:46:57.842454 line       496                         i_j_list.append((
excute 13:46:57.846442 line       497                             i, j,
excute 13:46:57.850432 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.853424 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0)]
excute 13:46:57.857413 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:57.861403 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:46:57.865392 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:57.871374 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:57.875365 line       494                         if (i == j):
excute 13:46:57.879355 line       496                         i_j_list.append((
excute 13:46:57.883344 line       497                             i, j,
excute 13:46:57.888328 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.892320 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0)]
excute 13:46:57.895312 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:57.900300 line       494                         if (i == j):
excute 13:46:57.904318 line       496                         i_j_list.append((
excute 13:46:57.908277 line       497                             i, j,
excute 13:46:57.911299 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.914290 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0)]
excute 13:46:57.917283 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:57.921241 line       494                         if (i == j):
excute 13:46:57.925233 line       496                         i_j_list.append((
excute 13:46:57.929221 line       497                             i, j,
excute 13:46:57.932213 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.936203 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0)]
excute 13:46:57.939194 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:57.943184 line       494                         if (i == j):
excute 13:46:57.948170 line       496                         i_j_list.append((
excute 13:46:57.952158 line       497                             i, j,
excute 13:46:57.955150 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.959139 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0)]
excute 13:46:57.964127 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:57.970111 line       494                         if (i == j):
excute 13:46:57.974100 line       495                             continue
excute 13:46:57.978089 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:57.981082 line       494                         if (i == j):
excute 13:46:57.986069 line       496                         i_j_list.append((
excute 13:46:57.989061 line       497                             i, j,
excute 13:46:57.993050 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:57.996042 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0)]
excute 13:46:58.000032 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:58.005016 line       494                         if (i == j):
excute 13:46:58.009007 line       496                         i_j_list.append((
excute 13:46:58.013008 line       497                             i, j,
excute 13:46:58.015989 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.018980 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0)]
excute 13:46:58.021972 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:58.025962 line       494                         if (i == j):
excute 13:46:58.029951 line       496                         i_j_list.append((
excute 13:46:58.032943 line       497                             i, j,
excute 13:46:58.035935 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.039925 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0)]
excute 13:46:58.042915 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:58.046905 line       494                         if (i == j):
excute 13:46:58.049896 line       496                         i_j_list.append((
excute 13:46:58.053887 line       497                             i, j,
excute 13:46:58.056878 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.059870 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1)]
excute 13:46:58.063861 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:58.066851 line       494                         if (i == j):
excute 13:46:58.070853 line       496                         i_j_list.append((
excute 13:46:58.073833 line       497                             i, j,
excute 13:46:58.077822 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.080814 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0)]
excute 13:46:58.083806 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:58.087795 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:46:58.090787 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:58.094777 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:58.097769 line       494                         if (i == j):
excute 13:46:58.101758 line       496                         i_j_list.append((
excute 13:46:58.105749 line       497                             i, j,
excute 13:46:58.108739 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.111731 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0)]
excute 13:46:58.114723 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:58.119711 line       494                         if (i == j):
excute 13:46:58.125696 line       496                         i_j_list.append((
excute 13:46:58.129684 line       497                             i, j,
excute 13:46:58.135669 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.139658 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0)]
excute 13:46:58.143648 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:58.146639 line       494                         if (i == j):
excute 13:46:58.150628 line       496                         i_j_list.append((
excute 13:46:58.153619 line       497                             i, j,
excute 13:46:58.157609 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.160600 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0)]
excute 13:46:58.163593 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:58.167582 line       494                         if (i == j):
excute 13:46:58.170574 line       496                         i_j_list.append((
excute 13:46:58.174580 line       497                             i, j,
excute 13:46:58.177555 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.180547 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0)]
excute 13:46:58.183539 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:58.187530 line       494                         if (i == j):
excute 13:46:58.191519 line       496                         i_j_list.append((
excute 13:46:58.194510 line       497                             i, j,
excute 13:46:58.198500 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.201491 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0)]
excute 13:46:58.204483 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:58.209473 line       494                         if (i == j):
excute 13:46:58.213461 line       495                             continue
excute 13:46:58.216451 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:58.220441 line       494                         if (i == j):
excute 13:46:58.223433 line       496                         i_j_list.append((
excute 13:46:58.226425 line       497                             i, j,
excute 13:46:58.230415 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.233406 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0)]
excute 13:46:58.236398 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:58.240388 line       494                         if (i == j):
excute 13:46:58.244378 line       496                         i_j_list.append((
excute 13:46:58.247369 line       497                             i, j,
excute 13:46:58.250361 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.254352 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0)]
excute 13:46:58.257342 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:58.261332 line       494                         if (i == j):
excute 13:46:58.265324 line       496                         i_j_list.append((
excute 13:46:58.268315 line       497                             i, j,
excute 13:46:58.271307 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.275296 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1)]
excute 13:46:58.279284 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:58.283273 line       494                         if (i == j):
excute 13:46:58.286297 line       496                         i_j_list.append((
excute 13:46:58.290254 line       497                             i, j,
excute 13:46:58.293280 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.297267 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0)]
excute 13:46:58.300259 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:58.304219 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:46:58.307240 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:58.312197 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:58.315219 line       494                         if (i == j):
excute 13:46:58.319178 line       496                         i_j_list.append((
excute 13:46:58.322201 line       497                             i, j,
excute 13:46:58.327161 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.343114 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 1, 0)]
excute 13:46:58.350106 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:58.357077 line       494                         if (i == j):
excute 13:46:58.365055 line       496                         i_j_list.append((
excute 13:46:58.371039 line       497                             i, j,
excute 13:46:58.378020 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.383007 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0)]
excute 13:46:58.389989 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:58.396970 line       494                         if (i == j):
excute 13:46:58.403951 line       496                         i_j_list.append((
excute 13:46:58.408937 line       497                             i, j,
excute 13:46:58.414921 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.424895 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0)]
excute 13:46:58.429881 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:58.435866 line       494                         if (i == j):
excute 13:46:58.441850 line       496                         i_j_list.append((
excute 13:46:58.447834 line       497                             i, j,
excute 13:46:58.453818 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.461796 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0)]
excute 13:46:58.467780 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:58.473764 line       494                         if (i == j):
excute 13:46:58.480747 line       496                         i_j_list.append((
excute 13:46:58.483740 line       497                             i, j,
excute 13:46:58.487727 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.491716 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0)]
excute 13:46:58.495706 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:58.498697 line       494                         if (i == j):
excute 13:46:58.502686 line       496                         i_j_list.append((
excute 13:46:58.506675 line       497                             i, j,
excute 13:46:58.509669 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.513657 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0)]
excute 13:46:58.516649 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:58.520638 line       494                         if (i == j):
excute 13:46:58.524630 line       495                             continue
excute 13:46:58.529646 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:58.532641 line       494                         if (i == j):
excute 13:46:58.536597 line       496                         i_j_list.append((
excute 13:46:58.539588 line       497                             i, j,
excute 13:46:58.543577 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.546569 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0)]
excute 13:46:58.549561 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:58.553552 line       494                         if (i == j):
excute 13:46:58.557540 line       496                         i_j_list.append((
excute 13:46:58.560531 line       497                             i, j,
excute 13:46:58.563523 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.567513 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 1)]
excute 13:46:58.570505 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:58.574508 line       494                         if (i == j):
excute 13:46:58.578484 line       496                         i_j_list.append((
excute 13:46:58.581476 line       497                             i, j,
excute 13:46:58.584468 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.588491 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 1), (6, 9, 1, 0)]
excute 13:46:58.591485 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:58.595472 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:46:58.598430 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:58.602420 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:58.605412 line       494                         if (i == j):
excute 13:46:58.609401 line       496                         i_j_list.append((
excute 13:46:58.612393 line       497                             i, j,
excute 13:46:58.615385 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.619374 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -1, 0)]
excute 13:46:58.622368 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:58.627353 line       494                         if (i == j):
excute 13:46:58.632370 line       496                         i_j_list.append((
excute 13:46:58.635363 line       497                             i, j,
excute 13:46:58.639321 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.642313 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0)]
excute 13:46:58.645305 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:58.649296 line       494                         if (i == j):
excute 13:46:58.653285 line       496                         i_j_list.append((
excute 13:46:58.656275 line       497                             i, j,
excute 13:46:58.660266 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.663258 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0)]
excute 13:46:58.670239 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:58.674230 line       494                         if (i == j):
excute 13:46:58.677220 line       496                         i_j_list.append((
excute 13:46:58.681209 line       497                             i, j,
excute 13:46:58.684201 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.688192 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0)]
excute 13:46:58.691185 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:58.695175 line       494                         if (i == j):
excute 13:46:58.699163 line       496                         i_j_list.append((
excute 13:46:58.702185 line       497                             i, j,
excute 13:46:58.706143 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.709166 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0)]
excute 13:46:58.712129 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:58.716150 line       494                         if (i == j):
excute 13:46:58.720105 line       496                         i_j_list.append((
excute 13:46:58.723130 line       497                             i, j,
excute 13:46:58.727086 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.730110 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0)]
excute 13:46:58.734069 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:58.739057 line       494                         if (i == j):
excute 13:46:58.742049 line       496                         i_j_list.append((
excute 13:46:58.746037 line       497                             i, j,
excute 13:46:58.750027 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.754018 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0)]
excute 13:46:58.757008 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:58.761993 line       494                         if (i == j):
excute 13:46:58.764988 line       495                             continue
excute 13:46:58.768977 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:58.771968 line       494                         if (i == j):
excute 13:46:58.776954 line       496                         i_j_list.append((
excute 13:46:58.779947 line       497                             i, j,
excute 13:46:58.782939 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.786928 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1)]
excute 13:46:58.789920 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:58.793909 line       494                         if (i == j):
excute 13:46:58.796902 line       496                         i_j_list.append((
excute 13:46:58.800891 line       497                             i, j,
excute 13:46:58.804880 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.807873 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0)]
excute 13:46:58.811861 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:58.815850 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:46:58.818843 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:46:58.823861 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:58.826852 line       494                         if (i == j):
excute 13:46:58.830810 line       496                         i_j_list.append((
excute 13:46:58.834800 line       497                             i, j,
excute 13:46:58.838787 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.841779 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 2, 0)]
excute 13:46:58.844772 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:58.848762 line       494                         if (i == j):
excute 13:46:58.851752 line       496                         i_j_list.append((
excute 13:46:58.855743 line       497                             i, j,
excute 13:46:58.858735 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.861726 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0)]
excute 13:46:58.864719 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:58.868708 line       494                         if (i == j):
excute 13:46:58.872700 line       496                         i_j_list.append((
excute 13:46:58.875723 line       497                             i, j,
excute 13:46:58.879687 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.882704 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0)]
excute 13:46:58.885694 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:58.889683 line       494                         if (i == j):
excute 13:46:58.893645 line       496                         i_j_list.append((
excute 13:46:58.896665 line       497                             i, j,
excute 13:46:58.900623 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.903615 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0)]
excute 13:46:58.906606 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:58.910597 line       494                         if (i == j):
excute 13:46:58.913588 line       496                         i_j_list.append((
excute 13:46:58.916580 line       497                             i, j,
excute 13:46:58.920568 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.923561 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0)]
excute 13:46:58.926553 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:58.930542 line       494                         if (i == j):
excute 13:46:58.934532 line       496                         i_j_list.append((
excute 13:46:58.939554 line       497                             i, j,
excute 13:46:58.942546 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.946500 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0)]
excute 13:46:58.950526 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:58.954490 line       494                         if (i == j):
excute 13:46:58.958470 line       496                         i_j_list.append((
excute 13:46:58.961491 line       497                             i, j,
excute 13:46:58.964484 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.968473 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0)]
excute 13:46:58.971467 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:58.975431 line       494                         if (i == j):
excute 13:46:58.979414 line       496                         i_j_list.append((
excute 13:46:58.982434 line       497                             i, j,
excute 13:46:58.986394 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:58.989417 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0)]
excute 13:46:58.992409 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:58.996398 line       494                         if (i == j):
excute 13:46:59.001354 line       495                             continue
excute 13:46:59.005344 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:59.009333 line       494                         if (i == j):
excute 13:46:59.014322 line       496                         i_j_list.append((
excute 13:46:59.017313 line       497                             i, j,
excute 13:46:59.021302 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:59.024294 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0)]
excute 13:46:59.028283 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:59.032271 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:46:59.035264 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:46:59.040261 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:46:59.044270 line       494                         if (i == j):
excute 13:46:59.048229 line       496                         i_j_list.append((
excute 13:46:59.051254 line       497                             i, j,
excute 13:46:59.055243 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:59.058233 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0)]
excute 13:46:59.062191 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:46:59.065215 line       494                         if (i == j):
excute 13:46:59.069171 line       496                         i_j_list.append((
excute 13:46:59.073161 line       497                             i, j,
excute 13:46:59.076185 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:59.079178 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0)]
excute 13:46:59.083169 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:46:59.087157 line       494                         if (i == j):
excute 13:46:59.091115 line       496                         i_j_list.append((
excute 13:46:59.094136 line       497                             i, j,
excute 13:46:59.097129 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:59.100120 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0)]
excute 13:46:59.104112 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:46:59.108069 line       494                         if (i == j):
excute 13:46:59.111060 line       496                         i_j_list.append((
excute 13:46:59.114052 line       497                             i, j,
excute 13:46:59.118041 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:59.121034 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0)]
excute 13:46:59.125056 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:46:59.129013 line       494                         if (i == j):
excute 13:46:59.133003 line       496                         i_j_list.append((
excute 13:46:59.136990 line       497                             i, j,
excute 13:46:59.141978 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:59.145969 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0)]
excute 13:46:59.148961 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:46:59.153949 line       494                         if (i == j):
excute 13:46:59.157934 line       496                         i_j_list.append((
excute 13:46:59.161926 line       497                             i, j,
excute 13:46:59.165913 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:59.168907 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0)]
excute 13:46:59.171899 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:46:59.175889 line       494                         if (i == j):
excute 13:46:59.179878 line       496                         i_j_list.append((
excute 13:46:59.183867 line       497                             i, j,
excute 13:46:59.187856 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:59.191846 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0)]
excute 13:46:59.195842 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:46:59.199856 line       494                         if (i == j):
excute 13:46:59.203812 line       496                         i_j_list.append((
excute 13:46:59.206836 line       497                             i, j,
excute 13:46:59.209829 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:59.212819 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0)]
excute 13:46:59.216809 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:46:59.220789 line       494                         if (i == j):
excute 13:46:59.223790 line       496                         i_j_list.append((
excute 13:46:59.227781 line       497                             i, j,
excute 13:46:59.230771 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:46:59.233763 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 8, -2, 1), (0, 9, -2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 1)]
excute 13:46:59.237758 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:46:59.241723 line       494                         if (i == j):
excute 13:46:59.246731 line       495                             continue
excute 13:46:59.249721 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:46:59.253680 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:46:59.256670 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 1, -2, 0), (0, 2, -2, 0), (0, 3, -2, 0), (0, 4, -2, 0), (0, 5, -2, 0), (0, 6, -2, 0), (0, 7, -2, 0), (0, 9, -2, 0), (0, 8, -2, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 9, -1, 0), (7, 8, -1, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 9, 1, 0), (1, 8, 1, 1), (4, 8, 1, 1), (5, 8, 1, 1), (6, 8, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0), (2, 8, 2, 1), (9, 8, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 9, 10, 0), (3, 8, 10, 1)]
excute 13:46:59.260660 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:46:59.264649 line       505                     if (self.RELOCATE):
excute 13:46:59.268639 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:46:59.271630 line       505                     if (self.RELOCATE):
excute 13:46:59.275620 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:46:59.278643 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, -2, 0)
excute 13:46:59.282604 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:46:59.285629 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:59.289615 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.293587 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, -2, 0)
excute 13:46:59.296595 line       556                     i = i_j[0]
excute 13:46:59.300554 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:59.303577 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.307554 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, -2, 0)
excute 13:46:59.310558 line       556                     i = i_j[0]
excute 13:46:59.314551 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:59.317544 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.321529 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, -2, 0)
excute 13:46:59.325489 line       556                     i = i_j[0]
excute 13:46:59.334464 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:59.339484 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.344436 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, -2, 0)
excute 13:46:59.348427 line       556                     i = i_j[0]
excute 13:46:59.352447 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:59.356435 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.362403 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, -2, 0)
excute 13:46:59.367376 line       556                     i = i_j[0]
excute 13:46:59.370369 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:59.374358 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.379345 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, -2, 0)
excute 13:46:59.382336 line       556                     i = i_j[0]
excute 13:46:59.387323 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:59.390315 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.394304 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, -2, 0)
excute 13:46:59.398294 line       556                     i = i_j[0]
excute 13:46:59.403280 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:59.406273 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.410296 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, -2, 1)
excute 13:46:59.413287 line       556                     i = i_j[0]
excute 13:46:59.417253 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:59.420265 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.424255 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -1, 0)
excute 13:46:59.428212 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:46:59.431237 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:59.435196 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.439184 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -1, 0)
excute 13:46:59.442210 line       556                     i = i_j[0]
excute 13:46:59.446165 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:59.451184 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.455174 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -1, 0)
excute 13:46:59.459161 line       556                     i = i_j[0]
excute 13:46:59.465115 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:59.472096 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.478080 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -1, 0)
excute 13:46:59.484063 line       556                     i = i_j[0]
excute 13:46:59.488053 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:59.492041 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.496064 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -1, 0)
excute 13:46:59.500053 line       556                     i = i_j[0]
excute 13:46:59.504010 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:59.507001 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.511990 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -1, 0)
excute 13:46:59.514980 line       556                     i = i_j[0]
excute 13:46:59.518970 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:59.521961 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.525951 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -1, 0)
excute 13:46:59.528943 line       556                     i = i_j[0]
excute 13:46:59.532932 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:59.535924 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.539914 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -1, 0)
excute 13:46:59.542905 line       556                     i = i_j[0]
excute 13:46:59.546895 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:59.549887 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.555872 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -1, 1)
excute 13:46:59.558863 line       556                     i = i_j[0]
excute 13:46:59.562853 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:46:59.567838 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.572827 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 125
excute 13:46:59.576815 line       560                         if (t_tmp > self.TIME):
excute 13:46:59.579806 line       563                             if (available_vhecles[i][t] == 0):
excute 13:46:59.583796 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:46:59.586788 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 137
excute 13:46:59.590778 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:46:59.594768 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 1, 0)
excute 13:46:59.597759 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:46:59.601749 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:59.604740 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.608730 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 1, 0)
excute 13:46:59.611753 line       556                     i = i_j[0]
excute 13:46:59.616708 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:59.619701 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.624690 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 1, 0)
excute 13:46:59.627712 line       556                     i = i_j[0]
excute 13:46:59.631700 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:59.635659 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.640645 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 1, 0)
excute 13:46:59.643638 line       556                     i = i_j[0]
excute 13:46:59.648624 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:59.651614 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.656607 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 1, 0)
excute 13:46:59.659625 line       556                     i = i_j[0]
excute 13:46:59.663583 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:59.667572 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.672559 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 1, 0)
excute 13:46:59.675583 line       556                     i = i_j[0]
excute 13:46:59.679540 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:59.682564 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.686554 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 1, 0)
excute 13:46:59.689548 line       556                     i = i_j[0]
excute 13:46:59.693534 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:59.697493 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.701483 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 1, 0)
excute 13:46:59.705473 line       556                     i = i_j[0]
excute 13:46:59.709461 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:59.712484 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.716478 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 1, 0)
excute 13:46:59.720463 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:46:59.724420 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:59.727443 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.731433 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 1, 0)
excute 13:46:59.735405 line       556                     i = i_j[0]
excute 13:46:59.738414 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:59.742404 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.745398 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 1, 0)
excute 13:46:59.749386 line       556                     i = i_j[0]
excute 13:46:59.753344 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:59.757333 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.762322 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 1, 0)
excute 13:46:59.765311 line       556                     i = i_j[0]
excute 13:46:59.769300 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:59.772292 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.776282 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 1, 0)
excute 13:46:59.779273 line       556                     i = i_j[0]
excute 13:46:59.783263 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:46:59.786255 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.790244 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 1, 0)
excute 13:46:59.793236 line       556                     i = i_j[0]
excute 13:46:59.797225 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:59.800217 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.804208 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 1, 0)
excute 13:46:59.807199 line       556                     i = i_j[0]
excute 13:46:59.812187 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:59.816175 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.823182 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 1, 0)
excute 13:46:59.827145 line       556                     i = i_j[0]
excute 13:46:59.830137 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:59.834127 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.837118 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 1, 0)
excute 13:46:59.840113 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:46:59.844100 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:59.848103 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.851081 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 1, 0)
excute 13:46:59.855071 line       556                     i = i_j[0]
excute 13:46:59.859061 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:59.863052 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.867040 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 1, 0)
excute 13:46:59.870031 line       556                     i = i_j[0]
excute 13:46:59.874021 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:59.877013 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.881002 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 1, 0)
excute 13:46:59.884992 line       556                     i = i_j[0]
excute 13:46:59.889979 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:46:59.892970 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.896969 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 1, 0)
excute 13:46:59.900949 line       556                     i = i_j[0]
excute 13:46:59.904939 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:46:59.907931 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.911920 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 1, 0)
excute 13:46:59.914942 line       556                     i = i_j[0]
excute 13:46:59.918901 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:46:59.921923 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.925884 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 1, 0)
excute 13:46:59.928907 line       556                     i = i_j[0]
excute 13:46:59.932864 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:46:59.935855 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.939844 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 1, 0)
excute 13:46:59.942836 line       556                     i = i_j[0]
excute 13:46:59.946826 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:46:59.951845 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.955840 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 1, 0)
excute 13:46:59.959822 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:46:59.963783 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:46:59.968803 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.972757 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 1, 0)
excute 13:46:59.975780 line       556                     i = i_j[0]
excute 13:46:59.979740 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:46:59.982761 line       558                     if (i != j and demands[t][i][j]):
excute 13:46:59.986720 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 1, 0)
excute 13:46:59.989742 line       556                     i = i_j[0]
excute 13:46:59.993701 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:46:59.996724 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.004673 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 1, 0)
excute 13:47:00.012649 line       556                     i = i_j[0]
excute 13:47:00.016675 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:00.022622 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.026616 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 1, 0)
excute 13:47:00.030603 line       556                     i = i_j[0]
excute 13:47:00.034591 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:00.038617 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.042571 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 1, 0)
excute 13:47:00.045593 line       556                     i = i_j[0]
excute 13:47:00.049559 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:00.052575 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.057531 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 1, 0)
excute 13:47:00.060553 line       556                     i = i_j[0]
excute 13:47:00.064522 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:00.068502 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.072492 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 1, 0)
excute 13:47:00.075518 line       556                     i = i_j[0]
excute 13:47:00.079503 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:00.083460 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.086484 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 1, 1)
excute 13:47:00.090468 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:47:00.093465 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:00.097455 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.101413 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 1, 1)
excute 13:47:00.104438 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:47:00.108407 line       557                     j = i_j[1]
excute 13:47:00.112389 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.115410 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 1, 1)
excute 13:47:00.119365 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:47:00.123354 line       557                     j = i_j[1]
excute 13:47:00.127344 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.130367 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 1, 1)
excute 13:47:00.134357 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:47:00.138315 line       557                     j = i_j[1]
excute 13:47:00.142305 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.146294 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:47:00.150284 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:47:00.154274 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:00.158260 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.162253 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:47:00.165244 line       556                     i = i_j[0]
excute 13:47:00.171228 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:00.174249 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.178208 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:47:00.181231 line       556                     i = i_j[0]
excute 13:47:00.185198 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:00.188212 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.192172 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:47:00.196159 line       556                     i = i_j[0]
excute 13:47:00.199151 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:00.203140 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.206132 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:47:00.210133 line       556                     i = i_j[0]
excute 13:47:00.213113 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:00.216106 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.220095 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:47:00.224085 line       556                     i = i_j[0]
excute 13:47:00.227076 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:00.230068 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.234063 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:47:00.237050 line       556                     i = i_j[0]
excute 13:47:00.241039 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:00.248021 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.252010 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:47:00.255999 line       556                     i = i_j[0]
excute 13:47:00.260988 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:00.268964 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.272956 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 2, 0)
excute 13:47:00.276975 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:47:00.280934 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:00.284955 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.287948 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 2, 0)
excute 13:47:00.291934 line       556                     i = i_j[0]
excute 13:47:00.295928 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:00.298915 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.302875 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 2, 0)
excute 13:47:00.305897 line       556                     i = i_j[0]
excute 13:47:00.309857 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:00.312879 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.316837 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 2, 0)
excute 13:47:00.319863 line       556                     i = i_j[0]
excute 13:47:00.323849 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:00.328805 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.334789 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 2, 0)
excute 13:47:00.337780 line       556                     i = i_j[0]
excute 13:47:00.342769 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:00.346758 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.350778 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 2, 0)
excute 13:47:00.354771 line       556                     i = i_j[0]
excute 13:47:00.358757 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:00.362753 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.366738 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 2, 0)
excute 13:47:00.369730 line       556                     i = i_j[0]
excute 13:47:00.374682 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:00.379675 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.383668 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 2, 0)
excute 13:47:00.386650 line       556                     i = i_j[0]
excute 13:47:00.390639 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:00.393631 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.398618 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 2, 0)
excute 13:47:00.401609 line       556                     i = i_j[0]
excute 13:47:00.405599 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:00.408591 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.412581 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 2, 0)
excute 13:47:00.415572 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:47:00.419562 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:00.422553 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.426543 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 2, 0)
excute 13:47:00.430533 line       556                     i = i_j[0]
excute 13:47:00.433524 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:00.437514 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.440505 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 2, 0)
excute 13:47:00.443498 line       556                     i = i_j[0]
excute 13:47:00.448495 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:00.452509 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.459459 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 2, 0)
excute 13:47:00.462479 line       556                     i = i_j[0]
excute 13:47:00.467435 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:00.471423 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.475414 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 2, 0)
excute 13:47:00.479403 line       556                     i = i_j[0]
excute 13:47:00.483407 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:00.486415 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.490408 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 2, 0)
excute 13:47:00.494393 line       556                     i = i_j[0]
excute 13:47:00.498352 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:00.510324 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.515307 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 2, 0)
excute 13:47:00.518298 line       556                     i = i_j[0]
excute 13:47:00.521290 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:00.525279 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.529269 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 2, 0)
excute 13:47:00.532260 line       556                     i = i_j[0]
excute 13:47:00.535252 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:00.539241 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.543232 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 1)
excute 13:47:00.546223 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:47:00.550213 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:00.553204 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.557193 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 2, 1)
excute 13:47:00.561183 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:47:00.565186 line       557                     j = i_j[1]
excute 13:47:00.568164 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.572154 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 10, 0)
excute 13:47:00.576143 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:47:00.580133 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:00.585153 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.588144 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 10, 0)
excute 13:47:00.592132 line       556                     i = i_j[0]
excute 13:47:00.596096 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:00.599116 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.603073 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 10, 0)
excute 13:47:00.606095 line       556                     i = i_j[0]
excute 13:47:00.610053 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:00.613077 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.617066 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 10, 0)
excute 13:47:00.620059 line       556                     i = i_j[0]
excute 13:47:00.624019 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:00.629034 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.632994 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 10, 0)
excute 13:47:00.637007 line       556                     i = i_j[0]
excute 13:47:00.640004 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:00.643995 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.646988 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 10, 0)
excute 13:47:00.650943 line       556                     i = i_j[0]
excute 13:47:00.654933 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:00.657924 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.661917 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 10, 0)
excute 13:47:00.664906 line       556                     i = i_j[0]
excute 13:47:00.670924 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:00.674911 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.678900 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 10, 0)
excute 13:47:00.681896 line       556                     i = i_j[0]
excute 13:47:00.686884 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:00.689874 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.693831 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 10, 1)
excute 13:47:00.696852 line       556                     i = i_j[0]
excute 13:47:00.700842 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:00.704799 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:00.707823 line       555                 for i_j in i_j_list:
excute 13:47:00.711780 line       581             self.write_matrix(
excute 13:47:00.714804 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:47:00.718762 line       583                 result_file_path,
excute 13:47:00.721790 line       584                 mode='a'
excute 13:47:00.729733 line       488         for t in time_steps:
excute Modified var:.. t = 108
excute 13:47:00.734719 line       489             if (t != self.TIME + 1):
excute 13:47:00.740703 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:47:00.747685 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:47:00.750679 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:47:00.754666 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:00.759653 line       494                         if (i == j):
excute 13:47:00.763643 line       495                             continue
excute 13:47:00.766639 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:00.769628 line       494                         if (i == j):
excute 13:47:00.773616 line       496                         i_j_list.append((
excute 13:47:00.777606 line       497                             i, j,
excute 13:47:00.781596 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:00.788576 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0)]
excute 13:47:00.797562 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:00.805530 line       494                         if (i == j):
excute 13:47:00.813510 line       496                         i_j_list.append((
excute 13:47:00.817501 line       497                             i, j,
excute 13:47:00.821488 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:00.825478 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0)]
excute 13:47:00.828476 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:00.832458 line       494                         if (i == j):
excute 13:47:00.836450 line       496                         i_j_list.append((
excute 13:47:00.839442 line       497                             i, j,
excute 13:47:00.843432 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:00.847420 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:47:00.850413 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:00.856396 line       494                         if (i == j):
excute 13:47:00.863382 line       496                         i_j_list.append((
excute 13:47:00.867367 line       497                             i, j,
excute 13:47:00.871354 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:00.876342 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0)]
excute 13:47:00.879332 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:00.883325 line       494                         if (i == j):
excute 13:47:00.887311 line       496                         i_j_list.append((
excute 13:47:00.892300 line       497                             i, j,
excute 13:47:00.895291 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:00.898283 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0)]
excute 13:47:00.902278 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:00.905265 line       494                         if (i == j):
excute 13:47:00.909285 line       496                         i_j_list.append((
excute 13:47:00.913251 line       497                             i, j,
excute 13:47:00.916266 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:00.919257 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0)]
excute 13:47:00.922249 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:00.926209 line       494                         if (i == j):
excute 13:47:00.930198 line       496                         i_j_list.append((
excute 13:47:00.933221 line       497                             i, j,
excute 13:47:00.937190 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:00.940203 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0)]
excute 13:47:00.943193 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:00.947152 line       494                         if (i == j):
excute 13:47:00.952141 line       496                         i_j_list.append((
excute 13:47:00.956136 line       497                             i, j,
excute 13:47:00.960149 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:00.964110 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0)]
excute 13:47:00.969094 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:00.973081 line       494                         if (i == j):
excute 13:47:00.978070 line       496                         i_j_list.append((
excute 13:47:00.981093 line       497                             i, j,
excute 13:47:00.984084 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:00.988042 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0)]
excute 13:47:00.991037 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:00.997018 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:47:01.000010 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:01.003999 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:01.006991 line       494                         if (i == j):
excute 13:47:01.011980 line       496                         i_j_list.append((
excute 13:47:01.014973 line       497                             i, j,
excute 13:47:01.018960 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:01.021953 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0)]
excute 13:47:01.026941 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:01.030942 line       494                         if (i == j):
excute 13:47:01.034917 line       495                             continue
excute 13:47:01.038908 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:01.041900 line       494                         if (i == j):
excute 13:47:01.045888 line       496                         i_j_list.append((
excute 13:47:01.049879 line       497                             i, j,
excute 13:47:01.052871 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:01.055863 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0)]
excute 13:47:01.059852 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:01.063839 line       494                         if (i == j):
excute 13:47:01.067830 line       496                         i_j_list.append((
excute 13:47:01.070852 line       497                             i, j,
excute 13:47:01.073845 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:01.077836 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0)]
excute 13:47:01.080825 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:01.084818 line       494                         if (i == j):
excute 13:47:01.087807 line       496                         i_j_list.append((
excute 13:47:01.091766 line       497                             i, j,
excute 13:47:01.095755 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:01.098778 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0)]
excute 13:47:01.101740 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:01.108719 line       494                         if (i == j):
excute 13:47:01.112710 line       496                         i_j_list.append((
excute 13:47:01.115702 line       497                             i, j,
excute 13:47:01.121685 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:01.128668 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0)]
excute 13:47:01.135649 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:01.141647 line       494                         if (i == j):
excute 13:47:01.145624 line       496                         i_j_list.append((
excute 13:47:01.148614 line       497                             i, j,
excute 13:47:01.152604 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:01.156594 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0)]
excute 13:47:01.160582 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:01.164572 line       494                         if (i == j):
excute 13:47:01.169558 line       496                         i_j_list.append((
excute 13:47:01.177546 line       497                             i, j,
excute 13:47:01.180530 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:01.185515 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0)]
excute 13:47:01.189504 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:01.197484 line       494                         if (i == j):
excute 13:47:01.207469 line       496                         i_j_list.append((
excute 13:47:01.211446 line       497                             i, j,
excute 13:47:01.218427 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:01.222417 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0)]
excute 13:47:01.226437 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:01.230428 line       494                         if (i == j):
excute 13:47:01.234385 line       496                         i_j_list.append((
excute 13:47:01.249343 line       497                             i, j,
excute 13:47:01.264303 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:01.286288 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0)]
excute 13:47:01.293130 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:01.301109 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:47:01.307094 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:01.311083 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:01.315072 line       494                         if (i == j):
excute 13:47:01.321056 line       496                         i_j_list.append((
excute 13:47:01.332027 line       497                             i, j,
excute 13:47:01.345990 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:01.353969 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0)]
excute 13:47:01.360949 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:01.369925 line       494                         if (i == j):
excute 13:47:01.383888 line       496                         i_j_list.append((
excute 13:47:01.391868 line       497                             i, j,
excute 13:47:01.399845 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:01.409822 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0)]
excute 13:47:01.421787 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:01.433755 line       494                         if (i == j):
excute 13:47:01.445723 line       495                             continue
excute 13:47:01.452705 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:01.462678 line       494                         if (i == j):
excute 13:47:01.472651 line       496                         i_j_list.append((
excute 13:47:01.478635 line       497                             i, j,
excute 13:47:01.485616 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:01.494592 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:47:01.505563 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:01.515539 line       494                         if (i == j):
excute 13:47:01.525510 line       496                         i_j_list.append((
excute 13:47:01.531493 line       497                             i, j,
excute 13:47:01.537478 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:01.543461 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:47:01.548448 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:01.554433 line       494                         if (i == j):
excute 13:47:01.563408 line       496                         i_j_list.append((
excute 13:47:01.569392 line       497                             i, j,
excute 13:47:01.576374 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:01.581361 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:47:01.586347 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:01.592333 line       494                         if (i == j):
excute 13:47:01.600309 line       496                         i_j_list.append((
excute 13:47:01.605295 line       497                             i, j,
excute 13:47:01.610282 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:01.617264 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0)]
excute 13:47:01.625244 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:01.631226 line       494                         if (i == j):
excute 13:47:01.640205 line       496                         i_j_list.append((
excute 13:47:01.648181 line       497                             i, j,
excute 13:47:01.656160 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:01.662147 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:47:01.671120 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:01.679099 line       494                         if (i == j):
excute 13:47:01.687077 line       496                         i_j_list.append((
excute 13:47:01.693061 line       497                             i, j,
excute 13:47:01.700043 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:01.706027 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:47:01.712011 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:01.720987 line       494                         if (i == j):
excute 13:47:01.727969 line       496                         i_j_list.append((
excute 13:47:01.733951 line       497                             i, j,
excute 13:47:01.739936 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:01.746918 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:47:01.752901 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:01.760880 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:47:01.766864 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:01.774843 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:01.781824 line       494                         if (i == j):
excute 13:47:01.788808 line       496                         i_j_list.append((
excute 13:47:01.794789 line       497                             i, j,
excute 13:47:01.800774 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:01.806758 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0)]
excute 13:47:01.814740 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:01.820721 line       494                         if (i == j):
excute 13:47:01.827704 line       496                         i_j_list.append((
excute 13:47:01.831691 line       497                             i, j,
excute 13:47:01.835680 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:01.839670 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0)]
excute 13:47:01.842661 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:01.847650 line       494                         if (i == j):
excute 13:47:01.851645 line       496                         i_j_list.append((
excute 13:47:01.855628 line       497                             i, j,
excute 13:47:01.858620 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:01.862608 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0)]
excute 13:47:01.865600 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:01.870586 line       494                         if (i == j):
excute 13:47:01.873578 line       495                             continue
excute 13:47:01.877567 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:01.880559 line       494                         if (i == j):
excute 13:47:01.884549 line       496                         i_j_list.append((
excute 13:47:01.887541 line       497                             i, j,
excute 13:47:01.890533 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:01.894522 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0)]
excute 13:47:01.897514 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:01.901517 line       494                         if (i == j):
excute 13:47:01.904496 line       496                         i_j_list.append((
excute 13:47:01.908485 line       497                             i, j,
excute 13:47:01.911477 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:01.914469 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0)]
excute 13:47:01.917461 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:01.921452 line       494                         if (i == j):
excute 13:47:01.925441 line       496                         i_j_list.append((
excute 13:47:01.929429 line       497                             i, j,
excute 13:47:01.932421 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:01.935413 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0)]
excute 13:47:01.939403 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:01.942395 line       494                         if (i == j):
excute 13:47:01.946384 line       496                         i_j_list.append((
excute 13:47:01.951372 line       497                             i, j,
excute 13:47:01.955361 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:01.959350 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0)]
excute 13:47:01.962344 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:01.966333 line       494                         if (i == j):
excute 13:47:01.970354 line       496                         i_j_list.append((
excute 13:47:01.973344 line       497                             i, j,
excute 13:47:01.976336 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:01.980329 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0)]
excute 13:47:01.983318 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:01.987276 line       494                         if (i == j):
excute 13:47:01.990299 line       496                         i_j_list.append((
excute 13:47:01.994256 line       497                             i, j,
excute 13:47:01.997247 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.000240 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0)]
excute 13:47:02.003232 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:02.007221 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:47:02.011214 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:02.014204 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:02.018195 line       494                         if (i == j):
excute 13:47:02.022182 line       496                         i_j_list.append((
excute 13:47:02.025175 line       497                             i, j,
excute 13:47:02.030162 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.033152 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0)]
excute 13:47:02.036144 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:02.041131 line       494                         if (i == j):
excute 13:47:02.044122 line       496                         i_j_list.append((
excute 13:47:02.048112 line       497                             i, j,
excute 13:47:02.051103 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.054096 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0)]
excute 13:47:02.058086 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:02.061077 line       494                         if (i == j):
excute 13:47:02.065076 line       496                         i_j_list.append((
excute 13:47:02.068059 line       497                             i, j,
excute 13:47:02.071051 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.075040 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0)]
excute 13:47:02.078032 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:02.082023 line       494                         if (i == j):
excute 13:47:02.085013 line       496                         i_j_list.append((
excute 13:47:02.089002 line       497                             i, j,
excute 13:47:02.091994 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.094986 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0)]
excute 13:47:02.097978 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:02.101968 line       494                         if (i == j):
excute 13:47:02.105968 line       495                             continue
excute 13:47:02.108949 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:02.111941 line       494                         if (i == j):
excute 13:47:02.115932 line       496                         i_j_list.append((
excute 13:47:02.118923 line       497                             i, j,
excute 13:47:02.122911 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.125903 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0)]
excute 13:47:02.128896 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:02.134913 line       494                         if (i == j):
excute 13:47:02.139867 line       496                         i_j_list.append((
excute 13:47:02.142890 line       497                             i, j,
excute 13:47:02.146883 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.149872 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0)]
excute 13:47:02.153830 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:02.157852 line       494                         if (i == j):
excute 13:47:02.160845 line       496                         i_j_list.append((
excute 13:47:02.164833 line       497                             i, j,
excute 13:47:02.167824 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.170816 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0)]
excute 13:47:02.174806 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:02.178778 line       494                         if (i == j):
excute 13:47:02.182755 line       496                         i_j_list.append((
excute 13:47:02.186742 line       497                             i, j,
excute 13:47:02.189765 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.192759 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0)]
excute 13:47:02.195748 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:02.200704 line       494                         if (i == j):
excute 13:47:02.203695 line       496                         i_j_list.append((
excute 13:47:02.209679 line       497                             i, j,
excute 13:47:02.212671 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.216662 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0)]
excute 13:47:02.220651 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:02.223644 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:47:02.227633 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:02.231622 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:02.235612 line       494                         if (i == j):
excute 13:47:02.239601 line       496                         i_j_list.append((
excute 13:47:02.242593 line       497                             i, j,
excute 13:47:02.246583 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.249575 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0)]
excute 13:47:02.253564 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:02.258552 line       494                         if (i == j):
excute 13:47:02.262539 line       496                         i_j_list.append((
excute 13:47:02.265562 line       497                             i, j,
excute 13:47:02.268554 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.272529 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0)]
excute 13:47:02.275540 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:02.279528 line       494                         if (i == j):
excute 13:47:02.283483 line       496                         i_j_list.append((
excute 13:47:02.286506 line       497                             i, j,
excute 13:47:02.290496 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.293456 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0)]
excute 13:47:02.296448 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:02.300469 line       494                         if (i == j):
excute 13:47:02.304427 line       496                         i_j_list.append((
excute 13:47:02.308417 line       497                             i, j,
excute 13:47:02.311410 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.314432 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0)]
excute 13:47:02.318421 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:02.322381 line       494                         if (i == j):
excute 13:47:02.326371 line       496                         i_j_list.append((
excute 13:47:02.335345 line       497                             i, j,
excute 13:47:02.341330 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.346317 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0)]
excute 13:47:02.349339 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:02.353328 line       494                         if (i == j):
excute 13:47:02.358286 line       495                             continue
excute 13:47:02.361307 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:02.365296 line       494                         if (i == j):
excute 13:47:02.369287 line       496                         i_j_list.append((
excute 13:47:02.372277 line       497                             i, j,
excute 13:47:02.376271 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.379263 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0)]
excute 13:47:02.383226 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:02.387207 line       494                         if (i == j):
excute 13:47:02.391198 line       496                         i_j_list.append((
excute 13:47:02.394218 line       497                             i, j,
excute 13:47:02.397210 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.401168 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0)]
excute 13:47:02.404191 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:02.408151 line       494                         if (i == j):
excute 13:47:02.412171 line       496                         i_j_list.append((
excute 13:47:02.415153 line       497                             i, j,
excute 13:47:02.419151 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.422144 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0)]
excute 13:47:02.425135 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:02.429095 line       494                         if (i == j):
excute 13:47:02.433116 line       496                         i_j_list.append((
excute 13:47:02.436074 line       497                             i, j,
excute 13:47:02.440066 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.444069 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0)]
excute 13:47:02.447045 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:02.452033 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:47:02.456022 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:02.460011 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:02.465998 line       494                         if (i == j):
excute 13:47:02.471016 line       496                         i_j_list.append((
excute 13:47:02.474005 line       497                             i, j,
excute 13:47:02.477994 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.480986 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0)]
excute 13:47:02.484945 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:02.488934 line       494                         if (i == j):
excute 13:47:02.492951 line       496                         i_j_list.append((
excute 13:47:02.495949 line       497                             i, j,
excute 13:47:02.498943 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.502929 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0)]
excute 13:47:02.505920 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:02.509880 line       494                         if (i == j):
excute 13:47:02.514865 line       496                         i_j_list.append((
excute 13:47:02.517858 line       497                             i, j,
excute 13:47:02.521847 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.525837 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0)]
excute 13:47:02.528828 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:02.533814 line       494                         if (i == j):
excute 13:47:02.537805 line       496                         i_j_list.append((
excute 13:47:02.540826 line       497                             i, j,
excute 13:47:02.544816 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.548773 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0)]
excute 13:47:02.551799 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:02.555757 line       494                         if (i == j):
excute 13:47:02.559744 line       496                         i_j_list.append((
excute 13:47:02.562736 line       497                             i, j,
excute 13:47:02.565728 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.569718 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0)]
excute 13:47:02.572741 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:02.576700 line       494                         if (i == j):
excute 13:47:02.580690 line       496                         i_j_list.append((
excute 13:47:02.583714 line       497                             i, j,
excute 13:47:02.586708 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.590694 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0)]
excute 13:47:02.593686 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:02.597643 line       494                         if (i == j):
excute 13:47:02.601632 line       495                             continue
excute 13:47:02.604623 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:02.607616 line       494                         if (i == j):
excute 13:47:02.611621 line       496                         i_j_list.append((
excute 13:47:02.614598 line       497                             i, j,
excute 13:47:02.617589 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.621582 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0)]
excute 13:47:02.624570 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:02.628560 line       494                         if (i == j):
excute 13:47:02.632549 line       496                         i_j_list.append((
excute 13:47:02.636539 line       497                             i, j,
excute 13:47:02.640528 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.644520 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0)]
excute 13:47:02.648539 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:02.652498 line       494                         if (i == j):
excute 13:47:02.656493 line       496                         i_j_list.append((
excute 13:47:02.660476 line       497                             i, j,
excute 13:47:02.663501 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.667456 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0)]
excute 13:47:02.670448 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:02.674437 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:47:02.678426 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:02.683414 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:02.686405 line       494                         if (i == j):
excute 13:47:02.690394 line       496                         i_j_list.append((
excute 13:47:02.694384 line       497                             i, j,
excute 13:47:02.699371 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.702362 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0)]
excute 13:47:02.705354 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:02.709344 line       494                         if (i == j):
excute 13:47:02.713334 line       496                         i_j_list.append((
excute 13:47:02.719317 line       497                             i, j,
excute 13:47:02.723306 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.726299 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0)]
excute 13:47:02.730288 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:02.733280 line       494                         if (i == j):
excute 13:47:02.737270 line       496                         i_j_list.append((
excute 13:47:02.741259 line       497                             i, j,
excute 13:47:02.744251 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.751234 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0)]
excute 13:47:02.755223 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:02.760208 line       494                         if (i == j):
excute 13:47:02.763200 line       496                         i_j_list.append((
excute 13:47:02.766192 line       497                             i, j,
excute 13:47:02.770182 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.773173 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0)]
excute 13:47:02.776165 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:02.780156 line       494                         if (i == j):
excute 13:47:02.784146 line       496                         i_j_list.append((
excute 13:47:02.787136 line       497                             i, j,
excute 13:47:02.790128 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.794117 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0)]
excute 13:47:02.797109 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:02.801099 line       494                         if (i == j):
excute 13:47:02.804090 line       496                         i_j_list.append((
excute 13:47:02.808080 line       497                             i, j,
excute 13:47:02.811072 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.815062 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0)]
excute 13:47:02.819050 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:02.823042 line       494                         if (i == j):
excute 13:47:02.827030 line       496                         i_j_list.append((
excute 13:47:02.830021 line       497                             i, j,
excute 13:47:02.834012 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.839995 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0)]
excute 13:47:02.843984 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:02.848972 line       494                         if (i == j):
excute 13:47:02.855953 line       495                             continue
excute 13:47:02.860940 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:02.864929 line       494                         if (i == j):
excute 13:47:02.869915 line       496                         i_j_list.append((
excute 13:47:02.873904 line       497                             i, j,
excute 13:47:02.877895 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.882880 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0)]
excute 13:47:02.887867 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:02.892855 line       494                         if (i == j):
excute 13:47:02.896842 line       496                         i_j_list.append((
excute 13:47:02.900832 line       497                             i, j,
excute 13:47:02.904822 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.909810 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0)]
excute 13:47:02.913799 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:02.918785 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:47:02.922773 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:02.927760 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:02.932747 line       494                         if (i == j):
excute 13:47:02.938732 line       496                         i_j_list.append((
excute 13:47:02.944719 line       497                             i, j,
excute 13:47:02.950700 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.955686 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0)]
excute 13:47:02.960672 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:02.966657 line       494                         if (i == j):
excute 13:47:02.970646 line       496                         i_j_list.append((
excute 13:47:02.975632 line       497                             i, j,
excute 13:47:02.980621 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:02.983612 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0)]
excute 13:47:02.987601 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:02.993585 line       494                         if (i == j):
excute 13:47:02.998571 line       496                         i_j_list.append((
excute 13:47:03.002560 line       497                             i, j,
excute 13:47:03.005552 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:03.010539 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0)]
excute 13:47:03.015558 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:03.019515 line       494                         if (i == j):
excute 13:47:03.024503 line       496                         i_j_list.append((
excute 13:47:03.029489 line       497                             i, j,
excute 13:47:03.034476 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:03.039461 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0)]
excute 13:47:03.043454 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:03.047440 line       494                         if (i == j):
excute 13:47:03.053424 line       496                         i_j_list.append((
excute 13:47:03.058420 line       497                             i, j,
excute 13:47:03.062402 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:03.067387 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0)]
excute 13:47:03.071379 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:03.076363 line       494                         if (i == j):
excute 13:47:03.082348 line       496                         i_j_list.append((
excute 13:47:03.086339 line       497                             i, j,
excute 13:47:03.091323 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:03.095314 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0)]
excute 13:47:03.100299 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:03.105288 line       494                         if (i == j):
excute 13:47:03.111270 line       496                         i_j_list.append((
excute 13:47:03.114262 line       497                             i, j,
excute 13:47:03.118251 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:03.123251 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0)]
excute 13:47:03.128234 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:03.132239 line       494                         if (i == j):
excute 13:47:03.137206 line       496                         i_j_list.append((
excute 13:47:03.141223 line       497                             i, j,
excute 13:47:03.144213 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:03.149168 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0)]
excute 13:47:03.153157 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:03.159142 line       494                         if (i == j):
excute 13:47:03.163130 line       495                             continue
excute 13:47:03.167120 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:03.170112 line       494                         if (i == j):
excute 13:47:03.174103 line       496                         i_j_list.append((
excute 13:47:03.177094 line       497                             i, j,
excute 13:47:03.180085 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:03.184074 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0)]
excute 13:47:03.187066 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:03.191056 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:47:03.194048 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:47:03.198037 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:03.202027 line       494                         if (i == j):
excute 13:47:03.206017 line       496                         i_j_list.append((
excute 13:47:03.209009 line       497                             i, j,
excute 13:47:03.212998 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:03.216988 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0)]
excute 13:47:03.219979 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:03.223980 line       494                         if (i == j):
excute 13:47:03.230021 line       496                         i_j_list.append((
excute 13:47:03.233044 line       497                             i, j,
excute 13:47:03.237034 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:03.240024 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0)]
excute 13:47:03.244014 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:03.247975 line       494                         if (i == j):
excute 13:47:03.250995 line       496                         i_j_list.append((
excute 13:47:03.254985 line       497                             i, j,
excute 13:47:03.258960 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:03.262937 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0)]
excute 13:47:03.265956 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:03.269913 line       494                         if (i == j):
excute 13:47:03.273903 line       496                         i_j_list.append((
excute 13:47:03.277922 line       497                             i, j,
excute 13:47:03.280915 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:03.284910 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0)]
excute 13:47:03.287901 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:03.291861 line       494                         if (i == j):
excute 13:47:03.295844 line       496                         i_j_list.append((
excute 13:47:03.298867 line       497                             i, j,
excute 13:47:03.302826 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:03.305850 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0)]
excute 13:47:03.309844 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:03.313801 line       494                         if (i == j):
excute 13:47:03.317784 line       496                         i_j_list.append((
excute 13:47:03.320777 line       497                             i, j,
excute 13:47:03.324768 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:03.330751 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0)]
excute 13:47:03.336767 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:03.340725 line       494                         if (i == j):
excute 13:47:03.345712 line       496                         i_j_list.append((
excute 13:47:03.349700 line       497                             i, j,
excute 13:47:03.352725 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:03.356715 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0)]
excute 13:47:03.360703 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:03.365658 line       494                         if (i == j):
excute 13:47:03.369647 line       496                         i_j_list.append((
excute 13:47:03.373637 line       497                             i, j,
excute 13:47:03.377627 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:03.380619 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0)]
excute 13:47:03.385637 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:03.389593 line       494                         if (i == j):
excute 13:47:03.393583 line       496                         i_j_list.append((
excute 13:47:03.396607 line       497                             i, j,
excute 13:47:03.400565 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:03.403586 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0)]
excute 13:47:03.406579 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:03.411536 line       494                         if (i == j):
excute 13:47:03.415524 line       495                             continue
excute 13:47:03.418548 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:03.421539 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:47:03.425530 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0)]
excute 13:47:03.428521 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:47:03.432510 line       505                     if (self.RELOCATE):
excute 13:47:03.436501 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:47:03.440458 line       505                     if (self.RELOCATE):
excute 13:47:03.444447 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:47:03.448468 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -1, 0)
excute 13:47:03.452427 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:47:03.456416 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:03.461403 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:03.465393 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -1, 0)
excute 13:47:03.469414 line       556                     i = i_j[0]
excute 13:47:03.473370 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:03.476394 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:03.480382 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -1, 0)
excute 13:47:03.484340 line       556                     i = i_j[0]
excute 13:47:03.488330 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:03.491352 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:03.495343 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -1, 0)
excute 13:47:03.498333 line       556                     i = i_j[0]
excute 13:47:03.502292 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:03.505317 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:03.510273 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -1, 0)
excute 13:47:03.513295 line       556                     i = i_j[0]
excute 13:47:03.517252 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:03.520274 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:03.524266 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -1, 0)
excute 13:47:03.527256 line       556                     i = i_j[0]
excute 13:47:03.531245 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:03.535204 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:03.539194 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -1, 0)
excute 13:47:03.542216 line       556                     i = i_j[0]
excute 13:47:03.546177 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:03.549197 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:03.553156 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -1, 0)
excute 13:47:03.557163 line       556                     i = i_j[0]
excute 13:47:03.561136 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:03.564128 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:03.569113 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -1, 0)
excute 13:47:03.574133 line       556                     i = i_j[0]
excute 13:47:03.578108 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:03.581113 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:03.585071 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 0)
excute 13:47:03.588096 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:47:03.592053 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:03.596042 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:03.600045 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:47:03.603054 line       556                     i = i_j[0]
excute 13:47:03.607015 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:03.610035 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:03.614026 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:47:03.617983 line       556                     i = i_j[0]
excute 13:47:03.621006 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:03.624997 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:03.628963 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 0)
excute 13:47:03.631976 line       556                     i = i_j[0]
excute 13:47:03.635938 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:03.639927 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:03.644920 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 0)
excute 13:47:03.647934 line       556                     i = i_j[0]
excute 13:47:03.651893 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:03.654915 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:03.658904 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 0)
excute 13:47:03.662886 line       556                     i = i_j[0]
excute 13:47:03.666852 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:03.672836 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:03.680816 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:47:03.687796 line       556                     i = i_j[0]
excute 13:47:03.694777 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:03.700762 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:03.707743 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:47:03.712730 line       556                     i = i_j[0]
excute 13:47:03.719710 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:03.725694 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:03.730682 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 0)
excute 13:47:03.733674 line       556                     i = i_j[0]
excute 13:47:03.740656 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:03.746637 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:03.750628 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 1, 0)
excute 13:47:03.753621 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:47:03.760601 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:03.764591 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:03.768581 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 1, 0)
excute 13:47:03.771573 line       556                     i = i_j[0]
excute 13:47:03.779551 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:03.783539 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:03.787529 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 1, 0)
excute 13:47:03.791518 line       556                     i = i_j[0]
excute 13:47:03.795507 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:03.802492 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:03.808475 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 1, 0)
excute 13:47:03.814456 line       556                     i = i_j[0]
excute 13:47:03.818448 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:03.822436 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:03.829418 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 1, 0)
excute 13:47:03.832409 line       556                     i = i_j[0]
excute 13:47:03.837396 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:03.841385 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:03.848366 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 1, 0)
excute 13:47:03.854350 line       556                     i = i_j[0]
excute 13:47:03.860334 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:03.864323 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:03.868314 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 1, 0)
excute 13:47:03.871305 line       556                     i = i_j[0]
excute 13:47:03.875302 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:03.880283 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:03.885269 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 1, 0)
excute 13:47:03.888259 line       556                     i = i_j[0]
excute 13:47:03.892250 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:03.896239 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:03.900228 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 1, 0)
excute 13:47:03.904217 line       556                     i = i_j[0]
excute 13:47:03.908208 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:03.911198 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:03.915188 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 1, 0)
excute 13:47:03.919178 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:47:03.923175 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:03.927156 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:03.931146 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 1, 0)
excute 13:47:03.934168 line       556                     i = i_j[0]
excute 13:47:03.938127 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:03.941120 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:03.946108 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 1, 0)
excute 13:47:03.950127 line       556                     i = i_j[0]
excute 13:47:03.954085 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:03.957107 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:03.962069 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 1, 0)
excute 13:47:03.968047 line       556                     i = i_j[0]
excute 13:47:03.972035 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:03.977024 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:03.981014 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 1, 0)
excute 13:47:03.985002 line       556                     i = i_j[0]
excute 13:47:03.988992 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:03.993978 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:03.997967 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 1, 0)
excute 13:47:04.000992 line       556                     i = i_j[0]
excute 13:47:04.004979 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:04.008938 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.012928 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 1, 0)
excute 13:47:04.015951 line       556                     i = i_j[0]
excute 13:47:04.019942 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:04.023898 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.026921 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 1, 0)
excute 13:47:04.030910 line       556                     i = i_j[0]
excute 13:47:04.034869 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:04.037892 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.041850 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 1, 0)
excute 13:47:04.044872 line       556                     i = i_j[0]
excute 13:47:04.048832 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:04.051853 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.055845 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 1, 0)
excute 13:47:04.059832 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:47:04.063792 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:04.067781 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.071770 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 1, 0)
excute 13:47:04.074793 line       556                     i = i_j[0]
excute 13:47:04.078751 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:04.081773 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.086730 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 1, 0)
excute 13:47:04.089723 line       556                     i = i_j[0]
excute 13:47:04.093711 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:04.097701 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.101690 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 1, 0)
excute 13:47:04.105680 line       556                     i = i_j[0]
excute 13:47:04.109669 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:04.113658 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.118646 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 1, 0)
excute 13:47:04.121638 line       556                     i = i_j[0]
excute 13:47:04.125631 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:04.129616 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.137594 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 1, 0)
excute 13:47:04.144575 line       556                     i = i_j[0]
excute 13:47:04.148566 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:04.152554 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.157541 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 1, 0)
excute 13:47:04.160534 line       556                     i = i_j[0]
excute 13:47:04.163525 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:04.167514 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.171504 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 1, 0)
excute 13:47:04.175494 line       556                     i = i_j[0]
excute 13:47:04.180478 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:04.184470 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.189456 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 1, 0)
excute 13:47:04.193446 line       556                     i = i_j[0]
excute 13:47:04.197435 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:04.201424 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.205412 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 1, 0)
excute 13:47:04.208406 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:47:04.212394 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:04.216383 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.220374 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 1, 0)
excute 13:47:04.223364 line       556                     i = i_j[0]
excute 13:47:04.228352 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:04.231344 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.235333 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 1, 0)
excute 13:47:04.239322 line       556                     i = i_j[0]
excute 13:47:04.243312 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:04.247301 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.251292 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 1, 0)
excute 13:47:04.255281 line       556                     i = i_j[0]
excute 13:47:04.260266 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:04.263258 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.267247 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 1, 0)
excute 13:47:04.270240 line       556                     i = i_j[0]
excute 13:47:04.274229 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:04.278219 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.283208 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 1, 0)
excute 13:47:04.286197 line       556                     i = i_j[0]
excute 13:47:04.292182 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:04.295172 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.299162 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 1, 0)
excute 13:47:04.302154 line       556                     i = i_j[0]
excute 13:47:04.306143 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:04.309135 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.313125 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 1, 0)
excute 13:47:04.316116 line       556                     i = i_j[0]
excute 13:47:04.320106 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:04.324095 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.333071 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 1, 0)
excute 13:47:04.339058 line       556                     i = i_j[0]
excute 13:47:04.344043 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:04.348062 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.352019 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:47:04.356040 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:47:04.360000 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:04.364986 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.368975 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:47:04.372971 line       556                     i = i_j[0]
excute 13:47:04.376963 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:04.380943 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.384934 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:47:04.390917 line       556                     i = i_j[0]
excute 13:47:04.398898 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:04.401886 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.406874 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:47:04.409866 line       556                     i = i_j[0]
excute 13:47:04.413856 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:04.417846 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.421836 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:47:04.424825 line       556                     i = i_j[0]
excute 13:47:04.428816 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:04.432805 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.437826 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:47:04.440814 line       556                     i = i_j[0]
excute 13:47:04.444773 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:04.448762 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.452752 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:47:04.456741 line       556                     i = i_j[0]
excute 13:47:04.460730 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:04.463722 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.467712 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:47:04.470704 line       556                     i = i_j[0]
excute 13:47:04.474693 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:04.478681 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.482673 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:47:04.486665 line       556                     i = i_j[0]
excute 13:47:04.489654 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:04.493643 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.498660 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 2, 0)
excute 13:47:04.502651 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:47:04.506612 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:04.510610 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.514590 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 2, 0)
excute 13:47:04.517609 line       556                     i = i_j[0]
excute 13:47:04.521599 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:04.525567 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.528580 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 2, 0)
excute 13:47:04.532568 line       556                     i = i_j[0]
excute 13:47:04.536528 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:04.540516 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.543509 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 2, 0)
excute 13:47:04.547499 line       556                     i = i_j[0]
excute 13:47:04.551489 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:04.555478 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.560465 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 2, 0)
excute 13:47:04.563456 line       556                     i = i_j[0]
excute 13:47:04.568444 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:04.571434 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.576421 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 2, 0)
excute 13:47:04.579444 line       556                     i = i_j[0]
excute 13:47:04.583402 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:04.586424 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.601385 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 2, 0)
excute 13:47:04.604403 line       556                     i = i_j[0]
excute 13:47:04.608393 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:04.612352 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.615342 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 2, 0)
excute 13:47:04.620362 line       556                     i = i_j[0]
excute 13:47:04.624350 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:04.627343 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.631303 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 2, 0)
excute 13:47:04.635291 line       556                     i = i_j[0]
excute 13:47:04.639279 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:04.643268 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.647283 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 2, 0)
excute 13:47:04.650282 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:47:04.654241 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:04.658231 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.662219 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 2, 0)
excute 13:47:04.665209 line       556                     i = i_j[0]
excute 13:47:04.669199 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:04.673188 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.677177 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 2, 0)
excute 13:47:04.683161 line       556                     i = i_j[0]
excute 13:47:04.687151 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:04.691140 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.697124 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 2, 0)
excute 13:47:04.704108 line       556                     i = i_j[0]
excute 13:47:04.710089 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:04.716073 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.720063 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 2, 0)
excute 13:47:04.724052 line       556                     i = i_j[0]
excute 13:47:04.731033 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:04.738015 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.742005 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 2, 0)
excute 13:47:04.744996 line       556                     i = i_j[0]
excute 13:47:04.750980 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:04.756964 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.761951 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 2, 0)
excute 13:47:04.765940 line       556                     i = i_j[0]
excute 13:47:04.771924 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:04.777908 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.781898 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 2, 0)
excute 13:47:04.784889 line       556                     i = i_j[0]
excute 13:47:04.791871 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:04.797855 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.801845 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 2, 0)
excute 13:47:04.807829 line       556                     i = i_j[0]
excute 13:47:04.811818 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:04.815806 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.822789 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 10, 0)
excute 13:47:04.829770 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:47:04.836751 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:04.843733 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.850714 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 10, 0)
excute 13:47:04.855700 line       556                     i = i_j[0]
excute 13:47:04.862681 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:04.868665 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.872655 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 10, 0)
excute 13:47:04.878639 line       556                     i = i_j[0]
excute 13:47:04.882628 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:04.886618 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.892601 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 10, 0)
excute 13:47:04.898585 line       556                     i = i_j[0]
excute 13:47:04.902575 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:04.905567 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.912548 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 10, 0)
excute 13:47:04.915540 line       556                     i = i_j[0]
excute 13:47:04.922521 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:04.928505 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.932494 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 10, 0)
excute 13:47:04.936486 line       556                     i = i_j[0]
excute 13:47:04.941473 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:04.944465 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.950455 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 10, 0)
excute 13:47:04.953440 line       556                     i = i_j[0]
excute 13:47:04.957430 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:04.961419 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.965407 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 10, 0)
excute 13:47:04.968400 line       556                     i = i_j[0]
excute 13:47:04.972391 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:04.976379 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.980370 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 10, 0)
excute 13:47:04.983360 line       556                     i = i_j[0]
excute 13:47:04.987359 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:04.990373 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:04.995329 line       555                 for i_j in i_j_list:
excute 13:47:04.998353 line       581             self.write_matrix(
excute 13:47:05.002308 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:47:05.005300 line       583                 result_file_path,
excute 13:47:05.009290 line       584                 mode='a'
excute 13:47:05.016288 line       488         for t in time_steps:
excute Modified var:.. t = 109
excute 13:47:05.020260 line       489             if (t != self.TIME + 1):
excute 13:47:05.024251 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:47:05.028272 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:47:05.033227 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:47:05.037215 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:05.041207 line       494                         if (i == j):
excute 13:47:05.045197 line       495                             continue
excute 13:47:05.048186 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:05.052177 line       494                         if (i == j):
excute 13:47:05.056168 line       496                         i_j_list.append((
excute 13:47:05.060154 line       497                             i, j,
excute 13:47:05.066139 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:05.070127 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0)]
excute 13:47:05.075114 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:05.087084 line       494                         if (i == j):
excute 13:47:05.095136 line       496                         i_j_list.append((
excute 13:47:05.099050 line       497                             i, j,
excute 13:47:05.102046 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:05.105034 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0)]
excute 13:47:05.109025 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:05.115008 line       494                         if (i == j):
excute 13:47:05.119994 line       496                         i_j_list.append((
excute 13:47:05.123984 line       497                             i, j,
excute 13:47:05.126976 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:05.130969 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:47:05.135955 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:05.145929 line       494                         if (i == j):
excute 13:47:05.149917 line       496                         i_j_list.append((
excute 13:47:05.153904 line       497                             i, j,
excute 13:47:05.156896 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:05.161890 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0)]
excute 13:47:05.164875 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:05.168865 line       494                         if (i == j):
excute 13:47:05.172862 line       496                         i_j_list.append((
excute 13:47:05.175845 line       497                             i, j,
excute 13:47:05.179833 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:05.182826 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0)]
excute 13:47:05.185818 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:05.189807 line       494                         if (i == j):
excute 13:47:05.193796 line       496                         i_j_list.append((
excute 13:47:05.196789 line       497                             i, j,
excute 13:47:05.200778 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:05.203770 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0)]
excute 13:47:05.206762 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:05.210751 line       494                         if (i == j):
excute 13:47:05.214742 line       496                         i_j_list.append((
excute 13:47:05.218729 line       497                             i, j,
excute 13:47:05.221722 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:05.225711 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0)]
excute 13:47:05.228704 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:05.232692 line       494                         if (i == j):
excute 13:47:05.235685 line       496                         i_j_list.append((
excute 13:47:05.239675 line       497                             i, j,
excute 13:47:05.242679 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:05.245659 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0)]
excute 13:47:05.248650 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:05.252639 line       494                         if (i == j):
excute 13:47:05.256628 line       496                         i_j_list.append((
excute 13:47:05.260618 line       497                             i, j,
excute 13:47:05.263609 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:05.266602 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1)]
excute 13:47:05.269594 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:05.273583 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:47:05.276575 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:05.280565 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:05.283556 line       494                         if (i == j):
excute 13:47:05.287548 line       496                         i_j_list.append((
excute 13:47:05.290538 line       497                             i, j,
excute 13:47:05.293530 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:05.297519 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0)]
excute 13:47:05.303507 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:05.311484 line       494                         if (i == j):
excute 13:47:05.316470 line       495                             continue
excute 13:47:05.321458 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:05.324448 line       494                         if (i == j):
excute 13:47:05.331430 line       496                         i_j_list.append((
excute 13:47:05.338412 line       497                             i, j,
excute 13:47:05.342399 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:05.347386 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0)]
excute 13:47:05.351376 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:05.355366 line       494                         if (i == j):
excute 13:47:05.359355 line       496                         i_j_list.append((
excute 13:47:05.362347 line       497                             i, j,
excute 13:47:05.366336 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:05.369328 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0)]
excute 13:47:05.372319 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:05.376309 line       494                         if (i == j):
excute 13:47:05.380298 line       496                         i_j_list.append((
excute 13:47:05.384287 line       497                             i, j,
excute 13:47:05.388277 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:05.391269 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0)]
excute 13:47:05.394261 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:05.398252 line       494                         if (i == j):
excute 13:47:05.402240 line       496                         i_j_list.append((
excute 13:47:05.405264 line       497                             i, j,
excute 13:47:05.408255 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:05.411247 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0)]
excute 13:47:05.415237 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:05.419196 line       494                         if (i == j):
excute 13:47:05.424182 line       496                         i_j_list.append((
excute 13:47:05.427172 line       497                             i, j,
excute 13:47:05.430197 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:05.434154 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0)]
excute 13:47:05.437179 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:05.441135 line       494                         if (i == j):
excute 13:47:05.444159 line       496                         i_j_list.append((
excute 13:47:05.448150 line       497                             i, j,
excute 13:47:05.451141 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:05.455130 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0)]
excute 13:47:05.458123 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:05.463079 line       494                         if (i == j):
excute 13:47:05.469063 line       496                         i_j_list.append((
excute 13:47:05.473082 line       497                             i, j,
excute 13:47:05.476073 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:05.480064 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0)]
excute 13:47:05.483055 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:05.487014 line       494                         if (i == j):
excute 13:47:05.491003 line       496                         i_j_list.append((
excute 13:47:05.495000 line       497                             i, j,
excute 13:47:05.498982 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:05.502004 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1)]
excute 13:47:05.505962 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:05.509985 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:47:05.512943 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:05.516933 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:05.519927 line       494                         if (i == j):
excute 13:47:05.525919 line       496                         i_j_list.append((
excute 13:47:05.528900 line       497                             i, j,
excute 13:47:05.531892 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:05.534884 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0)]
excute 13:47:05.538875 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:05.541865 line       494                         if (i == j):
excute 13:47:05.545855 line       496                         i_j_list.append((
excute 13:47:05.548880 line       497                             i, j,
excute 13:47:05.551872 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:05.555861 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0)]
excute 13:47:05.559851 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:05.563807 line       494                         if (i == j):
excute 13:47:05.566832 line       495                             continue
excute 13:47:05.569827 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:05.573815 line       494                         if (i == j):
excute 13:47:05.577771 line       496                         i_j_list.append((
excute 13:47:05.580795 line       497                             i, j,
excute 13:47:05.583786 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:05.586777 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:47:05.590747 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:05.594725 line       494                         if (i == j):
excute 13:47:05.598714 line       496                         i_j_list.append((
excute 13:47:05.601705 line       497                             i, j,
excute 13:47:05.604698 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:05.607690 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:47:05.611693 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:05.614671 line       494                         if (i == j):
excute 13:47:05.618660 line       496                         i_j_list.append((
excute 13:47:05.621653 line       497                             i, j,
excute 13:47:05.626674 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:05.629631 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:47:05.632623 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:05.637610 line       494                         if (i == j):
excute 13:47:05.641599 line       496                         i_j_list.append((
excute 13:47:05.644591 line       497                             i, j,
excute 13:47:05.647583 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:05.650575 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0)]
excute 13:47:05.653567 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:05.658554 line       494                         if (i == j):
excute 13:47:05.661546 line       496                         i_j_list.append((
excute 13:47:05.666534 line       497                             i, j,
excute 13:47:05.670524 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:05.676506 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:47:05.682490 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:05.686480 line       494                         if (i == j):
excute 13:47:05.690480 line       496                         i_j_list.append((
excute 13:47:05.693462 line       497                             i, j,
excute 13:47:05.698450 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:05.704431 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:47:05.707425 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:05.714405 line       494                         if (i == j):
excute 13:47:05.718394 line       496                         i_j_list.append((
excute 13:47:05.722383 line       497                             i, j,
excute 13:47:05.725377 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:05.732358 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1)]
excute 13:47:05.739341 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:05.746320 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:47:05.752305 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:05.759285 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:05.765268 line       494                         if (i == j):
excute 13:47:05.769258 line       496                         i_j_list.append((
excute 13:47:05.772252 line       497                             i, j,
excute 13:47:05.778234 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:05.781227 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0)]
excute 13:47:05.787210 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:05.791201 line       494                         if (i == j):
excute 13:47:05.795189 line       496                         i_j_list.append((
excute 13:47:05.799178 line       497                             i, j,
excute 13:47:05.804165 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:05.807157 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0)]
excute 13:47:05.813142 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:05.817130 line       494                         if (i == j):
excute 13:47:05.823115 line       496                         i_j_list.append((
excute 13:47:05.830097 line       497                             i, j,
excute 13:47:05.837077 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:05.844058 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0)]
excute 13:47:05.850042 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:05.854034 line       494                         if (i == j):
excute 13:47:05.858022 line       495                             continue
excute 13:47:05.862010 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:05.866000 line       494                         if (i == j):
excute 13:47:05.869991 line       496                         i_j_list.append((
excute 13:47:05.873978 line       497                             i, j,
excute 13:47:05.876970 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:05.879962 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0)]
excute 13:47:05.883952 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:05.888938 line       494                         if (i == j):
excute 13:47:05.891930 line       496                         i_j_list.append((
excute 13:47:05.895919 line       497                             i, j,
excute 13:47:05.898912 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:05.901903 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0)]
excute 13:47:05.905892 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:05.909882 line       494                         if (i == j):
excute 13:47:05.913872 line       496                         i_j_list.append((
excute 13:47:05.916863 line       497                             i, j,
excute 13:47:05.919855 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:05.922847 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0)]
excute 13:47:05.926838 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:05.930828 line       494                         if (i == j):
excute 13:47:05.936811 line       496                         i_j_list.append((
excute 13:47:05.939802 line       497                             i, j,
excute 13:47:05.943791 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:05.948780 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0)]
excute 13:47:05.951770 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:05.955762 line       494                         if (i == j):
excute 13:47:05.959749 line       496                         i_j_list.append((
excute 13:47:05.963738 line       497                             i, j,
excute 13:47:05.966730 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:05.970721 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0)]
excute 13:47:05.975706 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:05.979695 line       494                         if (i == j):
excute 13:47:05.984683 line       496                         i_j_list.append((
excute 13:47:05.987707 line       497                             i, j,
excute 13:47:05.991665 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:05.996650 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1)]
excute 13:47:06.000671 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:06.004630 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:47:06.007622 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:06.012608 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:06.015631 line       494                         if (i == j):
excute 13:47:06.019591 line       496                         i_j_list.append((
excute 13:47:06.022614 line       497                             i, j,
excute 13:47:06.026586 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:06.029595 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0)]
excute 13:47:06.033553 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:06.037544 line       494                         if (i == j):
excute 13:47:06.042528 line       496                         i_j_list.append((
excute 13:47:06.045519 line       497                             i, j,
excute 13:47:06.048511 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:06.051503 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0)]
excute 13:47:06.055494 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:06.059496 line       494                         if (i == j):
excute 13:47:06.063471 line       496                         i_j_list.append((
excute 13:47:06.066463 line       497                             i, j,
excute 13:47:06.069455 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:06.073444 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0)]
excute 13:47:06.076437 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:06.080427 line       494                         if (i == j):
excute 13:47:06.084415 line       496                         i_j_list.append((
excute 13:47:06.088405 line       497                             i, j,
excute 13:47:06.091396 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:06.094389 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0)]
excute 13:47:06.098379 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:06.102368 line       494                         if (i == j):
excute 13:47:06.106358 line       495                             continue
excute 13:47:06.109348 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:06.112341 line       494                         if (i == j):
excute 13:47:06.116330 line       496                         i_j_list.append((
excute 13:47:06.119322 line       497                             i, j,
excute 13:47:06.122314 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:06.125306 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0)]
excute 13:47:06.129296 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:06.133287 line       494                         if (i == j):
excute 13:47:06.137275 line       496                         i_j_list.append((
excute 13:47:06.140266 line       497                             i, j,
excute 13:47:06.145252 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:06.148245 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0)]
excute 13:47:06.151237 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:06.156224 line       494                         if (i == j):
excute 13:47:06.160213 line       496                         i_j_list.append((
excute 13:47:06.163205 line       497                             i, j,
excute 13:47:06.167194 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:06.171185 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0)]
excute 13:47:06.174175 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:06.178167 line       494                         if (i == j):
excute 13:47:06.182156 line       496                         i_j_list.append((
excute 13:47:06.186144 line       497                             i, j,
excute 13:47:06.189135 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:06.193125 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0)]
excute 13:47:06.199109 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:06.203099 line       494                         if (i == j):
excute 13:47:06.207089 line       496                         i_j_list.append((
excute 13:47:06.210080 line       497                             i, j,
excute 13:47:06.213072 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:06.217060 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1)]
excute 13:47:06.220052 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:06.224044 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:47:06.227035 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:06.231026 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:06.234047 line       494                         if (i == j):
excute 13:47:06.238006 line       496                         i_j_list.append((
excute 13:47:06.241028 line       497                             i, j,
excute 13:47:06.244988 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:06.248977 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0)]
excute 13:47:06.252964 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:06.256956 line       494                         if (i == j):
excute 13:47:06.260981 line       496                         i_j_list.append((
excute 13:47:06.263967 line       497                             i, j,
excute 13:47:06.267957 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:06.270948 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0)]
excute 13:47:06.273941 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:06.278901 line       494                         if (i == j):
excute 13:47:06.282887 line       496                         i_j_list.append((
excute 13:47:06.285910 line       497                             i, j,
excute 13:47:06.288900 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:06.291893 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0)]
excute 13:47:06.295882 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:06.299841 line       494                         if (i == j):
excute 13:47:06.302866 line       496                         i_j_list.append((
excute 13:47:06.306821 line       497                             i, j,
excute 13:47:06.309847 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:06.312836 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0)]
excute 13:47:06.315829 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:06.320784 line       494                         if (i == j):
excute 13:47:06.327767 line       496                         i_j_list.append((
excute 13:47:06.338738 line       497                             i, j,
excute 13:47:06.343723 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:06.350705 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0)]
excute 13:47:06.354693 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:06.359680 line       494                         if (i == j):
excute 13:47:06.367662 line       495                             continue
excute 13:47:06.370656 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:06.375641 line       494                         if (i == j):
excute 13:47:06.380624 line       496                         i_j_list.append((
excute 13:47:06.384622 line       497                             i, j,
excute 13:47:06.389622 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:06.395585 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0)]
excute 13:47:06.399574 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:06.405557 line       494                         if (i == j):
excute 13:47:06.410545 line       496                         i_j_list.append((
excute 13:47:06.413537 line       497                             i, j,
excute 13:47:06.422543 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:06.426501 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0)]
excute 13:47:06.430494 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:06.435481 line       494                         if (i == j):
excute 13:47:06.443470 line       496                         i_j_list.append((
excute 13:47:06.448443 line       497                             i, j,
excute 13:47:06.457419 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:06.465397 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0)]
excute 13:47:06.471382 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:06.478363 line       494                         if (i == j):
excute 13:47:06.485344 line       496                         i_j_list.append((
excute 13:47:06.493324 line       497                             i, j,
excute 13:47:06.499307 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:06.507285 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1)]
excute 13:47:06.514268 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:06.521255 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:47:06.526236 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:06.532219 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:06.537205 line       494                         if (i == j):
excute 13:47:06.543190 line       496                         i_j_list.append((
excute 13:47:06.551170 line       497                             i, j,
excute 13:47:06.556157 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:06.562140 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1), (6, 0, 1, 0)]
excute 13:47:06.568123 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:06.575104 line       494                         if (i == j):
excute 13:47:06.583084 line       496                         i_j_list.append((
excute 13:47:06.592060 line       497                             i, j,
excute 13:47:06.599042 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:06.605025 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1), (6, 0, 1, 0), (6, 1, 1, 0)]
excute 13:47:06.610013 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:06.618987 line       494                         if (i == j):
excute 13:47:06.624970 line       496                         i_j_list.append((
excute 13:47:06.630955 line       497                             i, j,
excute 13:47:06.638935 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:06.644920 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0)]
excute 13:47:06.650903 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:06.656888 line       494                         if (i == j):
excute 13:47:06.665862 line       496                         i_j_list.append((
excute 13:47:06.674838 line       497                             i, j,
excute 13:47:06.681819 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:06.687803 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0)]
excute 13:47:06.695781 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:06.702765 line       494                         if (i == j):
excute 13:47:06.708748 line       496                         i_j_list.append((
excute 13:47:06.714731 line       497                             i, j,
excute 13:47:06.722709 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:06.730689 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0)]
excute 13:47:06.736674 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:06.742656 line       494                         if (i == j):
excute 13:47:06.748641 line       496                         i_j_list.append((
excute 13:47:06.754625 line       497                             i, j,
excute 13:47:06.761606 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:06.768587 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0)]
excute 13:47:06.776566 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:06.781554 line       494                         if (i == j):
excute 13:47:06.787538 line       495                             continue
excute 13:47:06.791527 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:06.794518 line       494                         if (i == j):
excute 13:47:06.798507 line       496                         i_j_list.append((
excute 13:47:06.801498 line       497                             i, j,
excute 13:47:06.805488 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:06.808479 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0)]
excute 13:47:06.812470 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:06.815461 line       494                         if (i == j):
excute 13:47:06.820448 line       496                         i_j_list.append((
excute 13:47:06.824438 line       497                             i, j,
excute 13:47:06.827430 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:06.830421 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0)]
excute 13:47:06.833413 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:06.837403 line       494                         if (i == j):
excute 13:47:06.841393 line       496                         i_j_list.append((
excute 13:47:06.844416 line       497                             i, j,
excute 13:47:06.848373 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:06.851397 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 1)]
excute 13:47:06.854389 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:06.858379 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:47:06.862375 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:06.866325 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:06.870317 line       494                         if (i == j):
excute 13:47:06.873306 line       496                         i_j_list.append((
excute 13:47:06.877295 line       497                             i, j,
excute 13:47:06.880288 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:06.883280 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 1), (7, 0, -1, 0)]
excute 13:47:06.887269 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:06.891258 line       494                         if (i == j):
excute 13:47:06.895249 line       496                         i_j_list.append((
excute 13:47:06.898268 line       497                             i, j,
excute 13:47:06.901264 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:06.905254 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 1), (7, 0, -1, 0), (7, 1, -1, 0)]
excute 13:47:06.908245 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:06.912238 line       494                         if (i == j):
excute 13:47:06.916192 line       496                         i_j_list.append((
excute 13:47:06.919184 line       497                             i, j,
excute 13:47:06.922176 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:06.926165 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0)]
excute 13:47:06.929157 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:06.933146 line       494                         if (i == j):
excute 13:47:06.937136 line       496                         i_j_list.append((
excute 13:47:06.940130 line       497                             i, j,
excute 13:47:06.943120 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:06.948107 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0)]
excute 13:47:06.951098 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:06.955088 line       494                         if (i == j):
excute 13:47:06.959077 line       496                         i_j_list.append((
excute 13:47:06.964066 line       497                             i, j,
excute 13:47:06.969051 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:06.974038 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0)]
excute 13:47:06.977066 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:06.982018 line       494                         if (i == j):
excute 13:47:06.986008 line       496                         i_j_list.append((
excute 13:47:06.989032 line       497                             i, j,
excute 13:47:06.993985 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:06.997007 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0)]
excute 13:47:07.000999 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:07.004988 line       494                         if (i == j):
excute 13:47:07.008979 line       496                         i_j_list.append((
excute 13:47:07.011968 line       497                             i, j,
excute 13:47:07.015926 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:07.018949 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0)]
excute 13:47:07.021941 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:07.025900 line       494                         if (i == j):
excute 13:47:07.029889 line       495                             continue
excute 13:47:07.032912 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:07.035904 line       494                         if (i == j):
excute 13:47:07.039893 line       496                         i_j_list.append((
excute 13:47:07.043867 line       497                             i, j,
excute 13:47:07.046842 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:07.049835 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0)]
excute 13:47:07.053824 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:07.057813 line       494                         if (i == j):
excute 13:47:07.061803 line       496                         i_j_list.append((
excute 13:47:07.064794 line       497                             i, j,
excute 13:47:07.067786 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:07.071776 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1)]
excute 13:47:07.077761 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:07.080785 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:47:07.084773 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:07.087765 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:07.091755 line       494                         if (i == j):
excute 13:47:07.095725 line       496                         i_j_list.append((
excute 13:47:07.098736 line       497                             i, j,
excute 13:47:07.101727 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:07.105685 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 2, 0)]
excute 13:47:07.108709 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:07.112668 line       494                         if (i == j):
excute 13:47:07.115691 line       496                         i_j_list.append((
excute 13:47:07.119679 line       497                             i, j,
excute 13:47:07.122671 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:07.125664 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 2, 0), (8, 1, 2, 0)]
excute 13:47:07.129653 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:07.133626 line       494                         if (i == j):
excute 13:47:07.137602 line       496                         i_j_list.append((
excute 13:47:07.140624 line       497                             i, j,
excute 13:47:07.144615 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:07.147606 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0)]
excute 13:47:07.150599 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:07.155553 line       494                         if (i == j):
excute 13:47:07.158576 line       496                         i_j_list.append((
excute 13:47:07.162565 line       497                             i, j,
excute 13:47:07.166524 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:07.169516 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0)]
excute 13:47:07.173504 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:07.177497 line       494                         if (i == j):
excute 13:47:07.181485 line       496                         i_j_list.append((
excute 13:47:07.185471 line       497                             i, j,
excute 13:47:07.188464 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:07.191456 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0)]
excute 13:47:07.195446 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:07.199435 line       494                         if (i == j):
excute 13:47:07.203435 line       496                         i_j_list.append((
excute 13:47:07.206451 line       497                             i, j,
excute 13:47:07.210406 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:07.213429 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0)]
excute 13:47:07.216422 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:07.220378 line       494                         if (i == j):
excute 13:47:07.224368 line       496                         i_j_list.append((
excute 13:47:07.227360 line       497                             i, j,
excute 13:47:07.231350 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:07.234341 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0)]
excute 13:47:07.237333 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:07.241322 line       494                         if (i == j):
excute 13:47:07.245325 line       496                         i_j_list.append((
excute 13:47:07.248304 line       497                             i, j,
excute 13:47:07.252293 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:07.255287 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0)]
excute 13:47:07.259275 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:07.263264 line       494                         if (i == j):
excute 13:47:07.267253 line       495                             continue
excute 13:47:07.270245 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:07.273238 line       494                         if (i == j):
excute 13:47:07.278224 line       496                         i_j_list.append((
excute 13:47:07.282214 line       497                             i, j,
excute 13:47:07.286235 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:07.290224 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 1)]
excute 13:47:07.293186 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:07.297173 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:47:07.300197 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:07.304188 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:07.308144 line       494                         if (i == j):
excute 13:47:07.311168 line       496                         i_j_list.append((
excute 13:47:07.315128 line       497                             i, j,
excute 13:47:07.318149 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:07.322108 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 1), (9, 0, 1, 0)]
excute 13:47:07.327095 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:07.337073 line       494                         if (i == j):
excute 13:47:07.342053 line       496                         i_j_list.append((
excute 13:47:07.346044 line       497                             i, j,
excute 13:47:07.351030 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:07.355021 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 1), (9, 0, 1, 0), (9, 1, 1, 0)]
excute 13:47:07.359009 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:07.363013 line       494                         if (i == j):
excute 13:47:07.366988 line       496                         i_j_list.append((
excute 13:47:07.370011 line       497                             i, j,
excute 13:47:07.373996 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:07.376992 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 1), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0)]
excute 13:47:07.380951 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:07.386934 line       494                         if (i == j):
excute 13:47:07.390923 line       496                         i_j_list.append((
excute 13:47:07.393915 line       497                             i, j,
excute 13:47:07.397904 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:07.400896 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 1), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0)]
excute 13:47:07.404886 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:07.407878 line       494                         if (i == j):
excute 13:47:07.411867 line       496                         i_j_list.append((
excute 13:47:07.415857 line       497                             i, j,
excute 13:47:07.418848 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:07.421840 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 1), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0)]
excute 13:47:07.425830 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:07.428821 line       494                         if (i == j):
excute 13:47:07.432810 line       496                         i_j_list.append((
excute 13:47:07.435803 line       497                             i, j,
excute 13:47:07.439830 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:07.443813 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 1), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0)]
excute 13:47:07.447804 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:07.452757 line       494                         if (i == j):
excute 13:47:07.456779 line       496                         i_j_list.append((
excute 13:47:07.459771 line       497                             i, j,
excute 13:47:07.463739 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:07.466752 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 1), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0)]
excute 13:47:07.469744 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:07.473702 line       494                         if (i == j):
excute 13:47:07.477691 line       496                         i_j_list.append((
excute 13:47:07.480718 line       497                             i, j,
excute 13:47:07.484707 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:07.489660 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 1), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0)]
excute 13:47:07.492651 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:07.497639 line       494                         if (i == j):
excute 13:47:07.500662 line       496                         i_j_list.append((
excute 13:47:07.504652 line       497                             i, j,
excute 13:47:07.507642 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:07.511634 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 1), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 1), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0)]
excute 13:47:07.515590 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:07.519579 line       494                         if (i == j):
excute 13:47:07.523570 line       495                             continue
excute 13:47:07.526560 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:07.529552 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:47:07.532544 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0), (1, 9, 1, 1), (4, 9, 1, 1), (5, 9, 1, 1), (6, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (2, 9, 2, 1), (8, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1)]
excute 13:47:07.536533 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:47:07.541553 line       505                     if (self.RELOCATE):
excute 13:47:07.549500 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:47:07.555486 line       505                     if (self.RELOCATE):
excute 13:47:07.561468 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:47:07.565459 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -1, 0)
excute 13:47:07.569478 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:47:07.573440 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:07.577425 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:07.581415 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -1, 0)
excute 13:47:07.584437 line       556                     i = i_j[0]
excute 13:47:07.588395 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:07.593381 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:07.597372 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -1, 0)
excute 13:47:07.600395 line       556                     i = i_j[0]
excute 13:47:07.604384 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:07.608343 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:07.611366 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -1, 0)
excute 13:47:07.615324 line       556                     i = i_j[0]
excute 13:47:07.619312 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:07.622304 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:07.626293 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -1, 0)
excute 13:47:07.630282 line       556                     i = i_j[0]
excute 13:47:07.634276 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:07.637266 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:07.641255 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -1, 0)
excute 13:47:07.645244 line       556                     i = i_j[0]
excute 13:47:07.649233 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:07.656216 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:07.663221 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -1, 0)
excute 13:47:07.668183 line       556                     i = i_j[0]
excute 13:47:07.672174 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:07.675164 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:07.682148 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -1, 0)
excute 13:47:07.687133 line       556                     i = i_j[0]
excute 13:47:07.691120 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:07.695144 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:07.699099 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -1, 1)
excute 13:47:07.703088 line       556                     i = i_j[0]
excute 13:47:07.707078 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:07.710069 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:07.714059 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 0)
excute 13:47:07.717051 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:47:07.721041 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:07.725031 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:07.729047 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:47:07.732043 line       556                     i = i_j[0]
excute 13:47:07.736001 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:07.739991 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:07.743015 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:47:07.747002 line       556                     i = i_j[0]
excute 13:47:07.750995 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:07.753986 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:07.757977 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 0)
excute 13:47:07.761965 line       556                     i = i_j[0]
excute 13:47:07.765923 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:07.768945 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:07.772903 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 0)
excute 13:47:07.775925 line       556                     i = i_j[0]
excute 13:47:07.779884 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:07.782908 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:07.786897 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 0)
excute 13:47:07.789888 line       556                     i = i_j[0]
excute 13:47:07.793879 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:07.799830 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:07.807809 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:47:07.810800 line       556                     i = i_j[0]
excute 13:47:07.814789 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:07.818778 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:07.821770 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:47:07.825794 line       556                     i = i_j[0]
excute 13:47:07.829783 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:07.832741 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:07.836731 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 1)
excute 13:47:07.840753 line       556                     i = i_j[0]
excute 13:47:07.844710 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:07.847701 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:07.851691 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 1, 0)
excute 13:47:07.855681 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:47:07.858672 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:07.862662 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:07.866651 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 1, 0)
excute 13:47:07.869643 line       556                     i = i_j[0]
excute 13:47:07.873632 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:07.876624 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:07.880646 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 1, 0)
excute 13:47:07.884635 line       556                     i = i_j[0]
excute 13:47:07.888627 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:07.891616 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:07.895584 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 1, 0)
excute 13:47:07.898597 line       556                     i = i_j[0]
excute 13:47:07.904551 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:07.907542 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:07.911531 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 1, 0)
excute 13:47:07.914523 line       556                     i = i_j[0]
excute 13:47:07.918512 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:07.922509 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:07.925496 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 1, 0)
excute 13:47:07.929483 line       556                     i = i_j[0]
excute 13:47:07.933472 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:07.936464 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:07.940486 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 1, 0)
excute 13:47:07.944475 line       556                     i = i_j[0]
excute 13:47:07.948434 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:07.952450 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:07.956412 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 1, 0)
excute 13:47:07.960401 line       556                     i = i_j[0]
excute 13:47:07.964393 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:07.967413 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:07.971373 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 1, 0)
excute 13:47:07.974397 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:47:07.978385 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:07.982342 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:07.986333 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 1, 0)
excute 13:47:07.989354 line       556                     i = i_j[0]
excute 13:47:07.993338 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:07.997314 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.001291 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 1, 0)
excute 13:47:08.005284 line       556                     i = i_j[0]
excute 13:47:08.010267 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:08.013259 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.017251 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 1, 0)
excute 13:47:08.020240 line       556                     i = i_j[0]
excute 13:47:08.024230 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:08.027221 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.031224 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 1, 0)
excute 13:47:08.034203 line       556                     i = i_j[0]
excute 13:47:08.038210 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:08.041184 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.045173 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 1, 0)
excute 13:47:08.048166 line       556                     i = i_j[0]
excute 13:47:08.052154 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:08.056144 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.060134 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 1, 0)
excute 13:47:08.063126 line       556                     i = i_j[0]
excute 13:47:08.067115 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:08.070107 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.074097 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 1, 0)
excute 13:47:08.078120 line       556                     i = i_j[0]
excute 13:47:08.082077 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:08.085066 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.089056 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 1, 0)
excute 13:47:08.092048 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:47:08.096037 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:08.099029 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.103018 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 1, 0)
excute 13:47:08.108007 line       556                     i = i_j[0]
excute 13:47:08.112023 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:08.115019 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.118978 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 1, 0)
excute 13:47:08.122000 line       556                     i = i_j[0]
excute 13:47:08.125959 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:08.128983 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.132940 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 1, 0)
excute 13:47:08.136961 line       556                     i = i_j[0]
excute 13:47:08.140950 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:08.143941 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.147907 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 1, 0)
excute 13:47:08.150923 line       556                     i = i_j[0]
excute 13:47:08.155878 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:08.158901 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.162860 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 1, 0)
excute 13:47:08.165889 line       556                     i = i_j[0]
excute 13:47:08.169842 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:08.172864 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.176824 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 1, 0)
excute 13:47:08.179814 line       556                     i = i_j[0]
excute 13:47:08.183803 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:08.187793 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.192780 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 1, 0)
excute 13:47:08.195802 line       556                     i = i_j[0]
excute 13:47:08.199761 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:08.202784 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.206743 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 1, 0)
excute 13:47:08.210735 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:47:08.214720 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:08.218710 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.221701 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 1, 0)
excute 13:47:08.224694 line       556                     i = i_j[0]
excute 13:47:08.228683 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:08.231675 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.235664 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 1, 0)
excute 13:47:08.238656 line       556                     i = i_j[0]
excute 13:47:08.242646 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:08.245638 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.249627 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 1, 0)
excute 13:47:08.253616 line       556                     i = i_j[0]
excute 13:47:08.257605 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:08.261628 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.265590 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 1, 0)
excute 13:47:08.268608 line       556                     i = i_j[0]
excute 13:47:08.272567 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:08.276589 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.280545 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 1, 0)
excute 13:47:08.283568 line       556                     i = i_j[0]
excute 13:47:08.287526 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:08.290549 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.294540 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 1, 0)
excute 13:47:08.298529 line       556                     i = i_j[0]
excute 13:47:08.301521 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:08.305478 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.309467 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 1, 0)
excute 13:47:08.314457 line       556                     i = i_j[0]
excute 13:47:08.318444 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:08.321435 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.325424 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 0)
excute 13:47:08.337393 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:47:08.342382 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:08.347374 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.351387 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 0)
excute 13:47:08.355377 line       556                     i = i_j[0]
excute 13:47:08.359334 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:08.363356 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.367314 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:47:08.370340 line       556                     i = i_j[0]
excute 13:47:08.374330 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:08.378286 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.382305 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 0)
excute 13:47:08.386298 line       556                     i = i_j[0]
excute 13:47:08.390252 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:08.393275 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.398231 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 0)
excute 13:47:08.401254 line       556                     i = i_j[0]
excute 13:47:08.405227 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:08.408235 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.412194 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 0)
excute 13:47:08.416183 line       556                     i = i_j[0]
excute 13:47:08.420184 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:08.423163 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.427152 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 0)
excute 13:47:08.430144 line       556                     i = i_j[0]
excute 13:47:08.434134 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:08.437126 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.442114 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 0)
excute 13:47:08.445106 line       556                     i = i_j[0]
excute 13:47:08.452088 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:08.456075 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.460064 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 0)
excute 13:47:08.468044 line       556                     i = i_j[0]
excute 13:47:08.475026 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:08.479014 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.483004 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 1, 1)
excute 13:47:08.485995 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:47:08.489985 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:08.493975 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.497964 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 117
excute 13:47:08.500988 line       560                         if (t_tmp > self.TIME):
excute 13:47:08.504976 line       563                             if (available_vhecles[i][t] == 0):
excute 13:47:08.508967 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:47:08.512923 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:47:08.515915 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:47:08.520905 line       569                                     available_vhecles[i][t],
excute 13:47:08.523894 line       570                                     available_vhecles[j][t_tmp],
excute 13:47:08.526886 line       571                                     self.S_capacities[j],
excute 13:47:08.530875 line       572                                     demands[t][i][j],
excute 13:47:08.533867 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 2
calc_contract     Starting var:.. available_vhecles_target = 2
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 109
calc_contract     13:47:08.536859 call       352     def caluculate_contract(
calc_contract     13:47:08.539852 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:47:08.540851 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:47:08.541860 line       362         if (available_vhecles_start >= demand):
calc_contract     13:47:08.542844 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:47:08.543842 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:47:08.543842 line       385         return [can_contract, rsf, rse]
calc_contract     13:47:08.544840 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute Modified var:.. rsf_tmp = 0
excute 13:47:08.546834 line       575                                 rsf += rsf_tmp
excute 13:47:08.550825 line       576                                 rse += rse_tmp
excute 13:47:08.556805 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     Starting var:.. i = 1
move_cars     Starting var:.. j = 9
move_cars     Starting var:.. t = 109
move_cars     Starting var:.. t_tmp = 117
move_cars     Starting var:.. can_contract = 1
move_cars     13:47:08.560797 call       388     def move_cars(
move_cars     13:47:08.565782 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:47:08.566780 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
move_cars     13:47:08.568775 line       399         return available_vhecles
move_cars     13:47:08.570771 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute 13:47:08.573763 line       579                                 success += can_contract
excute Modified var:.. success = 45
excute 13:47:08.577753 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 1, 1)
excute 13:47:08.581743 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:47:08.585730 line       557                     j = i_j[1]
excute 13:47:08.591714 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.594705 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 1, 1)
excute 13:47:08.597697 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:47:08.601686 line       557                     j = i_j[1]
excute 13:47:08.605676 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.608667 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 1, 1)
excute 13:47:08.612657 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:47:08.615681 line       557                     j = i_j[1]
excute 13:47:08.620636 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.625625 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:47:08.628616 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:47:08.632603 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:08.637591 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.640614 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:47:08.644604 line       556                     i = i_j[0]
excute 13:47:08.648593 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:08.651585 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.655574 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:47:08.659563 line       556                     i = i_j[0]
excute 13:47:08.663521 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:08.666514 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.670502 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:47:08.673525 line       556                     i = i_j[0]
excute 13:47:08.677518 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:08.691829 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.695817 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:47:08.699837 line       556                     i = i_j[0]
excute 13:47:08.703831 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:08.707809 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.711805 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:47:08.714797 line       556                     i = i_j[0]
excute 13:47:08.718790 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:08.722776 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.727732 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:47:08.730754 line       556                     i = i_j[0]
excute 13:47:08.734745 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:08.738702 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.742693 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:47:08.745715 line       556                     i = i_j[0]
excute 13:47:08.749673 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:08.752696 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.756688 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 2, 0)
excute 13:47:08.760674 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:47:08.764633 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:08.768643 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.771645 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 2, 0)
excute 13:47:08.775638 line       556                     i = i_j[0]
excute 13:47:08.779598 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:08.783584 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.790563 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 2, 0)
excute 13:47:08.796548 line       556                     i = i_j[0]
excute 13:47:08.800538 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:08.803528 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.807517 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 2, 0)
excute 13:47:08.811506 line       556                     i = i_j[0]
excute 13:47:08.815496 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:08.818488 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.822478 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 2, 0)
excute 13:47:08.826468 line       556                     i = i_j[0]
excute 13:47:08.831455 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:08.834477 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.838468 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 2, 0)
excute 13:47:08.842425 line       556                     i = i_j[0]
excute 13:47:08.845448 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:08.849405 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.852432 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 2, 0)
excute 13:47:08.856418 line       556                     i = i_j[0]
excute 13:47:08.860377 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:08.863409 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.867360 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 2, 0)
excute 13:47:08.870350 line       556                     i = i_j[0]
excute 13:47:08.874339 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:08.878328 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.881321 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 1)
excute 13:47:08.885309 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:47:08.889299 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:08.893290 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.897278 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 2, 1)
excute 13:47:08.900304 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:47:08.904291 line       557                     j = i_j[1]
excute 13:47:08.908249 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.911276 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 10, 0)
excute 13:47:08.915261 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:47:08.919251 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:08.922243 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.926237 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 10, 0)
excute 13:47:08.930194 line       556                     i = i_j[0]
excute 13:47:08.934178 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:08.938168 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.941160 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 10, 0)
excute 13:47:08.945149 line       556                     i = i_j[0]
excute 13:47:08.950138 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:08.953160 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.957150 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 10, 0)
excute 13:47:08.960110 line       556                     i = i_j[0]
excute 13:47:08.965097 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:08.968120 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.972112 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 10, 0)
excute 13:47:08.975105 line       556                     i = i_j[0]
excute 13:47:08.979091 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:08.983048 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:08.987038 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 10, 0)
excute 13:47:08.990029 line       556                     i = i_j[0]
excute 13:47:08.994020 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:08.997010 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:09.001000 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 10, 0)
excute 13:47:09.003992 line       556                     i = i_j[0]
excute 13:47:09.007982 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:09.010974 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:09.014963 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 10, 0)
excute 13:47:09.018959 line       556                     i = i_j[0]
excute 13:47:09.021947 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:09.025934 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:09.029923 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 10, 1)
excute 13:47:09.033947 line       556                     i = i_j[0]
excute 13:47:09.037904 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:09.040925 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:09.044914 line       555                 for i_j in i_j_list:
excute 13:47:09.048904 line       581             self.write_matrix(
excute 13:47:09.051865 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:47:09.055854 line       583                 result_file_path,
excute 13:47:09.058846 line       584                 mode='a'
excute 13:47:09.065831 line       488         for t in time_steps:
excute Modified var:.. t = 110
excute 13:47:09.070849 line       489             if (t != self.TIME + 1):
excute 13:47:09.075801 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:47:09.080818 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:47:09.085807 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:47:09.089796 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:09.093753 line       494                         if (i == j):
excute 13:47:09.098773 line       495                             continue
excute 13:47:09.101734 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:09.107752 line       494                         if (i == j):
excute 13:47:09.111706 line       496                         i_j_list.append((
excute 13:47:09.114699 line       497                             i, j,
excute 13:47:09.119686 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:09.125701 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1)]
excute 13:47:09.137641 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:09.148607 line       494                         if (i == j):
excute 13:47:09.155588 line       496                         i_j_list.append((
excute 13:47:09.159577 line       497                             i, j,
excute 13:47:09.164567 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:09.170549 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0)]
excute 13:47:09.173542 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:09.178526 line       494                         if (i == j):
excute 13:47:09.183546 line       496                         i_j_list.append((
excute 13:47:09.189497 line       497                             i, j,
excute 13:47:09.196479 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:09.207450 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:47:09.214433 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:09.219418 line       494                         if (i == j):
excute 13:47:09.223407 line       496                         i_j_list.append((
excute 13:47:09.226429 line       497                             i, j,
excute 13:47:09.230388 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:09.233415 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0)]
excute 13:47:09.236403 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:09.240392 line       494                         if (i == j):
excute 13:47:09.245348 line       496                         i_j_list.append((
excute 13:47:09.248339 line       497                             i, j,
excute 13:47:09.252328 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:09.255321 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0)]
excute 13:47:09.259310 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:09.263300 line       494                         if (i == j):
excute 13:47:09.266322 line       496                         i_j_list.append((
excute 13:47:09.270317 line       497                             i, j,
excute 13:47:09.273304 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:09.276297 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0)]
excute 13:47:09.280286 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:09.283280 line       494                         if (i == j):
excute 13:47:09.287267 line       496                         i_j_list.append((
excute 13:47:09.291259 line       497                             i, j,
excute 13:47:09.294252 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:09.297240 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0)]
excute 13:47:09.300232 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:09.304190 line       494                         if (i == j):
excute 13:47:09.308212 line       496                         i_j_list.append((
excute 13:47:09.311173 line       497                             i, j,
excute 13:47:09.314163 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:09.318152 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0)]
excute 13:47:09.321144 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:09.325134 line       494                         if (i == j):
excute 13:47:09.334110 line       496                         i_j_list.append((
excute 13:47:09.338099 line       497                             i, j,
excute 13:47:09.343118 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:09.349074 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2)]
excute 13:47:09.355054 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:09.361039 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:47:09.365030 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:09.371013 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:09.375033 line       494                         if (i == j):
excute 13:47:09.379989 line       496                         i_j_list.append((
excute 13:47:09.384974 line       497                             i, j,
excute 13:47:09.388967 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:09.393981 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0)]
excute 13:47:09.398937 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:09.404924 line       494                         if (i == j):
excute 13:47:09.409939 line       495                             continue
excute 13:47:09.414898 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:09.419912 line       494                         if (i == j):
excute 13:47:09.423871 line       496                         i_j_list.append((
excute 13:47:09.427864 line       497                             i, j,
excute 13:47:09.431881 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:09.435838 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0)]
excute 13:47:09.441822 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:09.446809 line       494                         if (i == j):
excute 13:47:09.453794 line       496                         i_j_list.append((
excute 13:47:09.457782 line       497                             i, j,
excute 13:47:09.460803 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:09.463795 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0)]
excute 13:47:09.467784 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:09.470776 line       494                         if (i == j):
excute 13:47:09.474749 line       496                         i_j_list.append((
excute 13:47:09.477762 line       497                             i, j,
excute 13:47:09.481748 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:09.484739 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0)]
excute 13:47:09.487731 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:09.491721 line       494                         if (i == j):
excute 13:47:09.495709 line       496                         i_j_list.append((
excute 13:47:09.499668 line       497                             i, j,
excute 13:47:09.502691 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:09.505683 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0)]
excute 13:47:09.508675 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:09.513631 line       494                         if (i == j):
excute 13:47:09.516653 line       496                         i_j_list.append((
excute 13:47:09.520612 line       497                             i, j,
excute 13:47:09.523635 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:09.526627 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0)]
excute 13:47:09.529619 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:09.533577 line       494                         if (i == j):
excute 13:47:09.537599 line       496                         i_j_list.append((
excute 13:47:09.540589 line       497                             i, j,
excute 13:47:09.543581 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:09.547544 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0)]
excute 13:47:09.550536 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:09.555519 line       494                         if (i == j):
excute 13:47:09.559509 line       496                         i_j_list.append((
excute 13:47:09.562534 line       497                             i, j,
excute 13:47:09.565527 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:09.569481 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0)]
excute 13:47:09.572475 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:09.576465 line       494                         if (i == j):
excute 13:47:09.580477 line       496                         i_j_list.append((
excute 13:47:09.583482 line       497                             i, j,
excute 13:47:09.586469 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:09.589468 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2)]
excute 13:47:09.593436 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:09.596440 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:47:09.600398 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:09.603389 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:09.607379 line       494                         if (i == j):
excute 13:47:09.610371 line       496                         i_j_list.append((
excute 13:47:09.614361 line       497                             i, j,
excute 13:47:09.617355 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:09.620347 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0)]
excute 13:47:09.624334 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:09.627326 line       494                         if (i == j):
excute 13:47:09.631315 line       496                         i_j_list.append((
excute 13:47:09.635337 line       497                             i, j,
excute 13:47:09.638329 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:09.642320 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1)]
excute 13:47:09.645314 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:09.649295 line       494                         if (i == j):
excute 13:47:09.653257 line       495                             continue
excute 13:47:09.657246 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:09.660270 line       494                         if (i == j):
excute 13:47:09.664227 line       496                         i_j_list.append((
excute 13:47:09.668217 line       497                             i, j,
excute 13:47:09.671241 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:09.674235 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0)]
excute 13:47:09.678222 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:09.682191 line       494                         if (i == j):
excute 13:47:09.686169 line       496                         i_j_list.append((
excute 13:47:09.689192 line       497                             i, j,
excute 13:47:09.692185 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:09.696153 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:47:09.699166 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:09.703155 line       494                         if (i == j):
excute 13:47:09.707114 line       496                         i_j_list.append((
excute 13:47:09.710137 line       497                             i, j,
excute 13:47:09.714095 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:09.721077 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:47:09.724100 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:09.728058 line       494                         if (i == j):
excute 13:47:09.732047 line       496                         i_j_list.append((
excute 13:47:09.735071 line       497                             i, j,
excute 13:47:09.738065 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:09.741057 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0)]
excute 13:47:09.745043 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:09.748034 line       494                         if (i == j):
excute 13:47:09.752024 line       496                         i_j_list.append((
excute 13:47:09.756013 line       497                             i, j,
excute 13:47:09.761000 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:09.764959 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:47:09.767982 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:09.771959 line       494                         if (i == j):
excute 13:47:09.774931 line       496                         i_j_list.append((
excute 13:47:09.778921 line       497                             i, j,
excute 13:47:09.781913 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:09.785902 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:47:09.788894 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:09.792884 line       494                         if (i == j):
excute 13:47:09.795875 line       496                         i_j_list.append((
excute 13:47:09.799864 line       497                             i, j,
excute 13:47:09.802856 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:09.805849 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2)]
excute 13:47:09.808841 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:09.812830 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:47:09.815822 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:09.819812 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:09.822803 line       494                         if (i == j):
excute 13:47:09.826793 line       496                         i_j_list.append((
excute 13:47:09.829785 line       497                             i, j,
excute 13:47:09.832777 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:09.835769 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0)]
excute 13:47:09.839758 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:09.842782 line       494                         if (i == j):
excute 13:47:09.846772 line       496                         i_j_list.append((
excute 13:47:09.849765 line       497                             i, j,
excute 13:47:09.853753 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:09.856744 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1)]
excute 13:47:09.862699 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:09.865724 line       494                         if (i == j):
excute 13:47:09.869679 line       496                         i_j_list.append((
excute 13:47:09.872702 line       497                             i, j,
excute 13:47:09.875694 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:09.879683 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0)]
excute 13:47:09.882675 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:09.887631 line       494                         if (i == j):
excute 13:47:09.890654 line       495                             continue
excute 13:47:09.894612 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:09.897638 line       494                         if (i == j):
excute 13:47:09.900631 line       496                         i_j_list.append((
excute 13:47:09.904618 line       497                             i, j,
excute 13:47:09.907608 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:09.911567 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0)]
excute 13:47:09.916591 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:09.920550 line       494                         if (i == j):
excute 13:47:09.924532 line       496                         i_j_list.append((
excute 13:47:09.927523 line       497                             i, j,
excute 13:47:09.931512 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:09.934536 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0)]
excute 13:47:09.938495 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:09.941488 line       494                         if (i == j):
excute 13:47:09.945475 line       496                         i_j_list.append((
excute 13:47:09.950462 line       497                             i, j,
excute 13:47:09.953454 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:09.956446 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0)]
excute 13:47:09.960467 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:09.969421 line       494                         if (i == j):
excute 13:47:09.972406 line       496                         i_j_list.append((
excute 13:47:09.977392 line       497                             i, j,
excute 13:47:09.981381 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:09.984403 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0)]
excute 13:47:09.987395 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:09.991384 line       494                         if (i == j):
excute 13:47:09.995343 line       496                         i_j_list.append((
excute 13:47:09.999363 line       497                             i, j,
excute 13:47:10.002355 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.006345 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0)]
excute 13:47:10.010303 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:10.014292 line       494                         if (i == j):
excute 13:47:10.017288 line       496                         i_j_list.append((
excute 13:47:10.020316 line       497                             i, j,
excute 13:47:10.024297 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.027294 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2)]
excute 13:47:10.030287 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:10.034246 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:47:10.037230 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:10.041219 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:10.045389 line       494                         if (i == j):
excute 13:47:10.056535 line       496                         i_j_list.append((
excute 13:47:10.062517 line       497                             i, j,
excute 13:47:10.066507 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.073519 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0)]
excute 13:47:10.080473 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:10.084459 line       494                         if (i == j):
excute 13:47:10.088447 line       496                         i_j_list.append((
excute 13:47:10.092437 line       497                             i, j,
excute 13:47:10.095460 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.098452 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1)]
excute 13:47:10.102413 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:10.105433 line       494                         if (i == j):
excute 13:47:10.109393 line       496                         i_j_list.append((
excute 13:47:10.112415 line       497                             i, j,
excute 13:47:10.115410 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.119397 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0)]
excute 13:47:10.122388 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:10.126347 line       494                         if (i == j):
excute 13:47:10.130360 line       496                         i_j_list.append((
excute 13:47:10.133329 line       497                             i, j,
excute 13:47:10.137318 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.140341 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0)]
excute 13:47:10.147291 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:10.151293 line       494                         if (i == j):
excute 13:47:10.155270 line       495                             continue
excute 13:47:10.159258 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:10.163281 line       494                         if (i == j):
excute 13:47:10.167238 line       496                         i_j_list.append((
excute 13:47:10.171227 line       497                             i, j,
excute 13:47:10.174220 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.178209 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0)]
excute 13:47:10.182199 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:10.186198 line       494                         if (i == j):
excute 13:47:10.189210 line       496                         i_j_list.append((
excute 13:47:10.193199 line       497                             i, j,
excute 13:47:10.196191 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.200151 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0)]
excute 13:47:10.204140 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:10.207132 line       494                         if (i == j):
excute 13:47:10.211121 line       496                         i_j_list.append((
excute 13:47:10.215111 line       497                             i, j,
excute 13:47:10.219099 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.223089 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0)]
excute 13:47:10.226081 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:10.231067 line       494                         if (i == j):
excute 13:47:10.235056 line       496                         i_j_list.append((
excute 13:47:10.238049 line       497                             i, j,
excute 13:47:10.241041 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.245030 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0)]
excute 13:47:10.248022 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:10.253009 line       494                         if (i == j):
excute 13:47:10.257000 line       496                         i_j_list.append((
excute 13:47:10.260021 line       497                             i, j,
excute 13:47:10.264011 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.267004 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2)]
excute 13:47:10.270993 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:10.275960 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:47:10.279937 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:10.283926 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:10.287916 line       494                         if (i == j):
excute 13:47:10.290908 line       496                         i_j_list.append((
excute 13:47:10.294897 line       497                             i, j,
excute 13:47:10.298886 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.301879 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0)]
excute 13:47:10.306453 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:10.310450 line       494                         if (i == j):
excute 13:47:10.313440 line       496                         i_j_list.append((
excute 13:47:10.318426 line       497                             i, j,
excute 13:47:10.322417 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.340369 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1)]
excute 13:47:10.344359 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:10.348353 line       494                         if (i == j):
excute 13:47:10.352337 line       496                         i_j_list.append((
excute 13:47:10.356326 line       497                             i, j,
excute 13:47:10.359349 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.363308 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0)]
excute 13:47:10.367298 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:10.370288 line       494                         if (i == j):
excute 13:47:10.376307 line       496                         i_j_list.append((
excute 13:47:10.380263 line       497                             i, j,
excute 13:47:10.383285 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.387276 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0)]
excute 13:47:10.391233 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:10.394256 line       494                         if (i == j):
excute 13:47:10.398249 line       496                         i_j_list.append((
excute 13:47:10.402221 line       497                             i, j,
excute 13:47:10.405227 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.408219 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0)]
excute 13:47:10.412178 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:10.416180 line       494                         if (i == j):
excute 13:47:10.419189 line       495                             continue
excute 13:47:10.423179 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:10.426172 line       494                         if (i == j):
excute 13:47:10.430130 line       496                         i_j_list.append((
excute 13:47:10.433154 line       497                             i, j,
excute 13:47:10.436144 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.440133 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0)]
excute 13:47:10.443126 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:10.447085 line       494                         if (i == j):
excute 13:47:10.451109 line       496                         i_j_list.append((
excute 13:47:10.455094 line       497                             i, j,
excute 13:47:10.458086 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.462077 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0)]
excute 13:47:10.465068 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:10.469025 line       494                         if (i == j):
excute 13:47:10.473015 line       496                         i_j_list.append((
excute 13:47:10.477037 line       497                             i, j,
excute 13:47:10.480999 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.484016 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0)]
excute 13:47:10.487009 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:10.490998 line       494                         if (i == j):
excute 13:47:10.494959 line       496                         i_j_list.append((
excute 13:47:10.497980 line       497                             i, j,
excute 13:47:10.501938 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.505926 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2)]
excute 13:47:10.509916 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:10.517895 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:47:10.523879 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:10.527868 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:10.530885 line       494                         if (i == j):
excute 13:47:10.534849 line       496                         i_j_list.append((
excute 13:47:10.537873 line       497                             i, j,
excute 13:47:10.541865 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.544855 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2), (6, 0, 1, 0)]
excute 13:47:10.548812 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:10.551835 line       494                         if (i == j):
excute 13:47:10.556822 line       496                         i_j_list.append((
excute 13:47:10.559814 line       497                             i, j,
excute 13:47:10.562805 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.566796 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2), (6, 0, 1, 0), (6, 1, 1, 1)]
excute 13:47:10.569787 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:10.573778 line       494                         if (i == j):
excute 13:47:10.578733 line       496                         i_j_list.append((
excute 13:47:10.582752 line       497                             i, j,
excute 13:47:10.586711 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.589736 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0)]
excute 13:47:10.592727 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:10.596684 line       494                         if (i == j):
excute 13:47:10.600707 line       496                         i_j_list.append((
excute 13:47:10.603696 line       497                             i, j,
excute 13:47:10.606690 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.609681 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0)]
excute 13:47:10.613672 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:10.617628 line       494                         if (i == j):
excute 13:47:10.620619 line       496                         i_j_list.append((
excute 13:47:10.624608 line       497                             i, j,
excute 13:47:10.627601 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.630593 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0)]
excute 13:47:10.634581 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:10.638575 line       494                         if (i == j):
excute 13:47:10.642562 line       496                         i_j_list.append((
excute 13:47:10.645587 line       497                             i, j,
excute 13:47:10.648578 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.652565 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0)]
excute 13:47:10.655559 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:10.659547 line       494                         if (i == j):
excute 13:47:10.663512 line       495                             continue
excute 13:47:10.667494 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:10.670519 line       494                         if (i == j):
excute 13:47:10.674477 line       496                         i_j_list.append((
excute 13:47:10.677502 line       497                             i, j,
excute 13:47:10.681462 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.685480 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0)]
excute 13:47:10.688471 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:10.692461 line       494                         if (i == j):
excute 13:47:10.696451 line       496                         i_j_list.append((
excute 13:47:10.700439 line       497                             i, j,
excute 13:47:10.703429 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.706422 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0)]
excute 13:47:10.710384 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:10.714373 line       494                         if (i == j):
excute 13:47:10.719356 line       496                         i_j_list.append((
excute 13:47:10.722379 line       497                             i, j,
excute 13:47:10.726338 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.729360 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2)]
excute 13:47:10.732352 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:10.736311 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:47:10.739333 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:10.743323 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:10.747281 line       494                         if (i == j):
excute 13:47:10.750304 line       496                         i_j_list.append((
excute 13:47:10.754292 line       497                             i, j,
excute 13:47:10.757255 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.761243 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, -1, 0)]
excute 13:47:10.764235 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:10.768226 line       494                         if (i == j):
excute 13:47:10.773222 line       496                         i_j_list.append((
excute 13:47:10.776206 line       497                             i, j,
excute 13:47:10.783184 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.788171 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, -1, 0), (7, 1, -1, 1)]
excute 13:47:10.791163 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:10.795153 line       494                         if (i == j):
excute 13:47:10.799143 line       496                         i_j_list.append((
excute 13:47:10.802134 line       497                             i, j,
excute 13:47:10.806123 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.809115 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0)]
excute 13:47:10.812107 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:10.816096 line       494                         if (i == j):
excute 13:47:10.820086 line       496                         i_j_list.append((
excute 13:47:10.824109 line       497                             i, j,
excute 13:47:10.827099 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.830090 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0)]
excute 13:47:10.834082 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:10.838039 line       494                         if (i == j):
excute 13:47:10.841063 line       496                         i_j_list.append((
excute 13:47:10.845053 line       497                             i, j,
excute 13:47:10.848044 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.851035 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0)]
excute 13:47:10.855025 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:10.859015 line       494                         if (i == j):
excute 13:47:10.862972 line       496                         i_j_list.append((
excute 13:47:10.865995 line       497                             i, j,
excute 13:47:10.868989 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.872978 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0)]
excute 13:47:10.875968 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:10.879927 line       494                         if (i == j):
excute 13:47:10.883927 line       496                         i_j_list.append((
excute 13:47:10.887906 line       497                             i, j,
excute 13:47:10.891926 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.894918 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0)]
excute 13:47:10.898908 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:10.902866 line       494                         if (i == j):
excute 13:47:10.905889 line       495                             continue
excute 13:47:10.909849 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:10.912869 line       494                         if (i == j):
excute 13:47:10.916828 line       496                         i_j_list.append((
excute 13:47:10.919853 line       497                             i, j,
excute 13:47:10.922843 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.926801 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0)]
excute 13:47:10.929830 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:10.933783 line       494                         if (i == j):
excute 13:47:10.937772 line       496                         i_j_list.append((
excute 13:47:10.940797 line       497                             i, j,
excute 13:47:10.943789 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.947778 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 2)]
excute 13:47:10.951736 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:10.956723 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:47:10.959746 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:10.964700 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:10.967691 line       494                         if (i == j):
excute 13:47:10.971681 line       496                         i_j_list.append((
excute 13:47:10.974705 line       497                             i, j,
excute 13:47:10.977702 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:10.981687 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 2), (8, 0, 1, 0)]
excute 13:47:10.984679 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:10.988636 line       494                         if (i == j):
excute 13:47:10.993635 line       496                         i_j_list.append((
excute 13:47:10.997611 line       497                             i, j,
excute 13:47:11.000603 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:11.003595 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 2), (8, 0, 1, 0), (8, 1, 1, 1)]
excute 13:47:11.007584 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:11.011576 line       494                         if (i == j):
excute 13:47:11.015573 line       496                         i_j_list.append((
excute 13:47:11.018588 line       497                             i, j,
excute 13:47:11.021579 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:11.025568 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 2), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0)]
excute 13:47:11.028563 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:11.032519 line       494                         if (i == j):
excute 13:47:11.036508 line       496                         i_j_list.append((
excute 13:47:11.039533 line       497                             i, j,
excute 13:47:11.043501 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:11.046514 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 2), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0)]
excute 13:47:11.050471 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:11.053494 line       494                         if (i == j):
excute 13:47:11.057452 line       496                         i_j_list.append((
excute 13:47:11.061443 line       497                             i, j,
excute 13:47:11.064433 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:11.067425 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 2), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0)]
excute 13:47:11.071414 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:11.074406 line       494                         if (i == j):
excute 13:47:11.078395 line       496                         i_j_list.append((
excute 13:47:11.081388 line       497                             i, j,
excute 13:47:11.085409 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:11.088400 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 2), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0)]
excute 13:47:11.092359 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:11.097346 line       494                         if (i == j):
excute 13:47:11.101335 line       496                         i_j_list.append((
excute 13:47:11.104358 line       497                             i, j,
excute 13:47:11.107350 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:11.111341 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 2), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0)]
excute 13:47:11.114331 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:11.118290 line       494                         if (i == j):
excute 13:47:11.122279 line       496                         i_j_list.append((
excute 13:47:11.125302 line       497                             i, j,
excute 13:47:11.129292 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:11.132285 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 2), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0)]
excute 13:47:11.136272 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:11.140230 line       494                         if (i == j):
excute 13:47:11.144220 line       495                             continue
excute 13:47:11.148234 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:11.151200 line       494                         if (i == j):
excute 13:47:11.155191 line       496                         i_j_list.append((
excute 13:47:11.159180 line       497                             i, j,
excute 13:47:11.162203 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:11.165197 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 2), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 2)]
excute 13:47:11.169181 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:11.172144 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:47:11.176135 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:11.179126 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:11.183115 line       494                         if (i == j):
excute 13:47:11.186107 line       496                         i_j_list.append((
excute 13:47:11.190097 line       497                             i, j,
excute 13:47:11.193120 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:11.197081 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 2), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 2), (9, 0, 1, 0)]
excute 13:47:11.201067 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:11.205056 line       494                         if (i == j):
excute 13:47:11.209046 line       496                         i_j_list.append((
excute 13:47:11.213036 line       497                             i, j,
excute 13:47:11.218023 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:11.222012 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 2), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 2), (9, 0, 1, 0), (9, 1, 1, 1)]
excute 13:47:11.225006 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:11.228995 line       494                         if (i == j):
excute 13:47:11.232984 line       496                         i_j_list.append((
excute 13:47:11.236973 line       497                             i, j,
excute 13:47:11.240994 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:11.243987 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 2), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 2), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0)]
excute 13:47:11.247943 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:11.250966 line       494                         if (i == j):
excute 13:47:11.255921 line       496                         i_j_list.append((
excute 13:47:11.258912 line       497                             i, j,
excute 13:47:11.262902 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:11.265894 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 2), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 2), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0)]
excute 13:47:11.268886 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:11.272876 line       494                         if (i == j):
excute 13:47:11.276865 line       496                         i_j_list.append((
excute 13:47:11.279888 line       497                             i, j,
excute 13:47:11.283880 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:11.286872 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 2), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 2), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0)]
excute 13:47:11.290830 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:11.293851 line       494                         if (i == j):
excute 13:47:11.297842 line       496                         i_j_list.append((
excute 13:47:11.303794 line       497                             i, j,
excute 13:47:11.306784 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:11.309777 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 2), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 2), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0)]
excute 13:47:11.312769 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:11.316758 line       494                         if (i == j):
excute 13:47:11.322745 line       496                         i_j_list.append((
excute 13:47:11.331719 line       497                             i, j,
excute 13:47:11.342690 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:11.347678 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 2), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 2), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0)]
excute 13:47:11.352662 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:11.357653 line       494                         if (i == j):
excute 13:47:11.366638 line       496                         i_j_list.append((
excute 13:47:11.371612 line       497                             i, j,
excute 13:47:11.377597 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:11.385577 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 2), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 2), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0)]
excute 13:47:11.389567 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:11.394552 line       494                         if (i == j):
excute 13:47:11.401533 line       496                         i_j_list.append((
excute 13:47:11.407517 line       497                             i, j,
excute 13:47:11.421479 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:11.425469 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, -1, 0), (5, 1, -1, 1), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 2), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 2), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0)]
excute 13:47:11.430456 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:11.435442 line       494                         if (i == j):
excute 13:47:11.444418 line       495                             continue
excute 13:47:11.453394 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:11.465361 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:47:11.478327 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(5, 0, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (7, 0, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (5, 1, -1, 1), (7, 1, -1, 1), (5, 9, -1, 2), (7, 9, -1, 2), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 1, 0, 1), (0, 9, 0, 2), (4, 0, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (6, 0, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (8, 0, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (9, 0, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0), (4, 1, 1, 1), (6, 1, 1, 1), (8, 1, 1, 1), (9, 1, 1, 1), (4, 9, 1, 2), (6, 9, 1, 2), (8, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (2, 0, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 1, 2, 1), (1, 9, 2, 2), (2, 9, 2, 2), (3, 0, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 1, 10, 1), (3, 9, 10, 2)]
excute 13:47:11.489297 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:47:11.507249 line       505                     if (self.RELOCATE):
excute 13:47:11.518220 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:47:11.526199 line       505                     if (self.RELOCATE):
excute 13:47:11.535176 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:47:11.543155 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, -1, 0)
excute 13:47:11.551133 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:47:11.559110 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:11.568087 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:11.577063 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, -1, 0)
excute 13:47:11.585041 line       556                     i = i_j[0]
excute 13:47:11.593021 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:11.601996 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:11.609976 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, -1, 0)
excute 13:47:11.618952 line       556                     i = i_j[0]
excute 13:47:11.626930 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:11.634908 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:11.643885 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, -1, 0)
excute 13:47:11.651863 line       556                     i = i_j[0]
excute 13:47:11.660839 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:11.668817 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:11.677794 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, -1, 0)
excute 13:47:11.684775 line       556                     i = i_j[0]
excute 13:47:11.693751 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:11.702726 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:11.711704 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, -1, 0)
excute 13:47:11.718687 line       556                     i = i_j[0]
excute 13:47:11.728658 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:11.736636 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:11.745614 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, -1, 0)
excute 13:47:11.753590 line       556                     i = i_j[0]
excute 13:47:11.763566 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:11.771542 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:11.780520 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -1, 0)
excute 13:47:11.788498 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:47:11.796478 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:11.805452 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:11.814429 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -1, 0)
excute 13:47:11.821410 line       556                     i = i_j[0]
excute 13:47:11.830385 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:11.836369 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:11.840359 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -1, 0)
excute 13:47:11.844348 line       556                     i = i_j[0]
excute 13:47:11.847339 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:11.851329 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:11.855319 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -1, 0)
excute 13:47:11.859308 line       556                     i = i_j[0]
excute 13:47:11.863298 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:11.866289 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:11.870278 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -1, 0)
excute 13:47:11.873270 line       556                     i = i_j[0]
excute 13:47:11.877260 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:11.881249 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:11.885239 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -1, 0)
excute 13:47:11.888230 line       556                     i = i_j[0]
excute 13:47:11.892220 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:11.895212 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:11.900198 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -1, 0)
excute 13:47:11.903190 line       556                     i = i_j[0]
excute 13:47:11.907181 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:11.910171 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:11.914162 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, -1, 1)
excute 13:47:11.918151 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:47:11.922141 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:11.926131 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:11.931116 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -1, 1)
excute 13:47:11.934140 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:47:11.938097 line       557                     j = i_j[1]
excute 13:47:11.942086 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:11.946111 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, -1, 2)
excute 13:47:11.950081 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:47:11.954055 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:11.958076 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:11.963032 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -1, 2)
excute 13:47:11.967046 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:47:11.971024 line       557                     j = i_j[1]
excute 13:47:11.975031 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:11.979019 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:47:11.983009 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:47:11.986998 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:11.990957 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:11.994947 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:47:11.998934 line       556                     i = i_j[0]
excute 13:47:12.004918 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:12.010902 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.014903 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 0)
excute 13:47:12.017917 line       556                     i = i_j[0]
excute 13:47:12.021905 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:12.025862 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.029854 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 0)
excute 13:47:12.033844 line       556                     i = i_j[0]
excute 13:47:12.037835 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:12.040823 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.044812 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 0)
excute 13:47:12.047804 line       556                     i = i_j[0]
excute 13:47:12.051794 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:12.055783 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.058774 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:47:12.062763 line       556                     i = i_j[0]
excute 13:47:12.066770 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:12.069777 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.073735 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:47:12.076727 line       556                     i = i_j[0]
excute 13:47:12.080715 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:12.084705 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.087697 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 1)
excute 13:47:12.091686 line       556                     i = i_j[0]
excute 13:47:12.094678 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:12.098668 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.101659 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 2)
excute 13:47:12.104652 line       556                     i = i_j[0]
excute 13:47:12.108641 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:12.112630 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.116620 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 1, 0)
excute 13:47:12.119614 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:47:12.123601 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:12.127590 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.131612 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 1, 0)
excute 13:47:12.136566 line       556                     i = i_j[0]
excute 13:47:12.140557 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:12.143547 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.146540 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 1, 0)
excute 13:47:12.150529 line       556                     i = i_j[0]
excute 13:47:12.154518 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:12.158509 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.162497 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 1, 0)
excute 13:47:12.165489 line       556                     i = i_j[0]
excute 13:47:12.169479 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:12.172470 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.176460 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 1, 0)
excute 13:47:12.179452 line       556                     i = i_j[0]
excute 13:47:12.183441 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:12.186433 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.190423 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 1, 0)
excute 13:47:12.194412 line       556                     i = i_j[0]
excute 13:47:12.198402 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:12.201393 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.205383 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 1, 0)
excute 13:47:12.208375 line       556                     i = i_j[0]
excute 13:47:12.212365 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:12.219348 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.223335 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 1, 0)
excute 13:47:12.226327 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:47:12.230347 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:12.234310 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.239292 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 1, 0)
excute 13:47:12.242284 line       556                     i = i_j[0]
excute 13:47:12.246273 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:12.249265 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.253255 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 1, 0)
excute 13:47:12.257248 line       556                     i = i_j[0]
excute 13:47:12.261267 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:12.264226 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.268215 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 1, 0)
excute 13:47:12.271206 line       556                     i = i_j[0]
excute 13:47:12.275196 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:12.279187 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.282177 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 1, 0)
excute 13:47:12.286167 line       556                     i = i_j[0]
excute 13:47:12.289158 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:12.293148 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.296140 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 1, 0)
excute 13:47:12.300130 line       556                     i = i_j[0]
excute 13:47:12.303121 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:12.307111 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.310103 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 1, 0)
excute 13:47:12.314092 line       556                     i = i_j[0]
excute 13:47:12.318115 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:12.321107 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.325063 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 1, 0)
excute 13:47:12.333042 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:47:12.339029 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:12.343016 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.346006 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 1, 0)
excute 13:47:12.352019 line       556                     i = i_j[0]
excute 13:47:12.355981 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:12.359004 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.362969 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 1, 0)
excute 13:47:12.366982 line       556                     i = i_j[0]
excute 13:47:12.370947 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:12.374933 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.377954 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 1, 0)
excute 13:47:12.381943 line       556                     i = i_j[0]
excute 13:47:12.386898 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:12.389891 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.393878 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 1, 0)
excute 13:47:12.396871 line       556                     i = i_j[0]
excute 13:47:12.400860 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:12.403852 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.407842 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 1, 0)
excute 13:47:12.410833 line       556                     i = i_j[0]
excute 13:47:12.414822 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:12.418845 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.422803 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 1, 0)
excute 13:47:12.425793 line       556                     i = i_j[0]
excute 13:47:12.428785 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:12.432774 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.436764 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 0)
excute 13:47:12.439757 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:47:12.445748 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:12.450729 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.454716 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:47:12.457739 line       556                     i = i_j[0]
excute 13:47:12.461701 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:12.464723 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.468678 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 0)
excute 13:47:12.472670 line       556                     i = i_j[0]
excute 13:47:12.476658 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:12.479649 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.483639 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 0)
excute 13:47:12.486663 line       556                     i = i_j[0]
excute 13:47:12.490621 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:12.493643 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.497603 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 0)
excute 13:47:12.500626 line       556                     i = i_j[0]
excute 13:47:12.504582 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:12.508605 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.511595 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 0)
excute 13:47:12.515587 line       556                     i = i_j[0]
excute 13:47:12.519544 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:12.522566 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.526525 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 0)
excute 13:47:12.529547 line       556                     i = i_j[0]
excute 13:47:12.533507 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:12.536531 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.540487 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 0)
excute 13:47:12.545507 line       556                     i = i_j[0]
excute 13:47:12.549496 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:12.552488 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.557446 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 1, 1)
excute 13:47:12.560467 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:47:12.564456 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:12.567414 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.572416 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 1, 1)
excute 13:47:12.575396 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:47:12.579394 line       557                     j = i_j[1]
excute 13:47:12.582374 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.585367 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 1, 1)
excute 13:47:12.589355 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:47:12.592348 line       557                     j = i_j[1]
excute 13:47:12.596337 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.599329 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 1)
excute 13:47:12.602321 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:47:12.606311 line       557                     j = i_j[1]
excute 13:47:12.610300 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.613292 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 1, 2)
excute 13:47:12.616284 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:47:12.620274 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:12.624263 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.628253 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 1, 2)
excute 13:47:12.631244 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:47:12.635234 line       557                     j = i_j[1]
excute 13:47:12.639224 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.642249 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 1, 2)
excute 13:47:12.646206 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:47:12.650193 line       557                     j = i_j[1]
excute 13:47:12.654182 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.658204 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 2, 0)
excute 13:47:12.661197 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:47:12.665154 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:12.669142 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.673163 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 2, 0)
excute 13:47:12.677121 line       556                     i = i_j[0]
excute 13:47:12.680148 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:12.684128 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.687126 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 2, 0)
excute 13:47:12.691118 line       556                     i = i_j[0]
excute 13:47:12.694108 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:12.698098 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.702055 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 2, 0)
excute 13:47:12.705078 line       556                     i = i_j[0]
excute 13:47:12.709039 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:12.713027 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.717016 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 2, 0)
excute 13:47:12.721036 line       556                     i = i_j[0]
excute 13:47:12.724995 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:12.728020 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.731976 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 2, 0)
excute 13:47:12.734998 line       556                     i = i_j[0]
excute 13:47:12.738956 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:12.741948 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.745938 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 2, 0)
excute 13:47:12.749960 line       556                     i = i_j[0]
excute 13:47:12.753949 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:12.757905 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.761901 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 2, 0)
excute 13:47:12.764918 line       556                     i = i_j[0]
excute 13:47:12.768909 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:12.772867 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.780859 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:47:12.791815 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:47:12.798797 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:12.803784 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.807806 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:47:12.811780 line       556                     i = i_j[0]
excute 13:47:12.814787 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:12.818777 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.822732 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:47:12.825724 line       556                     i = i_j[0]
excute 13:47:12.829713 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:12.832705 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.836695 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:47:12.839688 line       556                     i = i_j[0]
excute 13:47:12.843677 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:12.846668 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.851656 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:47:12.855644 line       556                     i = i_j[0]
excute 13:47:12.859633 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:12.863624 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.869616 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:47:12.873596 line       556                     i = i_j[0]
excute 13:47:12.877588 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:12.880578 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.884567 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:47:12.888556 line       556                     i = i_j[0]
excute 13:47:12.891550 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:12.895537 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.898530 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 1)
excute 13:47:12.902518 line       556                     i = i_j[0]
excute 13:47:12.905511 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:12.909500 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.912492 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 2, 2)
excute 13:47:12.916481 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:47:12.919473 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:12.923468 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.927466 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 2)
excute 13:47:12.930478 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:47:12.934440 line       557                     j = i_j[1]
excute 13:47:12.938423 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.941415 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 116
excute 13:47:12.944407 line       560                         if (t_tmp > self.TIME):
excute 13:47:12.949394 line       563                             if (available_vhecles[i][t] == 0):
excute 13:47:12.954382 line       564                                 rse += demands[t][i][j]
excute Modified var:.. rse = 130
excute 13:47:12.957372 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:47:12.963358 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:47:12.968343 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 10, 0)
excute 13:47:12.972332 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:47:12.976322 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:12.980312 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.984300 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 10, 0)
excute 13:47:12.988291 line       556                     i = i_j[0]
excute 13:47:12.991282 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:12.995271 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:12.999276 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 10, 0)
excute 13:47:13.002285 line       556                     i = i_j[0]
excute 13:47:13.006273 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:13.010264 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:13.014222 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 10, 0)
excute 13:47:13.017244 line       556                     i = i_j[0]
excute 13:47:13.021202 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:13.024225 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:13.028183 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 10, 0)
excute 13:47:13.031209 line       556                     i = i_j[0]
excute 13:47:13.035196 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:13.038188 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:13.042179 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 10, 0)
excute 13:47:13.046136 line       556                     i = i_j[0]
excute 13:47:13.049159 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:13.054116 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:13.059101 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 10, 0)
excute 13:47:13.063089 line       556                     i = i_j[0]
excute 13:47:13.066115 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:13.070071 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:13.074061 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 10, 1)
excute 13:47:13.077086 line       556                     i = i_j[0]
excute 13:47:13.081042 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:13.084065 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:13.088056 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 119
excute 13:47:13.091047 line       560                         if (t_tmp > self.TIME):
excute 13:47:13.095006 line       563                             if (available_vhecles[i][t] == 0):
excute 13:47:13.098029 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:47:13.101021 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:47:13.105010 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:47:13.108001 line       569                                     available_vhecles[i][t],
excute 13:47:13.110995 line       570                                     available_vhecles[j][t_tmp],
excute 13:47:13.114983 line       571                                     self.S_capacities[j],
excute 13:47:13.117974 line       572                                     demands[t][i][j],
excute 13:47:13.120966 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = -8
calc_contract     Starting var:.. available_vhecles_target = 2
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 110
calc_contract     13:47:13.124956 call       352     def caluculate_contract(
calc_contract     13:47:13.127918 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:47:13.127918 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:47:13.128916 line       362         if (available_vhecles_start >= demand):
calc_contract     13:47:13.129918 line       373             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:47:13.130909 line       375                 can_contract = available_vhecles_target
calc_contract     New var:....... can_contract = 2
calc_contract     13:47:13.130909 line       376                 rse += (demand - available_vhecles_start)
calc_contract     Modified var:.. rse = 9
calc_contract     13:47:13.131907 line       385         return [can_contract, rsf, rse]
calc_contract     13:47:13.133903 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [2, 0, 9]
excute Modified var:.. can_contract = 2
excute Modified var:.. rse_tmp = 9
excute 13:47:13.134923 line       575                                 rsf += rsf_tmp
excute 13:47:13.138887 line       576                                 rse += rse_tmp
excute Modified var:.. rse = 139
excute 13:47:13.141910 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
move_cars     Starting var:.. i = 3
move_cars     Starting var:.. j = 1
move_cars     Starting var:.. t = 110
move_cars     Starting var:.. t_tmp = 119
move_cars     Starting var:.. can_contract = 2
move_cars     13:47:13.145872 call       388     def move_cars(
move_cars     13:47:13.149860 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:47:13.151854 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:47:13.154899 line       399         return available_vhecles
move_cars     13:47:13.155897 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute 13:47:13.158888 line       579                                 success += can_contract
excute Modified var:.. success = 47
excute 13:47:13.163876 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 10, 2)
excute 13:47:13.167897 line       556                     i = i_j[0]
excute 13:47:13.171853 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:13.174877 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:13.178836 line       555                 for i_j in i_j_list:
excute 13:47:13.181862 line       581             self.write_matrix(
excute 13:47:13.185817 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:47:13.188840 line       583                 result_file_path,
excute 13:47:13.191832 line       584                 mode='a'
excute 13:47:13.198782 line       488         for t in time_steps:
excute Modified var:.. t = 111
excute 13:47:13.202774 line       489             if (t != self.TIME + 1):
excute 13:47:13.206763 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:47:13.213744 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:47:13.219727 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:47:13.226708 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:13.230698 line       494                         if (i == j):
excute 13:47:13.234687 line       495                             continue
excute 13:47:13.237678 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:13.241669 line       494                         if (i == j):
excute 13:47:13.244659 line       496                         i_j_list.append((
excute 13:47:13.248649 line       497                             i, j,
excute 13:47:13.253635 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:13.258623 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0)]
excute 13:47:13.272585 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:13.276586 line       494                         if (i == j):
excute 13:47:13.284553 line       496                         i_j_list.append((
excute 13:47:13.287546 line       497                             i, j,
excute 13:47:13.292532 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:13.295525 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0)]
excute 13:47:13.299514 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:13.303503 line       494                         if (i == j):
excute 13:47:13.307491 line       496                         i_j_list.append((
excute 13:47:13.310484 line       497                             i, j,
excute 13:47:13.313475 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:13.317466 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:47:13.321455 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:13.330431 line       494                         if (i == j):
excute 13:47:13.339409 line       496                         i_j_list.append((
excute 13:47:13.346389 line       497                             i, j,
excute 13:47:13.352373 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:13.356360 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2)]
excute 13:47:13.359355 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:13.364344 line       494                         if (i == j):
excute 13:47:13.368330 line       496                         i_j_list.append((
excute 13:47:13.374313 line       497                             i, j,
excute 13:47:13.379300 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:13.383290 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0)]
excute 13:47:13.387279 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:13.391268 line       494                         if (i == j):
excute 13:47:13.395275 line       496                         i_j_list.append((
excute 13:47:13.398249 line       497                             i, j,
excute 13:47:13.402238 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:13.405231 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0)]
excute 13:47:13.409219 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:13.413209 line       494                         if (i == j):
excute 13:47:13.417199 line       496                         i_j_list.append((
excute 13:47:13.420191 line       497                             i, j,
excute 13:47:13.423182 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:13.427171 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1)]
excute 13:47:13.431161 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:13.435152 line       494                         if (i == j):
excute 13:47:13.439142 line       496                         i_j_list.append((
excute 13:47:13.443130 line       497                             i, j,
excute 13:47:13.447119 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:13.452107 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0)]
excute 13:47:13.455099 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:13.459086 line       494                         if (i == j):
excute 13:47:13.463077 line       496                         i_j_list.append((
excute 13:47:13.466067 line       497                             i, j,
excute 13:47:13.469059 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:13.472051 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0)]
excute 13:47:13.476042 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:13.481028 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:47:13.485017 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:13.491003 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:13.494991 line       494                         if (i == j):
excute 13:47:13.498982 line       496                         i_j_list.append((
excute 13:47:13.501973 line       497                             i, j,
excute 13:47:13.505962 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:13.509952 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0)]
excute 13:47:13.513941 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:13.517931 line       494                         if (i == j):
excute 13:47:13.521920 line       495                             continue
excute 13:47:13.524911 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:13.528901 line       494                         if (i == j):
excute 13:47:13.531893 line       496                         i_j_list.append((
excute 13:47:13.535882 line       497                             i, j,
excute 13:47:13.538874 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:13.542863 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0)]
excute 13:47:13.546852 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:13.550842 line       494                         if (i == j):
excute 13:47:13.555829 line       496                         i_j_list.append((
excute 13:47:13.558820 line       497                             i, j,
excute 13:47:13.561812 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:13.564804 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0)]
excute 13:47:13.568794 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:13.571786 line       494                         if (i == j):
excute 13:47:13.575775 line       496                         i_j_list.append((
excute 13:47:13.580761 line       497                             i, j,
excute 13:47:13.583755 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:13.587741 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2)]
excute 13:47:13.590735 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:13.594725 line       494                         if (i == j):
excute 13:47:13.598714 line       496                         i_j_list.append((
excute 13:47:13.602703 line       497                             i, j,
excute 13:47:13.606693 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:13.610681 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0)]
excute 13:47:13.613674 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:13.618660 line       494                         if (i == j):
excute 13:47:13.622656 line       496                         i_j_list.append((
excute 13:47:13.625642 line       497                             i, j,
excute 13:47:13.629632 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:13.632624 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0)]
excute 13:47:13.636613 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:13.640602 line       494                         if (i == j):
excute 13:47:13.644591 line       496                         i_j_list.append((
excute 13:47:13.648581 line       497                             i, j,
excute 13:47:13.651573 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:13.655563 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1)]
excute 13:47:13.658554 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:13.662559 line       494                         if (i == j):
excute 13:47:13.666532 line       496                         i_j_list.append((
excute 13:47:13.670520 line       497                             i, j,
excute 13:47:13.673512 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:13.676504 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0)]
excute 13:47:13.681492 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:13.686478 line       494                         if (i == j):
excute 13:47:13.689470 line       496                         i_j_list.append((
excute 13:47:13.693459 line       497                             i, j,
excute 13:47:13.696451 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:13.700440 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0)]
excute 13:47:13.703432 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:13.707422 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:47:13.710413 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:13.715401 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:13.720392 line       494                         if (i == j):
excute 13:47:13.724380 line       496                         i_j_list.append((
excute 13:47:13.727370 line       497                             i, j,
excute 13:47:13.731360 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:13.734352 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0)]
excute 13:47:13.738350 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:13.742331 line       494                         if (i == j):
excute 13:47:13.746318 line       496                         i_j_list.append((
excute 13:47:13.749312 line       497                             i, j,
excute 13:47:13.752304 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:13.756293 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0)]
excute 13:47:13.760281 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:13.764273 line       494                         if (i == j):
excute 13:47:13.768262 line       495                             continue
excute 13:47:13.771253 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:13.775242 line       494                         if (i == j):
excute 13:47:13.779232 line       496                         i_j_list.append((
excute 13:47:13.782223 line       497                             i, j,
excute 13:47:13.787210 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:13.791199 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:47:13.794191 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:13.798180 line       494                         if (i == j):
excute 13:47:13.801172 line       496                         i_j_list.append((
excute 13:47:13.804164 line       497                             i, j,
excute 13:47:13.808154 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:13.811145 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2)]
excute 13:47:13.814137 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:13.818127 line       494                         if (i == j):
excute 13:47:13.822117 line       496                         i_j_list.append((
excute 13:47:13.825107 line       497                             i, j,
excute 13:47:13.828100 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:13.831092 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0)]
excute 13:47:13.835081 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:13.838073 line       494                         if (i == j):
excute 13:47:13.842095 line       496                         i_j_list.append((
excute 13:47:13.845085 line       497                             i, j,
excute 13:47:13.849074 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:13.852067 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0)]
excute 13:47:13.856025 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:13.859048 line       494                         if (i == j):
excute 13:47:13.863006 line       496                         i_j_list.append((
excute 13:47:13.866030 line       497                             i, j,
excute 13:47:13.869021 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:13.873011 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1)]
excute 13:47:13.876003 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:13.879962 line       494                         if (i == j):
excute 13:47:13.883983 line       496                         i_j_list.append((
excute 13:47:13.886975 line       497                             i, j,
excute 13:47:13.891961 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:13.894954 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0)]
excute 13:47:13.897944 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:13.901937 line       494                         if (i == j):
excute 13:47:13.905892 line       496                         i_j_list.append((
excute 13:47:13.908915 line       497                             i, j,
excute 13:47:13.911906 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:13.915865 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:47:13.918889 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:13.921880 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:47:13.925869 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:13.928861 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:13.932851 line       494                         if (i == j):
excute 13:47:13.936811 line       496                         i_j_list.append((
excute 13:47:13.939832 line       497                             i, j,
excute 13:47:13.942825 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:13.946814 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0)]
excute 13:47:13.950771 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:13.953796 line       494                         if (i == j):
excute 13:47:13.957786 line       496                         i_j_list.append((
excute 13:47:13.961749 line       497                             i, j,
excute 13:47:13.964765 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:13.967726 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0)]
excute 13:47:13.970718 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:13.974707 line       494                         if (i == j):
excute 13:47:13.979697 line       496                         i_j_list.append((
excute 13:47:13.983685 line       497                             i, j,
excute 13:47:13.986677 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:13.990669 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0)]
excute 13:47:13.994687 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:13.998645 line       494                         if (i == j):
excute 13:47:14.001667 line       495                             continue
excute 13:47:14.005625 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:14.008648 line       494                         if (i == j):
excute 13:47:14.012607 line       496                         i_j_list.append((
excute 13:47:14.015597 line       497                             i, j,
excute 13:47:14.018590 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.021582 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2)]
excute 13:47:14.025578 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:14.028563 line       494                         if (i == j):
excute 13:47:14.032552 line       496                         i_j_list.append((
excute 13:47:14.035544 line       497                             i, j,
excute 13:47:14.038536 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.041528 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0)]
excute 13:47:14.045521 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:14.048521 line       494                         if (i == j):
excute 13:47:14.052499 line       496                         i_j_list.append((
excute 13:47:14.055492 line       497                             i, j,
excute 13:47:14.059480 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.062475 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0)]
excute 13:47:14.065466 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:14.069456 line       494                         if (i == j):
excute 13:47:14.073445 line       496                         i_j_list.append((
excute 13:47:14.077434 line       497                             i, j,
excute 13:47:14.081424 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.084416 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1)]
excute 13:47:14.088405 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:14.092394 line       494                         if (i == j):
excute 13:47:14.098379 line       496                         i_j_list.append((
excute 13:47:14.101370 line       497                             i, j,
excute 13:47:14.104360 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.108351 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0)]
excute 13:47:14.111343 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:14.115333 line       494                         if (i == j):
excute 13:47:14.119322 line       496                         i_j_list.append((
excute 13:47:14.122344 line       497                             i, j,
excute 13:47:14.125336 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.128328 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0)]
excute 13:47:14.135281 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:14.139267 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:47:14.142259 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:14.148011 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:14.152005 line       494                         if (i == j):
excute 13:47:14.155993 line       496                         i_j_list.append((
excute 13:47:14.159983 line       497                             i, j,
excute 13:47:14.163972 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.166964 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0)]
excute 13:47:14.170954 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:14.173943 line       494                         if (i == j):
excute 13:47:14.177933 line       496                         i_j_list.append((
excute 13:47:14.180925 line       497                             i, j,
excute 13:47:14.183917 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.187906 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0)]
excute 13:47:14.190898 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:14.194888 line       494                         if (i == j):
excute 13:47:14.199875 line       496                         i_j_list.append((
excute 13:47:14.202867 line       497                             i, j,
excute 13:47:14.206858 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.209848 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0)]
excute 13:47:14.213839 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:14.220825 line       494                         if (i == j):
excute 13:47:14.225819 line       496                         i_j_list.append((
excute 13:47:14.228830 line       497                             i, j,
excute 13:47:14.231820 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.234813 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0)]
excute 13:47:14.238772 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:14.241795 line       494                         if (i == j):
excute 13:47:14.245760 line       495                             continue
excute 13:47:14.248776 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:14.251768 line       494                         if (i == j):
excute 13:47:14.256736 line       496                         i_j_list.append((
excute 13:47:14.260723 line       497                             i, j,
excute 13:47:14.263736 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.266729 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0)]
excute 13:47:14.269720 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:14.273699 line       494                         if (i == j):
excute 13:47:14.278699 line       496                         i_j_list.append((
excute 13:47:14.281689 line       497                             i, j,
excute 13:47:14.284679 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.288639 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0)]
excute 13:47:14.291661 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:14.295620 line       494                         if (i == j):
excute 13:47:14.299608 line       496                         i_j_list.append((
excute 13:47:14.302600 line       497                             i, j,
excute 13:47:14.306597 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.309581 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1)]
excute 13:47:14.312573 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:14.316571 line       494                         if (i == j):
excute 13:47:14.319554 line       496                         i_j_list.append((
excute 13:47:14.323544 line       497                             i, j,
excute 13:47:14.328533 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.336512 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0)]
excute 13:47:14.340531 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:14.344489 line       494                         if (i == j):
excute 13:47:14.348478 line       496                         i_j_list.append((
excute 13:47:14.352499 line       497                             i, j,
excute 13:47:14.356456 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.359479 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0)]
excute 13:47:14.362471 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:14.366463 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:47:14.370436 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:14.373441 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:14.377433 line       494                         if (i == j):
excute 13:47:14.381390 line       496                         i_j_list.append((
excute 13:47:14.385379 line       497                             i, j,
excute 13:47:14.388370 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.391363 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0)]
excute 13:47:14.394355 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:14.398343 line       494                         if (i == j):
excute 13:47:14.403346 line       496                         i_j_list.append((
excute 13:47:14.406322 line       497                             i, j,
excute 13:47:14.409315 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.413304 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0)]
excute 13:47:14.416328 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:14.420293 line       494                         if (i == j):
excute 13:47:14.424278 line       496                         i_j_list.append((
excute 13:47:14.427299 line       497                             i, j,
excute 13:47:14.430292 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.434280 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0)]
excute 13:47:14.437271 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:14.441264 line       494                         if (i == j):
excute 13:47:14.444253 line       496                         i_j_list.append((
excute 13:47:14.448243 line       497                             i, j,
excute 13:47:14.452200 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.456189 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0)]
excute 13:47:14.459181 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:14.465167 line       494                         if (i == j):
excute 13:47:14.470186 line       496                         i_j_list.append((
excute 13:47:14.474174 line       497                             i, j,
excute 13:47:14.477183 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.480157 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2)]
excute 13:47:14.484146 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:14.488104 line       494                         if (i == j):
excute 13:47:14.492093 line       495                             continue
excute 13:47:14.495086 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:14.499079 line       494                         if (i == j):
excute 13:47:14.504063 line       496                         i_j_list.append((
excute 13:47:14.507086 line       497                             i, j,
excute 13:47:14.511074 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.515034 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0)]
excute 13:47:14.518057 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:14.522047 line       494                         if (i == j):
excute 13:47:14.525037 line       496                         i_j_list.append((
excute 13:47:14.529014 line       497                             i, j,
excute 13:47:14.531989 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.535976 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1)]
excute 13:47:14.538968 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:14.542957 line       494                         if (i == j):
excute 13:47:14.545949 line       496                         i_j_list.append((
excute 13:47:14.549938 line       497                             i, j,
excute 13:47:14.552931 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.556920 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0)]
excute 13:47:14.559912 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:14.563904 line       494                         if (i == j):
excute 13:47:14.567891 line       496                         i_j_list.append((
excute 13:47:14.571880 line       497                             i, j,
excute 13:47:14.574872 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.577864 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0)]
excute 13:47:14.581853 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:14.584845 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:47:14.588835 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:14.592824 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:14.596815 line       494                         if (i == j):
excute 13:47:14.600803 line       496                         i_j_list.append((
excute 13:47:14.608782 line       497                             i, j,
excute 13:47:14.611773 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.617757 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0)]
excute 13:47:14.621750 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:14.624771 line       494                         if (i == j):
excute 13:47:14.628757 line       496                         i_j_list.append((
excute 13:47:14.631720 line       497                             i, j,
excute 13:47:14.635744 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.639699 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0)]
excute 13:47:14.643688 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:14.647679 line       494                         if (i == j):
excute 13:47:14.651668 line       496                         i_j_list.append((
excute 13:47:14.654659 line       497                             i, j,
excute 13:47:14.657651 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.661640 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0)]
excute 13:47:14.664631 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:14.668622 line       494                         if (i == j):
excute 13:47:14.672611 line       496                         i_j_list.append((
excute 13:47:14.675603 line       497                             i, j,
excute 13:47:14.678595 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.682584 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0)]
excute 13:47:14.685576 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:14.689565 line       494                         if (i == j):
excute 13:47:14.693555 line       496                         i_j_list.append((
excute 13:47:14.696547 line       497                             i, j,
excute 13:47:14.700535 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.703528 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 2)]
excute 13:47:14.707518 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:14.711516 line       494                         if (i == j):
excute 13:47:14.715496 line       496                         i_j_list.append((
excute 13:47:14.720483 line       497                             i, j,
excute 13:47:14.724472 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.727464 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 2), (6, 5, 1, 0)]
excute 13:47:14.730456 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:14.734445 line       494                         if (i == j):
excute 13:47:14.738436 line       495                             continue
excute 13:47:14.741427 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:14.744418 line       494                         if (i == j):
excute 13:47:14.748409 line       496                         i_j_list.append((
excute 13:47:14.751400 line       497                             i, j,
excute 13:47:14.755391 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.758381 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 2), (6, 5, 1, 0), (6, 7, 1, 1)]
excute 13:47:14.762403 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:14.766396 line       494                         if (i == j):
excute 13:47:14.769384 line       496                         i_j_list.append((
excute 13:47:14.773375 line       497                             i, j,
excute 13:47:14.776366 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.779357 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 2), (6, 5, 1, 0), (6, 7, 1, 1), (6, 8, 1, 0)]
excute 13:47:14.783317 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:14.791294 line       494                         if (i == j):
excute 13:47:14.798277 line       496                         i_j_list.append((
excute 13:47:14.802264 line       497                             i, j,
excute 13:47:14.805256 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.808248 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 2), (6, 5, 1, 0), (6, 7, 1, 1), (6, 8, 1, 0), (6, 9, 1, 0)]
excute 13:47:14.813235 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:14.817239 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:47:14.820219 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:14.824233 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:14.827229 line       494                         if (i == j):
excute 13:47:14.831219 line       496                         i_j_list.append((
excute 13:47:14.835176 line       497                             i, j,
excute 13:47:14.838200 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.841191 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 2), (6, 5, 1, 0), (6, 7, 1, 1), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0)]
excute 13:47:14.844184 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:14.848164 line       494                         if (i == j):
excute 13:47:14.852132 line       496                         i_j_list.append((
excute 13:47:14.855154 line       497                             i, j,
excute 13:47:14.859145 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.862137 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 2), (6, 5, 1, 0), (6, 7, 1, 1), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0)]
excute 13:47:14.865127 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:14.869119 line       494                         if (i == j):
excute 13:47:14.873077 line       496                         i_j_list.append((
excute 13:47:14.876099 line       497                             i, j,
excute 13:47:14.879091 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.883080 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 2), (6, 5, 1, 0), (6, 7, 1, 1), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0)]
excute 13:47:14.886071 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:14.890041 line       494                         if (i == j):
excute 13:47:14.894020 line       496                         i_j_list.append((
excute 13:47:14.897042 line       497                             i, j,
excute 13:47:14.901000 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.904025 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 2), (6, 5, 1, 0), (6, 7, 1, 1), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0)]
excute 13:47:14.907015 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:14.910973 line       494                         if (i == j):
excute 13:47:14.914966 line       496                         i_j_list.append((
excute 13:47:14.918952 line       497                             i, j,
excute 13:47:14.921944 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.924936 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 2), (6, 5, 1, 0), (6, 7, 1, 1), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2)]
excute 13:47:14.927928 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:14.931917 line       494                         if (i == j):
excute 13:47:14.935907 line       496                         i_j_list.append((
excute 13:47:14.938899 line       497                             i, j,
excute 13:47:14.941891 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.945880 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 2), (6, 5, 1, 0), (6, 7, 1, 1), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0)]
excute 13:47:14.950867 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:14.954857 line       494                         if (i == j):
excute 13:47:14.957881 line       496                         i_j_list.append((
excute 13:47:14.961869 line       497                             i, j,
excute 13:47:14.965859 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:14.968851 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 2), (6, 5, 1, 0), (6, 7, 1, 1), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0)]
excute 13:47:14.972808 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:14.975833 line       494                         if (i == j):
excute 13:47:14.979820 line       495                             continue
excute 13:47:14.983792 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:14.986803 line       494                         if (i == j):
excute 13:47:14.990761 line       496                         i_j_list.append((
excute 13:47:14.993784 line       497                             i, j,
excute 13:47:14.996777 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:15.000766 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 2), (6, 5, 1, 0), (6, 7, 1, 1), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0)]
excute 13:47:15.003758 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:15.007717 line       494                         if (i == j):
excute 13:47:15.011705 line       496                         i_j_list.append((
excute 13:47:15.014729 line       497                             i, j,
excute 13:47:15.019683 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:15.022675 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 2), (6, 5, 1, 0), (6, 7, 1, 1), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0)]
excute 13:47:15.025667 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:15.029656 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:47:15.032648 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:15.036637 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:15.039632 line       494                         if (i == j):
excute 13:47:15.043621 line       496                         i_j_list.append((
excute 13:47:15.046610 line       497                             i, j,
excute 13:47:15.049603 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:15.052595 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 2), (6, 5, 1, 0), (6, 7, 1, 1), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0)]
excute 13:47:15.056584 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:15.060576 line       494                         if (i == j):
excute 13:47:15.064563 line       496                         i_j_list.append((
excute 13:47:15.067555 line       497                             i, j,
excute 13:47:15.071544 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:15.074569 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 2), (6, 5, 1, 0), (6, 7, 1, 1), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0)]
excute 13:47:15.077560 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:15.081549 line       494                         if (i == j):
excute 13:47:15.085539 line       496                         i_j_list.append((
excute 13:47:15.088530 line       497                             i, j,
excute 13:47:15.092522 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:15.095514 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 2), (6, 5, 1, 0), (6, 7, 1, 1), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0)]
excute 13:47:15.098504 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:15.102468 line       494                         if (i == j):
excute 13:47:15.106466 line       496                         i_j_list.append((
excute 13:47:15.109475 line       497                             i, j,
excute 13:47:15.112467 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:15.116425 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 2), (6, 5, 1, 0), (6, 7, 1, 1), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0)]
excute 13:47:15.120415 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:15.124403 line       494                         if (i == j):
excute 13:47:15.128394 line       496                         i_j_list.append((
excute 13:47:15.131384 line       497                             i, j,
excute 13:47:15.135374 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:15.138365 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 2), (6, 5, 1, 0), (6, 7, 1, 1), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 2)]
excute 13:47:15.142355 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:15.145347 line       494                         if (i == j):
excute 13:47:15.149336 line       496                         i_j_list.append((
excute 13:47:15.152328 line       497                             i, j,
excute 13:47:15.156318 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:15.159310 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 2), (6, 5, 1, 0), (6, 7, 1, 1), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 2), (8, 5, 1, 0)]
excute 13:47:15.163299 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:15.166291 line       494                         if (i == j):
excute 13:47:15.170280 line       496                         i_j_list.append((
excute 13:47:15.173272 line       497                             i, j,
excute 13:47:15.176264 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:15.179256 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 2), (6, 5, 1, 0), (6, 7, 1, 1), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 2), (8, 5, 1, 0), (8, 6, 1, 0)]
excute 13:47:15.183245 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:15.187235 line       494                         if (i == j):
excute 13:47:15.190226 line       496                         i_j_list.append((
excute 13:47:15.194216 line       497                             i, j,
excute 13:47:15.197208 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:15.201197 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 2), (6, 5, 1, 0), (6, 7, 1, 1), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 2), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 1)]
excute 13:47:15.204189 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:15.208179 line       494                         if (i == j):
excute 13:47:15.211170 line       495                             continue
excute 13:47:15.215161 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:15.221145 line       494                         if (i == j):
excute 13:47:15.225166 line       496                         i_j_list.append((
excute 13:47:15.229155 line       497                             i, j,
excute 13:47:15.232146 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:15.235139 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 2), (6, 5, 1, 0), (6, 7, 1, 1), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 2), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 1), (8, 9, 1, 0)]
excute 13:47:15.239097 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:15.242120 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:47:15.246087 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:15.249102 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:15.253091 line       494                         if (i == j):
excute 13:47:15.257049 line       496                         i_j_list.append((
excute 13:47:15.261040 line       497                             i, j,
excute 13:47:15.264029 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:15.267022 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 2), (6, 5, 1, 0), (6, 7, 1, 1), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 2), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 1), (8, 9, 1, 0), (9, 0, 1, 0)]
excute 13:47:15.271011 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:15.275000 line       494                         if (i == j):
excute 13:47:15.278990 line       496                         i_j_list.append((
excute 13:47:15.281982 line       497                             i, j,
excute 13:47:15.285971 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:15.288995 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 2), (6, 5, 1, 0), (6, 7, 1, 1), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 2), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 1), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0)]
excute 13:47:15.291988 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:15.295978 line       494                         if (i == j):
excute 13:47:15.299935 line       496                         i_j_list.append((
excute 13:47:15.302958 line       497                             i, j,
excute 13:47:15.305949 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:15.309939 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 2), (6, 5, 1, 0), (6, 7, 1, 1), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 2), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 1), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0)]
excute 13:47:15.312931 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:15.316888 line       494                         if (i == j):
excute 13:47:15.320893 line       496                         i_j_list.append((
excute 13:47:15.324868 line       497                             i, j,
excute 13:47:15.332846 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:15.336836 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 2), (6, 5, 1, 0), (6, 7, 1, 1), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 2), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 1), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0)]
excute 13:47:15.340826 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:15.344814 line       494                         if (i == j):
excute 13:47:15.348814 line       496                         i_j_list.append((
excute 13:47:15.353790 line       497                             i, j,
excute 13:47:15.356781 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:15.360771 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 2), (6, 5, 1, 0), (6, 7, 1, 1), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 2), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 1), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 2)]
excute 13:47:15.363765 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:15.368783 line       494                         if (i == j):
excute 13:47:15.372739 line       496                         i_j_list.append((
excute 13:47:15.376729 line       497                             i, j,
excute 13:47:15.380717 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:15.384707 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 2), (6, 5, 1, 0), (6, 7, 1, 1), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 2), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 1), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 2), (9, 5, 1, 0)]
excute 13:47:15.388698 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:15.392685 line       494                         if (i == j):
excute 13:47:15.397681 line       496                         i_j_list.append((
excute 13:47:15.400664 line       497                             i, j,
excute 13:47:15.403656 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:15.407646 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 2), (6, 5, 1, 0), (6, 7, 1, 1), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 2), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 1), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 2), (9, 5, 1, 0), (9, 6, 1, 0)]
excute 13:47:15.410637 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:15.414627 line       494                         if (i == j):
excute 13:47:15.417618 line       496                         i_j_list.append((
excute 13:47:15.420611 line       497                             i, j,
excute 13:47:15.424600 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:15.429587 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 2), (6, 5, 1, 0), (6, 7, 1, 1), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 2), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 1), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 2), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 1)]
excute 13:47:15.432579 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:15.436568 line       494                         if (i == j):
excute 13:47:15.440558 line       496                         i_j_list.append((
excute 13:47:15.443550 line       497                             i, j,
excute 13:47:15.447539 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:15.451529 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 2), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 2), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 2), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 1), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 2), (5, 6, -1, 0), (5, 7, -1, 1), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 2), (6, 5, 1, 0), (6, 7, 1, 1), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 2), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 1), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 2), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 1), (9, 8, 1, 0)]
excute 13:47:15.454553 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:15.458509 line       494                         if (i == j):
excute 13:47:15.462512 line       495                             continue
excute 13:47:15.465491 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:15.469481 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:47:15.472472 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 6, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (5, 7, -1, 1), (5, 4, -1, 2), (7, 4, -1, 2), (0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (0, 7, 0, 1), (0, 4, 0, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 5, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 8, 1, 0), (4, 7, 1, 1), (6, 7, 1, 1), (8, 7, 1, 1), (9, 7, 1, 1), (6, 4, 1, 2), (8, 4, 1, 2), (9, 4, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (1, 7, 2, 1), (2, 7, 2, 1), (1, 4, 2, 2), (2, 4, 2, 2), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (3, 7, 12, 1), (3, 4, 12, 2)]
excute 13:47:15.475464 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:47:15.479453 line       505                     if (self.RELOCATE):
excute 13:47:15.483444 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:47:15.487433 line       505                     if (self.RELOCATE):
excute 13:47:15.494414 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:47:15.499400 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, -1, 0)
excute 13:47:15.503389 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:47:15.507379 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:15.511368 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:15.515357 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, -1, 0)
excute 13:47:15.519730 line       556                     i = i_j[0]
excute 13:47:15.523754 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:15.527719 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:15.531700 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, -1, 0)
excute 13:47:15.535689 line       556                     i = i_j[0]
excute 13:47:15.538682 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:15.542671 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:15.546661 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, -1, 0)
excute 13:47:15.549652 line       556                     i = i_j[0]
excute 13:47:15.553645 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:15.557633 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:15.561620 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, -1, 0)
excute 13:47:15.564644 line       556                     i = i_j[0]
excute 13:47:15.568638 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:15.572592 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:15.576583 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, -1, 0)
excute 13:47:15.580580 line       556                     i = i_j[0]
excute 13:47:15.583564 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:15.587553 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:15.591543 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, -1, 0)
excute 13:47:15.595532 line       556                     i = i_j[0]
excute 13:47:15.599521 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:15.603510 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:15.607500 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -1, 0)
excute 13:47:15.611489 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:47:15.615477 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:15.619468 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:15.623457 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -1, 0)
excute 13:47:15.627446 line       556                     i = i_j[0]
excute 13:47:15.634427 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:15.637449 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:15.641408 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -1, 0)
excute 13:47:15.644431 line       556                     i = i_j[0]
excute 13:47:15.648423 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:15.651381 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:15.655370 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -1, 0)
excute 13:47:15.659359 line       556                     i = i_j[0]
excute 13:47:15.662351 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:15.666340 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:15.671329 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -1, 0)
excute 13:47:15.674351 line       556                     i = i_j[0]
excute 13:47:15.678341 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:15.681334 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:15.685321 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -1, 0)
excute 13:47:15.689312 line       556                     i = i_j[0]
excute 13:47:15.693270 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:15.696293 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:15.700282 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -1, 0)
excute 13:47:15.704240 line       556                     i = i_j[0]
excute 13:47:15.707263 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:15.711232 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:15.718202 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -1, 0)
excute 13:47:15.721194 line       556                     i = i_j[0]
excute 13:47:15.725190 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:15.728175 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:15.732171 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, -1, 1)
excute 13:47:15.736156 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:47:15.740146 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:15.745131 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:15.748124 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, -1, 2)
excute 13:47:15.752113 line       556                     i = i_j[0]
excute 13:47:15.756103 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:15.760092 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:15.764081 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -1, 2)
excute 13:47:15.768070 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:47:15.772060 line       557                     j = i_j[1]
excute 13:47:15.776050 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:15.780037 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 0)
excute 13:47:15.783060 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:47:15.787030 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:15.791040 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:15.794031 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:47:15.798020 line       556                     i = i_j[0]
excute 13:47:15.802011 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:15.805001 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:15.808961 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:47:15.811984 line       556                     i = i_j[0]
excute 13:47:15.815941 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:15.818964 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:15.822954 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 0)
excute 13:47:15.826943 line       556                     i = i_j[0]
excute 13:47:15.830915 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:15.833925 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:15.838880 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 0)
excute 13:47:15.841871 line       556                     i = i_j[0]
excute 13:47:15.845862 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:15.848884 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:15.852861 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:47:15.856832 line       556                     i = i_j[0]
excute 13:47:15.859823 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:15.863812 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:15.867802 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 0)
excute 13:47:15.870793 line       556                     i = i_j[0]
excute 13:47:15.874783 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:15.877808 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:15.881773 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 1)
excute 13:47:15.885755 line       556                     i = i_j[0]
excute 13:47:15.888777 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:15.892769 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:15.896726 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 2)
excute 13:47:15.900713 line       556                     i = i_j[0]
excute 13:47:15.904705 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:15.907713 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:15.911686 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 1, 0)
excute 13:47:15.918670 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:47:15.922657 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:15.926645 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:15.930641 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 1, 0)
excute 13:47:15.934623 line       556                     i = i_j[0]
excute 13:47:15.938614 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:15.942633 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:15.947592 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 1, 0)
excute 13:47:15.951580 line       556                     i = i_j[0]
excute 13:47:15.956566 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:15.959558 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:15.967536 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 1, 0)
excute 13:47:15.970559 line       556                     i = i_j[0]
excute 13:47:15.974517 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:15.977540 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:15.981530 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 1, 0)
excute 13:47:15.985489 line       556                     i = i_j[0]
excute 13:47:15.990474 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:15.994463 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:15.998453 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 1, 0)
excute 13:47:16.002442 line       556                     i = i_j[0]
excute 13:47:16.006437 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:16.010422 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.016437 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 1, 0)
excute 13:47:16.020426 line       556                     i = i_j[0]
excute 13:47:16.024384 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:16.027411 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.031397 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 1, 0)
excute 13:47:16.034389 line       556                     i = i_j[0]
excute 13:47:16.038347 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:16.041370 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.046326 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 1, 0)
excute 13:47:16.050347 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:47:16.054304 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:16.058293 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.062282 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 1, 0)
excute 13:47:16.065274 line       556                     i = i_j[0]
excute 13:47:16.069263 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:16.072288 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.076277 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 1, 0)
excute 13:47:16.080235 line       556                     i = i_j[0]
excute 13:47:16.083258 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:16.087215 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.091206 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 1, 0)
excute 13:47:16.094230 line       556                     i = i_j[0]
excute 13:47:16.098218 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:16.102175 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.105199 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 1, 0)
excute 13:47:16.109190 line       556                     i = i_j[0]
excute 13:47:16.112180 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:16.116169 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.120128 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 1, 0)
excute 13:47:16.123152 line       556                     i = i_j[0]
excute 13:47:16.127110 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:16.130133 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.135089 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 1, 0)
excute 13:47:16.138079 line       556                     i = i_j[0]
excute 13:47:16.142069 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:16.145062 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.150050 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 1, 0)
excute 13:47:16.154038 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:47:16.158049 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:16.162015 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.166011 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 1, 0)
excute 13:47:16.169030 line       556                     i = i_j[0]
excute 13:47:16.173018 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:16.176009 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.180000 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 1, 0)
excute 13:47:16.183978 line       556                     i = i_j[0]
excute 13:47:16.187947 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:16.190970 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.194929 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 1, 0)
excute 13:47:16.198918 line       556                     i = i_j[0]
excute 13:47:16.201941 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:16.205930 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.208922 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 1, 0)
excute 13:47:16.212912 line       556                     i = i_j[0]
excute 13:47:16.216870 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:16.221856 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.225845 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 1, 0)
excute 13:47:16.228837 line       556                     i = i_j[0]
excute 13:47:16.232826 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:16.235818 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.239807 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 1, 0)
excute 13:47:16.243798 line       556                     i = i_j[0]
excute 13:47:16.246788 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:16.251777 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.255765 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 0)
excute 13:47:16.258757 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:47:16.262746 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:16.266739 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.270725 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 0)
excute 13:47:16.274714 line       556                     i = i_j[0]
excute 13:47:16.279713 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:16.282724 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.286685 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:47:16.289706 line       556                     i = i_j[0]
excute 13:47:16.293695 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:16.297653 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.300677 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 0)
excute 13:47:16.304638 line       556                     i = i_j[0]
excute 13:47:16.307659 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:16.311649 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.315624 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 0)
excute 13:47:16.318628 line       556                     i = i_j[0]
excute 13:47:16.324582 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:16.336550 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.343534 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 0)
excute 13:47:16.347522 line       556                     i = i_j[0]
excute 13:47:16.360485 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:16.367468 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.373452 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 0)
excute 13:47:16.379434 line       556                     i = i_j[0]
excute 13:47:16.387415 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:16.392400 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.397389 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 1, 1)
excute 13:47:16.401378 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:47:16.406364 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:16.411350 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.416338 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 1, 1)
excute 13:47:16.420329 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:47:16.424315 line       557                     j = i_j[1]
excute 13:47:16.429302 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.433293 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 122
excute 13:47:16.440272 line       560                         if (t_tmp > self.TIME):
excute 13:47:16.450246 line       563                             if (available_vhecles[i][t] == 0):
excute 13:47:16.455233 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:47:16.463212 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:47:16.471189 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:47:16.479169 line       569                                     available_vhecles[i][t],
excute 13:47:16.486149 line       570                                     available_vhecles[j][t_tmp],
excute 13:47:16.495126 line       571                                     self.S_capacities[j],
excute 13:47:16.503104 line       572                                     demands[t][i][j],
excute 13:47:16.508093 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 3
calc_contract     Starting var:.. available_vhecles_target = 3
calc_contract     Starting var:.. capacity_target = 2
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 111
calc_contract     13:47:16.516070 call       352     def caluculate_contract(
calc_contract     13:47:16.520060 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:47:16.521056 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:47:16.522055 line       362         if (available_vhecles_start >= demand):
calc_contract     13:47:16.524048 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:47:16.524048 line       369                 can_contract = capacity_target - available_vhecles_target
calc_contract     New var:....... can_contract = -1
calc_contract     13:47:16.525046 line       370                 rsf += (available_vhecles_target + demand - capacity_target)
calc_contract     Modified var:.. rsf = 2
calc_contract     13:47:16.526045 line       385         return [can_contract, rsf, rse]
calc_contract     13:47:16.528038 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [-1, 2, 0]
excute Modified var:.. can_contract = -1
excute Modified var:.. rsf_tmp = 2
excute Modified var:.. rse_tmp = 0
excute 13:47:16.529034 line       575                                 rsf += rsf_tmp
excute Modified var:.. rsf = 139
excute 13:47:16.539011 line       576                                 rse += rse_tmp
excute 13:47:16.544994 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
move_cars     Starting var:.. i = 6
move_cars     Starting var:.. j = 7
move_cars     Starting var:.. t = 111
move_cars     Starting var:.. t_tmp = 122
move_cars     Starting var:.. can_contract = -1
move_cars     13:47:16.550979 call       388     def move_cars(
move_cars     13:47:16.556960 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:47:16.559952 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:47:16.561950 line       399         return available_vhecles
move_cars     13:47:16.564940 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute 13:47:16.567931 line       579                                 success += can_contract
excute Modified var:.. success = 46
excute 13:47:16.576908 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 1, 1)
excute 13:47:16.584885 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:47:16.590871 line       557                     j = i_j[1]
excute 13:47:16.596853 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.602839 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 1)
excute 13:47:16.610817 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:47:16.617798 line       557                     j = i_j[1]
excute 13:47:16.625776 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.631761 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 1, 2)
excute 13:47:16.638741 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:47:16.644725 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:16.651708 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.658688 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 127
excute 13:47:16.664675 line       560                         if (t_tmp > self.TIME):
excute 13:47:16.673649 line       563                             if (available_vhecles[i][t] == 0):
excute 13:47:16.681627 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:47:16.687611 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:47:16.695590 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:47:16.702571 line       569                                     available_vhecles[i][t],
excute 13:47:16.708555 line       570                                     available_vhecles[j][t_tmp],
excute 13:47:16.718529 line       571                                     self.S_capacities[j],
excute 13:47:16.725511 line       572                                     demands[t][i][j],
excute 13:47:16.731495 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 4
calc_contract     Starting var:.. available_vhecles_target = 2
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 111
calc_contract     13:47:16.738474 call       352     def caluculate_contract(
calc_contract     13:47:16.742465 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:47:16.743462 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:47:16.744460 line       362         if (available_vhecles_start >= demand):
calc_contract     13:47:16.746454 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:47:16.747452 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:47:16.748449 line       385         return [can_contract, rsf, rse]
calc_contract     13:47:16.749446 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute Modified var:.. can_contract = 1
excute Modified var:.. rsf_tmp = 0
excute 13:47:16.750444 line       575                                 rsf += rsf_tmp
excute 13:47:16.758422 line       576                                 rse += rse_tmp
excute 13:47:16.766400 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
move_cars     Starting var:.. i = 6
move_cars     Starting var:.. j = 4
move_cars     Starting var:.. t = 111
move_cars     Starting var:.. t_tmp = 127
move_cars     Starting var:.. can_contract = 1
move_cars     13:47:16.774380 call       388     def move_cars(
move_cars     13:47:16.780363 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:47:16.783355 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:47:16.785349 line       399         return available_vhecles
move_cars     13:47:16.787347 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute 13:47:16.792332 line       579                                 success += can_contract
excute Modified var:.. success = 47
excute 13:47:16.801308 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 1, 2)
excute 13:47:16.805297 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:47:16.809285 line       557                     j = i_j[1]
excute 13:47:16.813275 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.817265 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 2)
excute 13:47:16.820255 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:47:16.824246 line       557                     j = i_j[1]
excute 13:47:16.828235 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.831226 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 2, 0)
excute 13:47:16.835216 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:47:16.839213 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:16.842199 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.846189 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 2, 0)
excute 13:47:16.849179 line       556                     i = i_j[0]
excute 13:47:16.853169 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:16.857160 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.863948 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 2, 0)
excute 13:47:16.866942 line       556                     i = i_j[0]
excute 13:47:16.873926 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:16.876915 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.880905 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 2, 0)
excute 13:47:16.884895 line       556                     i = i_j[0]
excute 13:47:16.888884 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:16.891876 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.895866 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 2, 0)
excute 13:47:16.898856 line       556                     i = i_j[0]
excute 13:47:16.902846 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:16.906835 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.909829 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 2, 0)
excute 13:47:16.913817 line       556                     i = i_j[0]
excute 13:47:16.917807 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:16.921796 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.925785 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 2, 0)
excute 13:47:16.928810 line       556                     i = i_j[0]
excute 13:47:16.932767 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:16.935790 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.939747 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:47:16.942770 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:47:16.947726 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:16.951717 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.956702 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:47:16.960692 line       556                     i = i_j[0]
excute 13:47:16.963684 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:16.967704 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.971662 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:47:16.976649 line       556                     i = i_j[0]
excute 13:47:16.980640 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:16.984627 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:16.988619 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:47:16.991610 line       556                     i = i_j[0]
excute 13:47:16.996597 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:17.000585 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:17.004576 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:47:17.008564 line       556                     i = i_j[0]
excute 13:47:17.012563 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:17.016542 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:17.019536 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:47:17.023524 line       556                     i = i_j[0]
excute 13:47:17.027514 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:17.031503 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:17.035492 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:47:17.039482 line       556                     i = i_j[0]
excute 13:47:17.043472 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:17.046493 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:17.050452 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 2, 1)
excute 13:47:17.054473 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:47:17.058430 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:17.062420 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:17.066415 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 1)
excute 13:47:17.069431 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:47:17.073414 line       557                     j = i_j[1]
excute 13:47:17.078376 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:17.081370 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 2, 2)
excute 13:47:17.085389 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:47:17.089380 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:17.092371 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:17.096362 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 118
excute 13:47:17.100318 line       560                         if (t_tmp > self.TIME):
excute 13:47:17.103341 line       563                             if (available_vhecles[i][t] == 0):
excute 13:47:17.107333 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:47:17.110322 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:47:17.113314 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:47:17.117303 line       569                                     available_vhecles[i][t],
excute 13:47:17.120298 line       570                                     available_vhecles[j][t_tmp],
excute 13:47:17.123290 line       571                                     self.S_capacities[j],
excute 13:47:17.127278 line       572                                     demands[t][i][j],
excute 13:47:17.130269 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 1
calc_contract     Starting var:.. available_vhecles_target = 2
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 111
calc_contract     13:47:17.134229 call       352     def caluculate_contract(
calc_contract     13:47:17.137221 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:47:17.138220 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:47:17.138220 line       362         if (available_vhecles_start >= demand):
calc_contract     13:47:17.139214 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:47:17.140214 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:47:17.140214 line       385         return [can_contract, rsf, rse]
calc_contract     13:47:17.141212 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:47:17.142208 line       575                                 rsf += rsf_tmp
excute 13:47:17.147192 line       576                                 rse += rse_tmp
excute 13:47:17.150186 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
move_cars     Starting var:.. i = 1
move_cars     Starting var:.. j = 4
move_cars     Starting var:.. t = 111
move_cars     Starting var:.. t_tmp = 118
move_cars     Starting var:.. can_contract = 1
move_cars     13:47:17.154175 call       388     def move_cars(
move_cars     13:47:17.158195 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:47:17.159192 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:47:17.161187 line       399         return available_vhecles
move_cars     13:47:17.162184 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute 13:47:17.164179 line       579                                 success += can_contract
excute Modified var:.. success = 48
excute 13:47:17.168170 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 2)
excute 13:47:17.172157 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:47:17.176116 line       557                     j = i_j[1]
excute 13:47:17.181104 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:17.184096 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 12, 0)
excute 13:47:17.188084 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:47:17.192074 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:17.197062 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:17.201049 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 12, 0)
excute 13:47:17.204071 line       556                     i = i_j[0]
excute 13:47:17.208030 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:17.212051 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:17.219003 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 12, 0)
excute 13:47:17.223004 line       556                     i = i_j[0]
excute 13:47:17.225984 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:17.229972 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:17.233962 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 12, 0)
excute 13:47:17.237951 line       556                     i = i_j[0]
excute 13:47:17.241941 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:17.245930 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:17.249919 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 12, 0)
excute 13:47:17.253909 line       556                     i = i_j[0]
excute 13:47:17.258896 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:17.261885 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:17.265876 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 12, 0)
excute 13:47:17.269866 line       556                     i = i_j[0]
excute 13:47:17.273855 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:17.278840 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:17.283837 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 12, 0)
excute 13:47:17.287816 line       556                     i = i_j[0]
excute 13:47:17.291806 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:17.294829 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:17.298788 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 12, 1)
excute 13:47:17.301812 line       556                     i = i_j[0]
excute 13:47:17.305800 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:17.308791 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:17.312781 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 12, 2)
excute 13:47:17.316771 line       556                     i = i_j[0]
excute 13:47:17.320731 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:17.323752 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:17.331700 line       555                 for i_j in i_j_list:
excute 13:47:17.338680 line       581             self.write_matrix(
excute 13:47:17.342701 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:47:17.345693 line       583                 result_file_path,
excute 13:47:17.349651 line       584                 mode='a'
excute 13:47:17.358629 line       488         for t in time_steps:
excute Modified var:.. t = 112
excute 13:47:17.365610 line       489             if (t != self.TIME + 1):
excute 13:47:17.372590 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:47:17.378607 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:47:17.383561 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:47:17.390542 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:17.394534 line       494                         if (i == j):
excute 13:47:17.398521 line       495                             continue
excute 13:47:17.402510 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:17.405501 line       494                         if (i == j):
excute 13:47:17.409492 line       496                         i_j_list.append((
excute 13:47:17.414479 line       497                             i, j,
excute 13:47:17.419467 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:17.428446 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0)]
excute 13:47:17.431433 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:17.437416 line       494                         if (i == j):
excute 13:47:17.441406 line       496                         i_j_list.append((
excute 13:47:17.446396 line       497                             i, j,
excute 13:47:17.452376 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:17.458360 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0)]
excute 13:47:17.466340 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:17.473324 line       494                         if (i == j):
excute 13:47:17.477310 line       496                         i_j_list.append((
excute 13:47:17.480302 line       497                             i, j,
excute 13:47:17.484292 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:17.490278 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:47:17.494265 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:17.500250 line       494                         if (i == j):
excute 13:47:17.507231 line       496                         i_j_list.append((
excute 13:47:17.510223 line       497                             i, j,
excute 13:47:17.514212 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:17.519198 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0)]
excute 13:47:17.522191 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:17.527179 line       494                         if (i == j):
excute 13:47:17.531167 line       496                         i_j_list.append((
excute 13:47:17.535158 line       497                             i, j,
excute 13:47:17.539145 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:17.542138 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0)]
excute 13:47:17.545129 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:17.549117 line       494                         if (i == j):
excute 13:47:17.553109 line       496                         i_j_list.append((
excute 13:47:17.557099 line       497                             i, j,
excute 13:47:17.560090 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:17.564079 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0)]
excute 13:47:17.567072 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:17.572059 line       494                         if (i == j):
excute 13:47:17.576048 line       496                         i_j_list.append((
excute 13:47:17.579039 line       497                             i, j,
excute 13:47:17.583029 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:17.586021 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0)]
excute 13:47:17.590010 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:17.594997 line       494                         if (i == j):
excute 13:47:17.597988 line       496                         i_j_list.append((
excute 13:47:17.601978 line       497                             i, j,
excute 13:47:17.604969 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:17.607961 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0)]
excute 13:47:17.611950 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:17.614943 line       494                         if (i == j):
excute 13:47:17.618932 line       496                         i_j_list.append((
excute 13:47:17.621924 line       497                             i, j,
excute 13:47:17.624916 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:17.628906 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0)]
excute 13:47:17.631897 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:17.635888 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:47:17.638878 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:17.642868 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:17.645890 line       494                         if (i == j):
excute 13:47:17.650846 line       496                         i_j_list.append((
excute 13:47:17.655833 line       497                             i, j,
excute 13:47:17.658855 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:17.662815 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0)]
excute 13:47:17.665809 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:17.670827 line       494                         if (i == j):
excute 13:47:17.674782 line       495                             continue
excute 13:47:17.677775 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:17.680767 line       494                         if (i == j):
excute 13:47:17.684757 line       496                         i_j_list.append((
excute 13:47:17.688746 line       497                             i, j,
excute 13:47:17.692735 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:17.697723 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0)]
excute 13:47:17.701711 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:17.704703 line       494                         if (i == j):
excute 13:47:17.708693 line       496                         i_j_list.append((
excute 13:47:17.712681 line       497                             i, j,
excute 13:47:17.715672 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:17.718665 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0)]
excute 13:47:17.722654 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:17.726643 line       494                         if (i == j):
excute 13:47:17.730634 line       496                         i_j_list.append((
excute 13:47:17.734623 line       497                             i, j,
excute 13:47:17.737615 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:17.740607 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0)]
excute 13:47:17.744596 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:17.748586 line       494                         if (i == j):
excute 13:47:17.752575 line       496                         i_j_list.append((
excute 13:47:17.756565 line       497                             i, j,
excute 13:47:17.760552 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:17.763544 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0)]
excute 13:47:17.767535 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:17.770527 line       494                         if (i == j):
excute 13:47:17.774519 line       496                         i_j_list.append((
excute 13:47:17.777508 line       497                             i, j,
excute 13:47:17.781498 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:17.784490 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0)]
excute 13:47:17.787481 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:17.791472 line       494                         if (i == j):
excute 13:47:17.794463 line       496                         i_j_list.append((
excute 13:47:17.799451 line       497                             i, j,
excute 13:47:17.802442 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:17.806432 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0)]
excute 13:47:17.809424 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:17.813412 line       494                         if (i == j):
excute 13:47:17.817401 line       496                         i_j_list.append((
excute 13:47:17.820394 line       497                             i, j,
excute 13:47:17.824383 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:17.827376 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0)]
excute 13:47:17.831365 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:17.835355 line       494                         if (i == j):
excute 13:47:17.839344 line       496                         i_j_list.append((
excute 13:47:17.843333 line       497                             i, j,
excute 13:47:17.846325 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:17.850314 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0)]
excute 13:47:17.854304 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:17.858293 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:47:17.861284 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:17.865274 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:17.868265 line       494                         if (i == j):
excute 13:47:17.872256 line       496                         i_j_list.append((
excute 13:47:17.875247 line       497                             i, j,
excute 13:47:17.878238 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:17.881231 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0)]
excute 13:47:17.885220 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:17.889210 line       494                         if (i == j):
excute 13:47:17.892202 line       496                         i_j_list.append((
excute 13:47:17.896191 line       497                             i, j,
excute 13:47:17.900181 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:17.908159 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0)]
excute 13:47:17.911151 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:17.919131 line       494                         if (i == j):
excute 13:47:17.925115 line       495                             continue
excute 13:47:17.929101 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:17.934123 line       494                         if (i == j):
excute 13:47:17.938080 line       496                         i_j_list.append((
excute 13:47:17.941102 line       497                             i, j,
excute 13:47:17.944094 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:17.948084 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:47:17.952041 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:17.956031 line       494                         if (i == j):
excute 13:47:17.960021 line       496                         i_j_list.append((
excute 13:47:17.964010 line       497                             i, j,
excute 13:47:17.968000 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:17.970992 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:47:17.974982 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:17.978971 line       494                         if (i == j):
excute 13:47:17.982959 line       496                         i_j_list.append((
excute 13:47:17.986948 line       497                             i, j,
excute 13:47:17.989942 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:17.992933 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:47:17.996920 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:18.000911 line       494                         if (i == j):
excute 13:47:18.006895 line       496                         i_j_list.append((
excute 13:47:18.011882 line       497                             i, j,
excute 13:47:18.014873 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.017865 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0)]
excute 13:47:18.021855 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:18.024847 line       494                         if (i == j):
excute 13:47:18.028837 line       496                         i_j_list.append((
excute 13:47:18.031828 line       497                             i, j,
excute 13:47:18.034820 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.038808 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:47:18.041802 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:18.045792 line       494                         if (i == j):
excute 13:47:18.048783 line       496                         i_j_list.append((
excute 13:47:18.052773 line       497                             i, j,
excute 13:47:18.055765 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.059754 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:47:18.063744 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:18.067733 line       494                         if (i == j):
excute 13:47:18.071722 line       496                         i_j_list.append((
excute 13:47:18.074745 line       497                             i, j,
excute 13:47:18.078733 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.081725 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:47:18.084717 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:18.088706 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:47:18.091699 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:18.095656 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:18.098680 line       494                         if (i == j):
excute 13:47:18.102641 line       496                         i_j_list.append((
excute 13:47:18.105662 line       497                             i, j,
excute 13:47:18.110619 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.113611 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0)]
excute 13:47:18.116602 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:18.121599 line       494                         if (i == j):
excute 13:47:18.125579 line       496                         i_j_list.append((
excute 13:47:18.128570 line       497                             i, j,
excute 13:47:18.132560 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.136549 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0)]
excute 13:47:18.140537 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:18.144529 line       494                         if (i == j):
excute 13:47:18.148516 line       496                         i_j_list.append((
excute 13:47:18.151538 line       497                             i, j,
excute 13:47:18.155528 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.158520 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0)]
excute 13:47:18.162484 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:18.165504 line       494                         if (i == j):
excute 13:47:18.169491 line       495                             continue
excute 13:47:18.172482 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:18.176476 line       494                         if (i == j):
excute 13:47:18.179432 line       496                         i_j_list.append((
excute 13:47:18.183423 line       497                             i, j,
excute 13:47:18.186416 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.189407 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0)]
excute 13:47:18.193397 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:18.197387 line       494                         if (i == j):
excute 13:47:18.201406 line       496                         i_j_list.append((
excute 13:47:18.204397 line       497                             i, j,
excute 13:47:18.208390 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.213344 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0)]
excute 13:47:18.219361 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:18.225947 line       494                         if (i == j):
excute 13:47:18.229933 line       496                         i_j_list.append((
excute 13:47:18.232923 line       497                             i, j,
excute 13:47:18.237908 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.240901 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0)]
excute 13:47:18.244891 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:18.247881 line       494                         if (i == j):
excute 13:47:18.251871 line       496                         i_j_list.append((
excute 13:47:18.255870 line       497                             i, j,
excute 13:47:18.258853 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.262858 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0)]
excute 13:47:18.265834 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:18.268826 line       494                         if (i == j):
excute 13:47:18.272816 line       496                         i_j_list.append((
excute 13:47:18.276836 line       497                             i, j,
excute 13:47:18.279828 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.282820 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0)]
excute 13:47:18.286813 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:18.289802 line       494                         if (i == j):
excute 13:47:18.293791 line       496                         i_j_list.append((
excute 13:47:18.296783 line       497                             i, j,
excute 13:47:18.300772 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.303767 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0)]
excute 13:47:18.307748 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:18.311713 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:47:18.315734 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:18.318725 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:18.322716 line       494                         if (i == j):
excute 13:47:18.327671 line       496                         i_j_list.append((
excute 13:47:18.334652 line       497                             i, j,
excute 13:47:18.339636 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.343626 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0)]
excute 13:47:18.346617 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:18.350611 line       494                         if (i == j):
excute 13:47:18.355595 line       496                         i_j_list.append((
excute 13:47:18.359599 line       497                             i, j,
excute 13:47:18.362577 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.366566 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0)]
excute 13:47:18.369558 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:18.374551 line       494                         if (i == j):
excute 13:47:18.378535 line       496                         i_j_list.append((
excute 13:47:18.381530 line       497                             i, j,
excute 13:47:18.386519 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.389536 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0)]
excute 13:47:18.392527 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:18.396517 line       494                         if (i == j):
excute 13:47:18.400506 line       496                         i_j_list.append((
excute 13:47:18.404495 line       497                             i, j,
excute 13:47:18.407487 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.411445 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0)]
excute 13:47:18.415436 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:18.419424 line       494                         if (i == j):
excute 13:47:18.423445 line       495                             continue
excute 13:47:18.426436 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:18.429428 line       494                         if (i == j):
excute 13:47:18.433418 line       496                         i_j_list.append((
excute 13:47:18.437408 line       497                             i, j,
excute 13:47:18.440399 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.443392 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0)]
excute 13:47:18.447350 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:18.451339 line       494                         if (i == j):
excute 13:47:18.455360 line       496                         i_j_list.append((
excute 13:47:18.459325 line       497                             i, j,
excute 13:47:18.462341 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.465335 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0)]
excute 13:47:18.469325 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:18.473280 line       494                         if (i == j):
excute 13:47:18.476304 line       496                         i_j_list.append((
excute 13:47:18.480268 line       497                             i, j,
excute 13:47:18.483286 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.486277 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0)]
excute 13:47:18.490267 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:18.494257 line       494                         if (i == j):
excute 13:47:18.497247 line       496                         i_j_list.append((
excute 13:47:18.501236 line       497                             i, j,
excute 13:47:18.504228 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.508194 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0)]
excute 13:47:18.511178 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:18.515167 line       494                         if (i == j):
excute 13:47:18.520193 line       496                         i_j_list.append((
excute 13:47:18.523179 line       497                             i, j,
excute 13:47:18.526171 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.530128 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0)]
excute 13:47:18.533151 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:18.537133 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:47:18.540133 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:18.544124 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:18.547115 line       494                         if (i == j):
excute 13:47:18.551075 line       496                         i_j_list.append((
excute 13:47:18.555061 line       497                             i, j,
excute 13:47:18.558085 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.561076 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0)]
excute 13:47:18.565067 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:18.569026 line       494                         if (i == j):
excute 13:47:18.573016 line       496                         i_j_list.append((
excute 13:47:18.576005 line       497                             i, j,
excute 13:47:18.578997 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.582986 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0)]
excute 13:47:18.585978 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:18.589967 line       494                         if (i == j):
excute 13:47:18.593958 line       496                         i_j_list.append((
excute 13:47:18.596948 line       497                             i, j,
excute 13:47:18.599941 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.602933 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0)]
excute 13:47:18.606922 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:18.610912 line       494                         if (i == j):
excute 13:47:18.613903 line       496                         i_j_list.append((
excute 13:47:18.617894 line       497                             i, j,
excute 13:47:18.621917 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.624874 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0)]
excute 13:47:18.627866 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:18.631855 line       494                         if (i == j):
excute 13:47:18.635844 line       496                         i_j_list.append((
excute 13:47:18.639863 line       497                             i, j,
excute 13:47:18.642859 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.645851 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0)]
excute 13:47:18.649839 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:18.653831 line       494                         if (i == j):
excute 13:47:18.657787 line       495                             continue
excute 13:47:18.660809 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:18.664769 line       494                         if (i == j):
excute 13:47:18.670752 line       496                         i_j_list.append((
excute 13:47:18.673743 line       497                             i, j,
excute 13:47:18.676735 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.680726 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0)]
excute 13:47:18.683717 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:18.687713 line       494                         if (i == j):
excute 13:47:18.690698 line       496                         i_j_list.append((
excute 13:47:18.694689 line       497                             i, j,
excute 13:47:18.697679 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.701669 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0)]
excute 13:47:18.704660 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:18.708650 line       494                         if (i == j):
excute 13:47:18.712640 line       496                         i_j_list.append((
excute 13:47:18.716634 line       497                             i, j,
excute 13:47:18.720619 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.724610 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0)]
excute 13:47:18.728599 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:18.732587 line       494                         if (i == j):
excute 13:47:18.736583 line       496                         i_j_list.append((
excute 13:47:18.740566 line       497                             i, j,
excute 13:47:18.743559 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.746551 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0)]
excute 13:47:18.750540 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:18.755526 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:47:18.758517 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:18.762506 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:18.765498 line       494                         if (i == j):
excute 13:47:18.769495 line       496                         i_j_list.append((
excute 13:47:18.772479 line       497                             i, j,
excute 13:47:18.775472 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.779460 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0)]
excute 13:47:18.782453 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:18.786442 line       494                         if (i == j):
excute 13:47:18.789434 line       496                         i_j_list.append((
excute 13:47:18.796415 line       497                             i, j,
excute 13:47:18.800405 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.805391 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0)]
excute 13:47:18.809380 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:18.814371 line       494                         if (i == j):
excute 13:47:18.818358 line       496                         i_j_list.append((
excute 13:47:18.822349 line       497                             i, j,
excute 13:47:18.827333 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.830325 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0)]
excute 13:47:18.834315 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:18.837306 line       494                         if (i == j):
excute 13:47:18.841298 line       496                         i_j_list.append((
excute 13:47:18.844287 line       497                             i, j,
excute 13:47:18.847280 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.851268 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0)]
excute 13:47:18.854260 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:18.858250 line       494                         if (i == j):
excute 13:47:18.862240 line       496                         i_j_list.append((
excute 13:47:18.865231 line       497                             i, j,
excute 13:47:18.868223 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.871215 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0)]
excute 13:47:18.874207 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:18.878196 line       494                         if (i == j):
excute 13:47:18.882186 line       496                         i_j_list.append((
excute 13:47:18.886192 line       497                             i, j,
excute 13:47:18.889167 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.892159 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0)]
excute 13:47:18.895151 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:18.899141 line       494                         if (i == j):
excute 13:47:18.903130 line       495                             continue
excute 13:47:18.910111 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:18.913103 line       494                         if (i == j):
excute 13:47:18.917093 line       496                         i_j_list.append((
excute 13:47:18.921082 line       497                             i, j,
excute 13:47:18.924074 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.929062 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0)]
excute 13:47:18.933050 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:18.936042 line       494                         if (i == j):
excute 13:47:18.940032 line       496                         i_j_list.append((
excute 13:47:18.944021 line       497                             i, j,
excute 13:47:18.948011 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.951999 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0)]
excute 13:47:18.954992 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:18.958980 line       494                         if (i == j):
excute 13:47:18.963968 line       496                         i_j_list.append((
excute 13:47:18.969953 line       497                             i, j,
excute 13:47:18.973940 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:18.977931 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0)]
excute 13:47:18.980923 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:18.985909 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:47:18.988900 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:18.992893 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:18.995882 line       494                         if (i == j):
excute 13:47:18.999895 line       496                         i_j_list.append((
excute 13:47:19.003861 line       497                             i, j,
excute 13:47:19.007850 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:19.011840 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0)]
excute 13:47:19.014832 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:19.018822 line       494                         if (i == j):
excute 13:47:19.022812 line       496                         i_j_list.append((
excute 13:47:19.025803 line       497                             i, j,
excute 13:47:19.028794 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:19.033781 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0)]
excute 13:47:19.036773 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:19.040763 line       494                         if (i == j):
excute 13:47:19.044753 line       496                         i_j_list.append((
excute 13:47:19.047744 line       497                             i, j,
excute 13:47:19.050736 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:19.054725 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0)]
excute 13:47:19.058716 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:19.061706 line       494                         if (i == j):
excute 13:47:19.065696 line       496                         i_j_list.append((
excute 13:47:19.068720 line       497                             i, j,
excute 13:47:19.072709 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:19.075700 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0)]
excute 13:47:19.079691 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:19.083649 line       494                         if (i == j):
excute 13:47:19.086671 line       496                         i_j_list.append((
excute 13:47:19.090634 line       497                             i, j,
excute 13:47:19.093653 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:19.096646 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0)]
excute 13:47:19.100603 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:19.104594 line       494                         if (i == j):
excute 13:47:19.108581 line       496                         i_j_list.append((
excute 13:47:19.112570 line       497                             i, j,
excute 13:47:19.115594 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:19.118587 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0)]
excute 13:47:19.122571 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:19.125567 line       494                         if (i == j):
excute 13:47:19.129558 line       496                         i_j_list.append((
excute 13:47:19.133519 line       497                             i, j,
excute 13:47:19.138533 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:19.141524 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0)]
excute 13:47:19.145516 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:19.149472 line       494                         if (i == j):
excute 13:47:19.152495 line       495                             continue
excute 13:47:19.156485 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:19.160447 line       494                         if (i == j):
excute 13:47:19.164433 line       496                         i_j_list.append((
excute 13:47:19.167455 line       497                             i, j,
excute 13:47:19.171414 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:19.174436 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0)]
excute 13:47:19.177430 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:19.181387 line       494                         if (i == j):
excute 13:47:19.185377 line       496                         i_j_list.append((
excute 13:47:19.188400 line       497                             i, j,
excute 13:47:19.191391 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:19.195380 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0)]
excute 13:47:19.198341 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:19.202330 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:47:19.206320 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:19.209311 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:19.215296 line       494                         if (i == j):
excute 13:47:19.220316 line       496                         i_j_list.append((
excute 13:47:19.224304 line       497                             i, j,
excute 13:47:19.227295 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:19.230287 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0)]
excute 13:47:19.234277 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:19.238236 line       494                         if (i == j):
excute 13:47:19.243237 line       496                         i_j_list.append((
excute 13:47:19.246213 line       497                             i, j,
excute 13:47:19.249205 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:19.253194 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0)]
excute 13:47:19.256186 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:19.261173 line       494                         if (i == j):
excute 13:47:19.264165 line       496                         i_j_list.append((
excute 13:47:19.268154 line       497                             i, j,
excute 13:47:19.271146 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:19.274138 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0)]
excute 13:47:19.279125 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:19.283114 line       494                         if (i == j):
excute 13:47:19.286106 line       496                         i_j_list.append((
excute 13:47:19.290095 line       497                             i, j,
excute 13:47:19.293088 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:19.296080 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0)]
excute 13:47:19.300069 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:19.304059 line       494                         if (i == j):
excute 13:47:19.307050 line       496                         i_j_list.append((
excute 13:47:19.311039 line       497                             i, j,
excute 13:47:19.314032 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:19.317023 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0)]
excute 13:47:19.321023 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:19.325004 line       494                         if (i == j):
excute 13:47:19.330987 line       496                         i_j_list.append((
excute 13:47:19.338967 line       497                             i, j,
excute 13:47:19.344951 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:19.348970 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0)]
excute 13:47:19.353934 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:19.357914 line       494                         if (i == j):
excute 13:47:19.360906 line       496                         i_j_list.append((
excute 13:47:19.364895 line       497                             i, j,
excute 13:47:19.368919 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:19.372875 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0)]
excute 13:47:19.375866 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:19.379856 line       494                         if (i == j):
excute 13:47:19.383845 line       496                         i_j_list.append((
excute 13:47:19.387834 line       497                             i, j,
excute 13:47:19.390826 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:19.394816 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0)]
excute 13:47:19.397808 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:19.401798 line       494                         if (i == j):
excute 13:47:19.405788 line       495                             continue
excute 13:47:19.408778 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:19.411770 line       494                         if (i == j):
excute 13:47:19.415760 line       496                         i_j_list.append((
excute 13:47:19.419750 line       497                             i, j,
excute 13:47:19.422741 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:19.426731 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0)]
excute 13:47:19.430734 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:19.433713 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:47:19.437701 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:19.442689 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:19.447675 line       494                         if (i == j):
excute 13:47:19.451665 line       496                         i_j_list.append((
excute 13:47:19.455655 line       497                             i, j,
excute 13:47:19.458645 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:19.462635 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0)]
excute 13:47:19.465626 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:19.469617 line       494                         if (i == j):
excute 13:47:19.473606 line       496                         i_j_list.append((
excute 13:47:19.476628 line       497                             i, j,
excute 13:47:19.479621 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:19.483612 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0)]
excute 13:47:19.486602 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:19.490561 line       494                         if (i == j):
excute 13:47:19.494582 line       496                         i_j_list.append((
excute 13:47:19.497573 line       497                             i, j,
excute 13:47:19.500564 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:19.504555 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0)]
excute 13:47:19.508513 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:19.512501 line       494                         if (i == j):
excute 13:47:19.515493 line       496                         i_j_list.append((
excute 13:47:19.519482 line       497                             i, j,
excute 13:47:19.522474 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:19.526473 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0)]
excute 13:47:19.529455 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:19.533446 line       494                         if (i == j):
excute 13:47:19.536437 line       496                         i_j_list.append((
excute 13:47:19.540427 line       497                             i, j,
excute 13:47:19.543418 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:19.548406 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0)]
excute 13:47:19.551430 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:19.555421 line       494                         if (i == j):
excute 13:47:19.559408 line       496                         i_j_list.append((
excute 13:47:19.563399 line       497                             i, j,
excute 13:47:19.566389 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:19.569381 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0)]
excute 13:47:19.573370 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:19.577331 line       494                         if (i == j):
excute 13:47:19.581317 line       496                         i_j_list.append((
excute 13:47:19.585309 line       497                             i, j,
excute 13:47:19.588300 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:19.593286 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0)]
excute 13:47:19.597275 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:19.601267 line       494                         if (i == j):
excute 13:47:19.606252 line       496                         i_j_list.append((
excute 13:47:19.612234 line       497                             i, j,
excute 13:47:19.615228 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:19.619218 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0)]
excute 13:47:19.623207 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:19.628192 line       494                         if (i == j):
excute 13:47:19.632195 line       496                         i_j_list.append((
excute 13:47:19.635207 line       497                             i, j,
excute 13:47:19.639164 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:19.643154 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0)]
excute 13:47:19.647143 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:19.652162 line       494                         if (i == j):
excute 13:47:19.656119 line       495                             continue
excute 13:47:19.659142 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:19.663130 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:47:19.666092 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0)]
excute 13:47:19.670112 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:47:19.674076 line       505                     if (self.RELOCATE):
excute 13:47:19.678060 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:47:19.681083 line       505                     if (self.RELOCATE):
excute 13:47:19.685072 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:47:19.689030 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, -1, 0)
excute 13:47:19.692053 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:47:19.696046 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:19.700000 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:19.703991 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, -1, 0)
excute 13:47:19.706981 line       556                     i = i_j[0]
excute 13:47:19.709973 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:19.714960 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:19.720944 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, -1, 0)
excute 13:47:19.724933 line       556                     i = i_j[0]
excute 13:47:19.728924 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:19.731915 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:19.735905 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, -1, 0)
excute 13:47:19.738896 line       556                     i = i_j[0]
excute 13:47:19.742885 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:19.745877 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:19.749866 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, -1, 0)
excute 13:47:19.753857 line       556                     i = i_j[0]
excute 13:47:19.758876 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:19.761834 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:19.765825 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, -1, 0)
excute 13:47:19.768848 line       556                     i = i_j[0]
excute 13:47:19.772837 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:19.776826 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:19.780786 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, -1, 0)
excute 13:47:19.783809 line       556                     i = i_j[0]
excute 13:47:19.787799 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:19.790790 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:19.794748 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, -1, 0)
excute 13:47:19.797770 line       556                     i = i_j[0]
excute 13:47:19.801729 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:19.804751 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:19.808718 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, -1, 0)
excute 13:47:19.811733 line       556                     i = i_j[0]
excute 13:47:19.815690 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:19.819680 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:19.822705 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -1, 0)
excute 13:47:19.826663 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:47:19.834643 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:19.838631 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:19.842620 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -1, 0)
excute 13:47:19.846611 line       556                     i = i_j[0]
excute 13:47:19.851624 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:19.856585 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:19.860571 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -1, 0)
excute 13:47:19.863596 line       556                     i = i_j[0]
excute 13:47:19.867583 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:19.870577 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:19.875534 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -1, 0)
excute 13:47:19.878524 line       556                     i = i_j[0]
excute 13:47:19.883512 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:19.886533 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:19.890523 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -1, 0)
excute 13:47:19.894480 line       556                     i = i_j[0]
excute 13:47:19.897504 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:19.901462 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:19.904485 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -1, 0)
excute 13:47:19.908475 line       556                     i = i_j[0]
excute 13:47:19.912435 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:19.915455 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:19.919414 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -1, 0)
excute 13:47:19.922438 line       556                     i = i_j[0]
excute 13:47:19.926394 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:19.933393 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:19.938376 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -1, 0)
excute 13:47:19.941356 line       556                     i = i_j[0]
excute 13:47:19.948336 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:19.952326 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:19.956347 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -1, 0)
excute 13:47:19.960306 line       556                     i = i_j[0]
excute 13:47:19.964327 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:19.967318 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:19.971275 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 0)
excute 13:47:19.975264 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:47:19.978289 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:19.982277 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:19.986236 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:47:19.989260 line       556                     i = i_j[0]
excute 13:47:19.993226 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:19.996240 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.000229 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:47:20.004195 line       556                     i = i_j[0]
excute 13:47:20.007212 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:20.012166 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.015191 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 0)
excute 13:47:20.019179 line       556                     i = i_j[0]
excute 13:47:20.023139 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:20.026129 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.031117 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 0)
excute 13:47:20.034109 line       556                     i = i_j[0]
excute 13:47:20.038096 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:20.042087 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.045079 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 0)
excute 13:47:20.049068 line       556                     i = i_j[0]
excute 13:47:20.053057 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:20.057047 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.062034 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:47:20.066022 line       556                     i = i_j[0]
excute 13:47:20.069046 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:20.073035 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.077004 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:47:20.080016 line       556                     i = i_j[0]
excute 13:47:20.083975 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:20.086998 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.090987 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 0)
excute 13:47:20.093978 line       556                     i = i_j[0]
excute 13:47:20.097969 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:20.100959 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.104949 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 1, 0)
excute 13:47:20.108906 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:47:20.111930 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:20.115920 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.119878 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 1, 0)
excute 13:47:20.122901 line       556                     i = i_j[0]
excute 13:47:20.126858 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:20.129884 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.134838 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 1, 0)
excute 13:47:20.137829 line       556                     i = i_j[0]
excute 13:47:20.141819 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:20.144811 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.148800 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 1, 0)
excute 13:47:20.152789 line       556                     i = i_j[0]
excute 13:47:20.156779 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:20.159771 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.163762 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 1, 0)
excute 13:47:20.167781 line       556                     i = i_j[0]
excute 13:47:20.171739 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:20.174764 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.178721 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 1, 0)
excute 13:47:20.181743 line       556                     i = i_j[0]
excute 13:47:20.185735 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:20.189723 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.193681 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 1, 0)
excute 13:47:20.196704 line       556                     i = i_j[0]
excute 13:47:20.200663 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:20.203685 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.207643 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 1, 0)
excute 13:47:20.210666 line       556                     i = i_j[0]
excute 13:47:20.214625 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:20.220641 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.224606 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 1, 0)
excute 13:47:20.227622 line       556                     i = i_j[0]
excute 13:47:20.231612 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:20.234603 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.238561 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 1, 0)
excute 13:47:20.241584 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:47:20.245555 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:20.249532 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.253521 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 1, 0)
excute 13:47:20.256543 line       556                     i = i_j[0]
excute 13:47:20.261499 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:20.264491 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.269516 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 1, 0)
excute 13:47:20.272501 line       556                     i = i_j[0]
excute 13:47:20.276492 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:20.279482 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.283471 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 1, 0)
excute 13:47:20.287453 line       556                     i = i_j[0]
excute 13:47:20.290453 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:20.294444 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.298433 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 1, 0)
excute 13:47:20.301424 line       556                     i = i_j[0]
excute 13:47:20.305415 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:20.308405 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.312369 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 1, 0)
excute 13:47:20.315387 line       556                     i = i_j[0]
excute 13:47:20.319377 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:20.323337 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.327324 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 1, 0)
excute 13:47:20.337299 line       556                     i = i_j[0]
excute 13:47:20.342283 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:20.345275 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.350263 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 1, 0)
excute 13:47:20.355251 line       556                     i = i_j[0]
excute 13:47:20.360238 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:20.364227 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.372208 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 1, 0)
excute 13:47:20.377192 line       556                     i = i_j[0]
excute 13:47:20.382177 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:20.388162 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.394144 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 1, 0)
excute 13:47:20.401126 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:47:20.408110 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:20.416086 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.424066 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 1, 0)
excute 13:47:20.430049 line       556                     i = i_j[0]
excute 13:47:20.437030 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:20.442017 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.449996 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 1, 0)
excute 13:47:20.455981 line       556                     i = i_j[0]
excute 13:47:20.464958 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:20.471937 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.478919 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 1, 0)
excute 13:47:20.481910 line       556                     i = i_j[0]
excute 13:47:20.486896 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:20.492880 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.496869 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 1, 0)
excute 13:47:20.501859 line       556                     i = i_j[0]
excute 13:47:20.507847 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:20.513825 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.517813 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 1, 0)
excute 13:47:20.521804 line       556                     i = i_j[0]
excute 13:47:20.525793 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:20.529782 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.533771 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 1, 0)
excute 13:47:20.536763 line       556                     i = i_j[0]
excute 13:47:20.540762 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:20.543744 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.547733 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 1, 0)
excute 13:47:20.550726 line       556                     i = i_j[0]
excute 13:47:20.554715 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:20.558705 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.562695 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 1, 0)
excute 13:47:20.565686 line       556                     i = i_j[0]
excute 13:47:20.569676 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:20.573665 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.578652 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 0)
excute 13:47:20.581643 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:47:20.585633 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:20.589622 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.592614 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 0)
excute 13:47:20.595606 line       556                     i = i_j[0]
excute 13:47:20.599595 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:20.603585 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.606609 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:47:20.610598 line       556                     i = i_j[0]
excute 13:47:20.613597 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:20.617579 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.621571 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 0)
excute 13:47:20.624561 line       556                     i = i_j[0]
excute 13:47:20.628519 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:20.631541 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.635499 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 0)
excute 13:47:20.639488 line       556                     i = i_j[0]
excute 13:47:20.643478 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:20.646470 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.650464 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 0)
excute 13:47:20.653451 line       556                     i = i_j[0]
excute 13:47:20.657441 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:20.660433 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.665419 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 0)
excute 13:47:20.671435 line       556                     i = i_j[0]
excute 13:47:20.675392 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:20.678384 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.683373 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 0)
excute 13:47:20.687362 line       556                     i = i_j[0]
excute 13:47:20.691352 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:20.695339 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.699362 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 0)
excute 13:47:20.702352 line       556                     i = i_j[0]
excute 13:47:20.706311 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:20.709335 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.714289 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:47:20.718278 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:47:20.721269 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:20.725258 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.729249 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:47:20.732240 line       556                     i = i_j[0]
excute 13:47:20.736231 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:20.739222 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.743211 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:47:20.746203 line       556                     i = i_j[0]
excute 13:47:20.750192 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:20.753184 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.757173 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:47:20.761163 line       556                     i = i_j[0]
excute 13:47:20.764155 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:20.768144 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.771136 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:47:20.775134 line       556                     i = i_j[0]
excute 13:47:20.778118 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:20.782108 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.787094 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:47:20.790085 line       556                     i = i_j[0]
excute 13:47:20.794075 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:20.798066 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.802086 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:47:20.806045 line       556                     i = i_j[0]
excute 13:47:20.813051 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:20.819009 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.825989 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:47:20.829994 line       556                     i = i_j[0]
excute 13:47:20.833003 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:20.836994 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.840950 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:47:20.843977 line       556                     i = i_j[0]
excute 13:47:20.847933 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:20.850957 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.854913 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 3, 0)
excute 13:47:20.857936 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:47:20.861926 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:20.865884 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.869872 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 3, 0)
excute 13:47:20.873864 line       556                     i = i_j[0]
excute 13:47:20.877865 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:20.880845 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.886828 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 3, 0)
excute 13:47:20.890831 line       556                     i = i_j[0]
excute 13:47:20.893840 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:20.897797 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.904779 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 3, 0)
excute 13:47:20.907771 line       556                     i = i_j[0]
excute 13:47:20.911760 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:20.915750 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.919739 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 3, 0)
excute 13:47:20.922763 line       556                     i = i_j[0]
excute 13:47:20.926722 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:20.929744 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.933715 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 3, 0)
excute 13:47:20.937693 line       556                     i = i_j[0]
excute 13:47:20.941683 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:20.944674 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.952685 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 3, 0)
excute 13:47:20.956642 line       556                     i = i_j[0]
excute 13:47:20.959665 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:20.965619 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.969609 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 3, 0)
excute 13:47:20.973597 line       556                     i = i_j[0]
excute 13:47:20.978583 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:20.981576 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:20.985564 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 3, 0)
excute 13:47:20.989585 line       556                     i = i_j[0]
excute 13:47:20.993542 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:20.996567 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:21.000523 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 12, 0)
excute 13:47:21.003546 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:47:21.007538 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:21.011493 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:21.015483 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 12, 0)
excute 13:47:21.018475 line       556                     i = i_j[0]
excute 13:47:21.022469 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:21.025456 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:21.029447 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 12, 0)
excute 13:47:21.032438 line       556                     i = i_j[0]
excute 13:47:21.036427 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:21.039419 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:21.043408 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 12, 0)
excute 13:47:21.046400 line       556                     i = i_j[0]
excute 13:47:21.050390 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:21.053382 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:21.057371 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 12, 0)
excute 13:47:21.061360 line       556                     i = i_j[0]
excute 13:47:21.064352 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:21.068341 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:21.072331 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 12, 0)
excute 13:47:21.075323 line       556                     i = i_j[0]
excute 13:47:21.079312 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:21.082304 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:21.086294 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 12, 0)
excute 13:47:21.090285 line       556                     i = i_j[0]
excute 13:47:21.094274 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:21.097296 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:21.101254 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 12, 0)
excute 13:47:21.104277 line       556                     i = i_j[0]
excute 13:47:21.108236 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:21.111259 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:21.115248 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 12, 0)
excute 13:47:21.118241 line       556                     i = i_j[0]
excute 13:47:21.122200 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:21.126189 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:21.131175 line       555                 for i_j in i_j_list:
excute 13:47:21.134197 line       581             self.write_matrix(
excute 13:47:21.138157 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:47:21.142146 line       583                 result_file_path,
excute 13:47:21.146136 line       584                 mode='a'
excute 13:47:21.153116 line       488         for t in time_steps:
excute Modified var:.. t = 113
excute 13:47:21.156107 line       489             if (t != self.TIME + 1):
excute 13:47:21.160096 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:47:21.164085 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:47:21.168075 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:47:21.172066 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:21.176055 line       494                         if (i == j):
excute 13:47:21.180078 line       495                             continue
excute 13:47:21.183038 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:21.187026 line       494                         if (i == j):
excute 13:47:21.192014 line       496                         i_j_list.append((
excute 13:47:21.196998 line       497                             i, j,
excute 13:47:21.201988 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:21.206974 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0)]
excute 13:47:21.218940 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:21.225921 line       494                         if (i == j):
excute 13:47:21.233901 line       496                         i_j_list.append((
excute 13:47:21.239883 line       497                             i, j,
excute 13:47:21.243873 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:21.246864 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0)]
excute 13:47:21.250854 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:21.256842 line       494                         if (i == j):
excute 13:47:21.262822 line       496                         i_j_list.append((
excute 13:47:21.265814 line       497                             i, j,
excute 13:47:21.269803 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:21.274792 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:47:21.278782 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:21.285764 line       494                         if (i == j):
excute 13:47:21.290748 line       496                         i_j_list.append((
excute 13:47:21.293739 line       497                             i, j,
excute 13:47:21.298727 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:21.303718 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1)]
excute 13:47:21.306704 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:21.310694 line       494                         if (i == j):
excute 13:47:21.314685 line       496                         i_j_list.append((
excute 13:47:21.317682 line       497                             i, j,
excute 13:47:21.322663 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:21.331640 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0)]
excute 13:47:21.341612 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:21.347605 line       494                         if (i == j):
excute 13:47:21.352584 line       496                         i_j_list.append((
excute 13:47:21.360561 line       497                             i, j,
excute 13:47:21.364551 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:21.371533 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1)]
excute 13:47:21.375523 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:21.379511 line       494                         if (i == j):
excute 13:47:21.383500 line       496                         i_j_list.append((
excute 13:47:21.390482 line       497                             i, j,
excute 13:47:21.393475 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:21.402451 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0)]
excute 13:47:21.406444 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:21.414417 line       494                         if (i == j):
excute 13:47:21.418406 line       496                         i_j_list.append((
excute 13:47:21.422396 line       497                             i, j,
excute 13:47:21.426385 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:21.430374 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0)]
excute 13:47:21.434365 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:21.442343 line       494                         if (i == j):
excute 13:47:21.449325 line       496                         i_j_list.append((
excute 13:47:21.455309 line       497                             i, j,
excute 13:47:21.462291 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:21.469270 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0)]
excute 13:47:21.478246 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:21.486225 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:47:21.495203 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:21.500188 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:21.508167 line       494                         if (i == j):
excute 13:47:21.514151 line       496                         i_j_list.append((
excute 13:47:21.519137 line       497                             i, j,
excute 13:47:21.527115 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:21.532103 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0)]
excute 13:47:21.537088 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:21.542075 line       494                         if (i == j):
excute 13:47:21.549057 line       495                             continue
excute 13:47:21.553047 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:21.558032 line       494                         if (i == j):
excute 13:47:21.564018 line       496                         i_j_list.append((
excute 13:47:21.569003 line       497                             i, j,
excute 13:47:21.573990 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:21.579975 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0)]
excute 13:47:21.584960 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:21.590945 line       494                         if (i == j):
excute 13:47:21.596930 line       496                         i_j_list.append((
excute 13:47:21.602913 line       497                             i, j,
excute 13:47:21.610893 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:21.616877 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0)]
excute 13:47:21.624854 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:21.632834 line       494                         if (i == j):
excute 13:47:21.638817 line       496                         i_j_list.append((
excute 13:47:21.644802 line       497                             i, j,
excute 13:47:21.651782 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:21.657766 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1)]
excute 13:47:21.664747 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:21.671730 line       494                         if (i == j):
excute 13:47:21.680706 line       496                         i_j_list.append((
excute 13:47:21.688683 line       497                             i, j,
excute 13:47:21.695664 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:21.701649 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0)]
excute 13:47:21.706635 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:21.714615 line       494                         if (i == j):
excute 13:47:21.721596 line       496                         i_j_list.append((
excute 13:47:21.726583 line       497                             i, j,
excute 13:47:21.732566 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:21.739548 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1)]
excute 13:47:21.745533 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:21.752514 line       494                         if (i == j):
excute 13:47:21.759495 line       496                         i_j_list.append((
excute 13:47:21.763484 line       497                             i, j,
excute 13:47:21.768470 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:21.773458 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0)]
excute 13:47:21.777446 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:21.781436 line       494                         if (i == j):
excute 13:47:21.788417 line       496                         i_j_list.append((
excute 13:47:21.794401 line       497                             i, j,
excute 13:47:21.798391 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:21.805373 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0)]
excute 13:47:21.811355 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:21.817342 line       494                         if (i == j):
excute 13:47:21.821329 line       496                         i_j_list.append((
excute 13:47:21.824321 line       497                             i, j,
excute 13:47:21.827313 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:21.831302 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0)]
excute 13:47:21.834294 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:21.838284 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:47:21.841275 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:21.845266 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:21.848257 line       494                         if (i == j):
excute 13:47:21.852247 line       496                         i_j_list.append((
excute 13:47:21.855239 line       497                             i, j,
excute 13:47:21.859228 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:21.863218 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0)]
excute 13:47:21.866210 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:21.869201 line       494                         if (i == j):
excute 13:47:21.874189 line       496                         i_j_list.append((
excute 13:47:21.877180 line       497                             i, j,
excute 13:47:21.881182 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:21.884161 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0)]
excute 13:47:21.889148 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:21.896129 line       494                         if (i == j):
excute 13:47:21.900119 line       495                             continue
excute 13:47:21.903110 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:21.907100 line       494                         if (i == j):
excute 13:47:21.910092 line       496                         i_j_list.append((
excute 13:47:21.914089 line       497                             i, j,
excute 13:47:21.917077 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:21.921063 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0)]
excute 13:47:21.925053 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:21.929051 line       494                         if (i == j):
excute 13:47:21.932033 line       496                         i_j_list.append((
excute 13:47:21.936024 line       497                             i, j,
excute 13:47:21.940013 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:21.943005 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1)]
excute 13:47:21.946994 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:21.951981 line       494                         if (i == j):
excute 13:47:21.955968 line       496                         i_j_list.append((
excute 13:47:21.958961 line       497                             i, j,
excute 13:47:21.963949 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:21.968935 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0)]
excute 13:47:21.973923 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:21.977912 line       494                         if (i == j):
excute 13:47:21.981902 line       496                         i_j_list.append((
excute 13:47:21.985890 line       497                             i, j,
excute 13:47:21.989885 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:21.992870 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1)]
excute 13:47:21.995862 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:21.999851 line       494                         if (i == j):
excute 13:47:22.003843 line       496                         i_j_list.append((
excute 13:47:22.007832 line       497                             i, j,
excute 13:47:22.011822 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.015811 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0)]
excute 13:47:22.020799 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:22.024785 line       494                         if (i == j):
excute 13:47:22.028776 line       496                         i_j_list.append((
excute 13:47:22.031767 line       497                             i, j,
excute 13:47:22.034760 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.038750 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0)]
excute 13:47:22.041740 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:22.045731 line       494                         if (i == j):
excute 13:47:22.048722 line       496                         i_j_list.append((
excute 13:47:22.052712 line       497                             i, j,
excute 13:47:22.055704 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.059692 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0)]
excute 13:47:22.062683 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:22.066673 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:47:22.069665 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:22.073654 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:22.076647 line       494                         if (i == j):
excute 13:47:22.080637 line       496                         i_j_list.append((
excute 13:47:22.083629 line       497                             i, j,
excute 13:47:22.087618 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.090610 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0)]
excute 13:47:22.093602 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:22.097593 line       494                         if (i == j):
excute 13:47:22.101580 line       496                         i_j_list.append((
excute 13:47:22.104604 line       497                             i, j,
excute 13:47:22.107595 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.110587 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0)]
excute 13:47:22.114577 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:22.117568 line       494                         if (i == j):
excute 13:47:22.122525 line       496                         i_j_list.append((
excute 13:47:22.126546 line       497                             i, j,
excute 13:47:22.129538 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.132529 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0)]
excute 13:47:22.136486 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:22.140477 line       494                         if (i == j):
excute 13:47:22.144466 line       495                             continue
excute 13:47:22.147457 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:22.150449 line       494                         if (i == j):
excute 13:47:22.154438 line       496                         i_j_list.append((
excute 13:47:22.157462 line       497                             i, j,
excute 13:47:22.161453 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.164444 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1)]
excute 13:47:22.168426 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:22.171425 line       494                         if (i == j):
excute 13:47:22.175414 line       496                         i_j_list.append((
excute 13:47:22.178409 line       497                             i, j,
excute 13:47:22.182396 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.185389 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0)]
excute 13:47:22.189345 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:22.192337 line       494                         if (i == j):
excute 13:47:22.196326 line       496                         i_j_list.append((
excute 13:47:22.200315 line       497                             i, j,
excute 13:47:22.203307 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.206299 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1)]
excute 13:47:22.210289 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:22.214278 line       494                         if (i == j):
excute 13:47:22.217270 line       496                         i_j_list.append((
excute 13:47:22.221259 line       497                             i, j,
excute 13:47:22.224252 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.229242 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0)]
excute 13:47:22.232232 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:22.237218 line       494                         if (i == j):
excute 13:47:22.240212 line       496                         i_j_list.append((
excute 13:47:22.244200 line       497                             i, j,
excute 13:47:22.248190 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.252177 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0)]
excute 13:47:22.256167 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:22.260156 line       494                         if (i == j):
excute 13:47:22.264146 line       496                         i_j_list.append((
excute 13:47:22.267137 line       497                             i, j,
excute 13:47:22.270129 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.273121 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0)]
excute 13:47:22.277111 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:22.281099 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:47:22.284092 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:22.288081 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:22.292075 line       494                         if (i == j):
excute 13:47:22.295062 line       496                         i_j_list.append((
excute 13:47:22.298054 line       497                             i, j,
excute 13:47:22.302044 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.305035 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0)]
excute 13:47:22.308027 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:22.313416 line       494                         if (i == j):
excute 13:47:22.317438 line       496                         i_j_list.append((
excute 13:47:22.327382 line       497                             i, j,
excute 13:47:22.336359 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.344337 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0)]
excute 13:47:22.348326 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:22.352315 line       494                         if (i == j):
excute 13:47:22.358302 line       496                         i_j_list.append((
excute 13:47:22.361292 line       497                             i, j,
excute 13:47:22.364284 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.369285 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0)]
excute 13:47:22.372263 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:22.377249 line       494                         if (i == j):
excute 13:47:22.380271 line       496                         i_j_list.append((
excute 13:47:22.384264 line       497                             i, j,
excute 13:47:22.388255 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.392209 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0)]
excute 13:47:22.395231 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:22.399209 line       494                         if (i == j):
excute 13:47:22.403179 line       495                             continue
excute 13:47:22.407170 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:22.410161 line       494                         if (i == j):
excute 13:47:22.415149 line       496                         i_j_list.append((
excute 13:47:22.418171 line       497                             i, j,
excute 13:47:22.425120 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.429109 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0)]
excute 13:47:22.432100 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:22.437089 line       494                         if (i == j):
excute 13:47:22.445067 line       496                         i_j_list.append((
excute 13:47:22.451051 line       497                             i, j,
excute 13:47:22.455042 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.459030 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1)]
excute 13:47:22.462052 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:22.466043 line       494                         if (i == j):
excute 13:47:22.470034 line       496                         i_j_list.append((
excute 13:47:22.473025 line       497                             i, j,
excute 13:47:22.477016 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.480973 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0)]
excute 13:47:22.483964 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:22.488952 line       494                         if (i == j):
excute 13:47:22.491972 line       496                         i_j_list.append((
excute 13:47:22.495965 line       497                             i, j,
excute 13:47:22.498956 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.502912 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0)]
excute 13:47:22.505936 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:22.509894 line       494                         if (i == j):
excute 13:47:22.513885 line       496                         i_j_list.append((
excute 13:47:22.516908 line       497                             i, j,
excute 13:47:22.519901 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.523855 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0)]
excute 13:47:22.530838 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:22.534828 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:47:22.537850 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:22.543808 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:22.546826 line       494                         if (i == j):
excute 13:47:22.550787 line       496                         i_j_list.append((
excute 13:47:22.554781 line       497                             i, j,
excute 13:47:22.557796 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.560788 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0)]
excute 13:47:22.564747 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:22.567773 line       494                         if (i == j):
excute 13:47:22.571760 line       496                         i_j_list.append((
excute 13:47:22.575751 line       497                             i, j,
excute 13:47:22.578741 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.582731 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0)]
excute 13:47:22.585727 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:22.589681 line       494                         if (i == j):
excute 13:47:22.593669 line       496                         i_j_list.append((
excute 13:47:22.596695 line       497                             i, j,
excute 13:47:22.599687 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.602679 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0)]
excute 13:47:22.606667 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:22.610648 line       494                         if (i == j):
excute 13:47:22.613648 line       496                         i_j_list.append((
excute 13:47:22.617613 line       497                             i, j,
excute 13:47:22.620632 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.623623 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0)]
excute 13:47:22.627580 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:22.631571 line       494                         if (i == j):
excute 13:47:22.635558 line       496                         i_j_list.append((
excute 13:47:22.638581 line       497                             i, j,
excute 13:47:22.643539 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.646527 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1)]
excute 13:47:22.650519 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:22.654508 line       494                         if (i == j):
excute 13:47:22.658527 line       495                             continue
excute 13:47:22.662517 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:22.665477 line       494                         if (i == j):
excute 13:47:22.669466 line       496                         i_j_list.append((
excute 13:47:22.673457 line       497                             i, j,
excute 13:47:22.676481 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.680437 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1)]
excute 13:47:22.683461 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:22.687419 line       494                         if (i == j):
excute 13:47:22.690443 line       496                         i_j_list.append((
excute 13:47:22.694432 line       497                             i, j,
excute 13:47:22.697424 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.701413 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0)]
excute 13:47:22.704405 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:22.708364 line       494                         if (i == j):
excute 13:47:22.712353 line       496                         i_j_list.append((
excute 13:47:22.716376 line       497                             i, j,
excute 13:47:22.719367 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.723355 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0)]
excute 13:47:22.726346 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:22.730336 line       494                         if (i == j):
excute 13:47:22.734293 line       496                         i_j_list.append((
excute 13:47:22.737317 line       497                             i, j,
excute 13:47:22.741283 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.746263 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0)]
excute 13:47:22.750253 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:22.755240 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:47:22.759261 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:22.763219 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:22.766209 line       494                         if (i == j):
excute 13:47:22.770199 line       496                         i_j_list.append((
excute 13:47:22.774219 line       497                             i, j,
excute 13:47:22.777210 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.781168 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0)]
excute 13:47:22.784194 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:22.788185 line       494                         if (i == j):
excute 13:47:22.791175 line       496                         i_j_list.append((
excute 13:47:22.795162 line       497                             i, j,
excute 13:47:22.798155 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.801146 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0)]
excute 13:47:22.805136 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:22.809125 line       494                         if (i == j):
excute 13:47:22.812118 line       496                         i_j_list.append((
excute 13:47:22.816108 line       497                             i, j,
excute 13:47:22.819098 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.823057 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0)]
excute 13:47:22.826080 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:22.830040 line       494                         if (i == j):
excute 13:47:22.834061 line       496                         i_j_list.append((
excute 13:47:22.837050 line       497                             i, j,
excute 13:47:22.840042 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.844001 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0)]
excute 13:47:22.847993 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:22.851980 line       494                         if (i == j):
excute 13:47:22.855970 line       496                         i_j_list.append((
excute 13:47:22.859959 line       497                             i, j,
excute 13:47:22.863949 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.866940 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1)]
excute 13:47:22.870929 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:22.874919 line       494                         if (i == j):
excute 13:47:22.878908 line       496                         i_j_list.append((
excute 13:47:22.882897 line       497                             i, j,
excute 13:47:22.886920 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.889908 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0)]
excute 13:47:22.893868 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:22.896891 line       494                         if (i == j):
excute 13:47:22.900880 line       495                             continue
excute 13:47:22.904869 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:22.907863 line       494                         if (i == j):
excute 13:47:22.911820 line       496                         i_j_list.append((
excute 13:47:22.914842 line       497                             i, j,
excute 13:47:22.917838 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.921824 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0)]
excute 13:47:22.924816 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:22.928773 line       494                         if (i == j):
excute 13:47:22.932764 line       496                         i_j_list.append((
excute 13:47:22.935790 line       497                             i, j,
excute 13:47:22.939744 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.942770 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0)]
excute 13:47:22.945760 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:22.951713 line       494                         if (i == j):
excute 13:47:22.956701 line       496                         i_j_list.append((
excute 13:47:22.960690 line       497                             i, j,
excute 13:47:22.963682 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:22.967671 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0)]
excute 13:47:22.971660 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:22.975650 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:47:22.979639 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:22.983629 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:22.986620 line       494                         if (i == j):
excute 13:47:22.990610 line       496                         i_j_list.append((
excute 13:47:22.994599 line       497                             i, j,
excute 13:47:22.997591 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:23.001580 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0)]
excute 13:47:23.005570 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:23.009557 line       494                         if (i == j):
excute 13:47:23.013563 line       496                         i_j_list.append((
excute 13:47:23.016570 line       497                             i, j,
excute 13:47:23.020560 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:23.023553 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0)]
excute 13:47:23.027510 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:23.030535 line       494                         if (i == j):
excute 13:47:23.034491 line       496                         i_j_list.append((
excute 13:47:23.037514 line       497                             i, j,
excute 13:47:23.041504 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:23.044496 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0)]
excute 13:47:23.047488 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:23.051479 line       494                         if (i == j):
excute 13:47:23.057430 line       496                         i_j_list.append((
excute 13:47:23.060423 line       497                             i, j,
excute 13:47:23.064412 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:23.068401 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0)]
excute 13:47:23.072391 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:23.076380 line       494                         if (i == j):
excute 13:47:23.080369 line       496                         i_j_list.append((
excute 13:47:23.083394 line       497                             i, j,
excute 13:47:23.087381 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:23.090373 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1)]
excute 13:47:23.093366 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:23.097355 line       494                         if (i == j):
excute 13:47:23.101312 line       496                         i_j_list.append((
excute 13:47:23.104336 line       497                             i, j,
excute 13:47:23.108325 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:23.111317 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 0)]
excute 13:47:23.114308 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:23.118301 line       494                         if (i == j):
excute 13:47:23.122256 line       496                         i_j_list.append((
excute 13:47:23.125280 line       497                             i, j,
excute 13:47:23.129269 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:23.132261 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 1)]
excute 13:47:23.137218 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:23.141207 line       494                         if (i == j):
excute 13:47:23.144200 line       495                             continue
excute 13:47:23.148188 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:23.152178 line       494                         if (i == j):
excute 13:47:23.157165 line       496                         i_j_list.append((
excute 13:47:23.161184 line       497                             i, j,
excute 13:47:23.164176 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:23.168145 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0)]
excute 13:47:23.171159 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:23.175116 line       494                         if (i == j):
excute 13:47:23.178138 line       496                         i_j_list.append((
excute 13:47:23.182135 line       497                             i, j,
excute 13:47:23.185120 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:23.189078 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0)]
excute 13:47:23.192108 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:23.196061 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:47:23.199087 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:23.203074 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:23.207031 line       494                         if (i == j):
excute 13:47:23.211021 line       496                         i_j_list.append((
excute 13:47:23.214049 line       497                             i, j,
excute 13:47:23.218001 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:23.220992 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0)]
excute 13:47:23.223986 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:23.228972 line       494                         if (i == j):
excute 13:47:23.233959 line       496                         i_j_list.append((
excute 13:47:23.236949 line       497                             i, j,
excute 13:47:23.243931 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:23.250914 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0)]
excute 13:47:23.255900 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:23.260885 line       494                         if (i == j):
excute 13:47:23.264906 line       496                         i_j_list.append((
excute 13:47:23.268864 line       497                             i, j,
excute 13:47:23.271889 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:23.274882 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0)]
excute 13:47:23.278871 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:23.282829 line       494                         if (i == j):
excute 13:47:23.286850 line       496                         i_j_list.append((
excute 13:47:23.290807 line       497                             i, j,
excute 13:47:23.293831 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:23.297788 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0)]
excute 13:47:23.300812 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:23.304770 line       494                         if (i == j):
excute 13:47:23.308759 line       496                         i_j_list.append((
excute 13:47:23.311782 line       497                             i, j,
excute 13:47:23.314775 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:23.318731 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 1)]
excute 13:47:23.321755 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:23.325715 line       494                         if (i == j):
excute 13:47:23.333692 line       496                         i_j_list.append((
excute 13:47:23.340673 line       497                             i, j,
excute 13:47:23.344663 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:23.350647 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 1), (8, 5, 1, 0)]
excute 13:47:23.355633 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:23.364610 line       494                         if (i == j):
excute 13:47:23.369597 line       496                         i_j_list.append((
excute 13:47:23.372618 line       497                             i, j,
excute 13:47:23.376608 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:23.379600 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 1), (8, 5, 1, 0), (8, 6, 1, 1)]
excute 13:47:23.383590 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:23.388546 line       494                         if (i == j):
excute 13:47:23.392544 line       496                         i_j_list.append((
excute 13:47:23.396524 line       497                             i, j,
excute 13:47:23.400518 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:23.404504 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 1), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0)]
excute 13:47:23.407495 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:23.412481 line       494                         if (i == j):
excute 13:47:23.415504 line       495                             continue
excute 13:47:23.419493 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:23.422485 line       494                         if (i == j):
excute 13:47:23.426477 line       496                         i_j_list.append((
excute 13:47:23.430433 line       497                             i, j,
excute 13:47:23.433455 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:23.436448 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 1), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0)]
excute 13:47:23.440438 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:23.443428 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:47:23.447426 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:23.451412 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:23.455404 line       494                         if (i == j):
excute 13:47:23.459374 line       496                         i_j_list.append((
excute 13:47:23.466337 line       497                             i, j,
excute 13:47:23.470358 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:23.474349 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 1), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0)]
excute 13:47:23.477341 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:23.481328 line       494                         if (i == j):
excute 13:47:23.485291 line       496                         i_j_list.append((
excute 13:47:23.489307 line       497                             i, j,
excute 13:47:23.492299 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:23.496289 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 1), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0)]
excute 13:47:23.499281 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:23.503271 line       494                         if (i == j):
excute 13:47:23.507259 line       496                         i_j_list.append((
excute 13:47:23.511249 line       497                             i, j,
excute 13:47:23.514242 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:23.518230 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 1), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0)]
excute 13:47:23.521221 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:23.525213 line       494                         if (i == j):
excute 13:47:23.529200 line       496                         i_j_list.append((
excute 13:47:23.533188 line       497                             i, j,
excute 13:47:23.536181 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:23.539173 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 1), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0)]
excute 13:47:23.543163 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:23.547120 line       494                         if (i == j):
excute 13:47:23.551119 line       496                         i_j_list.append((
excute 13:47:23.554136 line       497                             i, j,
excute 13:47:23.558124 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:23.561115 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 1), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 1)]
excute 13:47:23.565107 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:23.570095 line       494                         if (i == j):
excute 13:47:23.574048 line       496                         i_j_list.append((
excute 13:47:23.577072 line       497                             i, j,
excute 13:47:23.581063 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:23.584054 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 1), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 1), (9, 5, 1, 0)]
excute 13:47:23.587045 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:23.591034 line       494                         if (i == j):
excute 13:47:23.594997 line       496                         i_j_list.append((
excute 13:47:23.598984 line       497                             i, j,
excute 13:47:23.601975 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:23.605965 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 1), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 1), (9, 5, 1, 0), (9, 6, 1, 1)]
excute 13:47:23.608957 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:23.612946 line       494                         if (i == j):
excute 13:47:23.617931 line       496                         i_j_list.append((
excute 13:47:23.620957 line       497                             i, j,
excute 13:47:23.623946 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:23.627936 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 1), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 1), (9, 5, 1, 0), (9, 6, 1, 1), (9, 7, 1, 0)]
excute 13:47:23.630928 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:23.635886 line       494                         if (i == j):
excute 13:47:23.639874 line       496                         i_j_list.append((
excute 13:47:23.642866 line       497                             i, j,
excute 13:47:23.646855 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:23.653836 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 1), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 1), (9, 5, 1, 0), (9, 6, 1, 1), (9, 7, 1, 0), (9, 8, 1, 0)]
excute 13:47:23.660817 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:23.665803 line       494                         if (i == j):
excute 13:47:23.672786 line       495                             continue
excute 13:47:23.675807 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:23.681764 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:47:23.684786 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 5, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (5, 4, -1, 1), (5, 6, -1, 1), (7, 4, -1, 1), (7, 6, -1, 1), (0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 5, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (0, 4, 0, 1), (0, 6, 0, 1), (6, 4, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 5, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 5, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 5, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0), (2, 4, 1, 1), (2, 6, 1, 1), (4, 6, 1, 1), (8, 4, 1, 1), (8, 6, 1, 1), (9, 4, 1, 1), (9, 6, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 5, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (1, 4, 2, 1), (1, 6, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 5, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (3, 4, 10, 1), (3, 6, 10, 1)]
excute 13:47:23.687776 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:47:23.691766 line       505                     if (self.RELOCATE):
excute 13:47:23.700264 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:47:23.703255 line       505                     if (self.RELOCATE):
excute 13:47:23.707230 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:47:23.711233 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, -1, 0)
excute 13:47:23.714222 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:47:23.718212 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:23.722205 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:23.726160 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, -1, 0)
excute 13:47:23.729183 line       556                     i = i_j[0]
excute 13:47:23.733172 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:23.737154 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:23.740153 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, -1, 0)
excute 13:47:23.744143 line       556                     i = i_j[0]
excute 13:47:23.748102 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:23.751126 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:23.755116 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, -1, 0)
excute 13:47:23.761065 line       556                     i = i_j[0]
excute 13:47:23.766052 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:23.769076 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:23.775029 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, -1, 0)
excute 13:47:23.778020 line       556                     i = i_j[0]
excute 13:47:23.782009 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:23.785999 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:23.788990 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, -1, 0)
excute 13:47:23.792980 line       556                     i = i_j[0]
excute 13:47:23.795971 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:23.798964 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:23.802953 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, -1, 0)
excute 13:47:23.806956 line       556                     i = i_j[0]
excute 13:47:23.809934 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:23.813924 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:23.817914 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -1, 0)
excute 13:47:23.820905 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:47:23.824896 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:23.828886 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:23.832874 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -1, 0)
excute 13:47:23.835896 line       556                     i = i_j[0]
excute 13:47:23.839856 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:23.842878 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:23.846837 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -1, 0)
excute 13:47:23.849863 line       556                     i = i_j[0]
excute 13:47:23.853849 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:23.857842 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:23.861829 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -1, 0)
excute 13:47:23.864820 line       556                     i = i_j[0]
excute 13:47:23.868779 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:23.871801 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:23.876757 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -1, 0)
excute 13:47:23.880745 line       556                     i = i_j[0]
excute 13:47:23.884735 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:23.888757 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:23.892746 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -1, 0)
excute 13:47:23.895737 line       556                     i = i_j[0]
excute 13:47:23.899696 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:23.902720 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:23.906677 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -1, 0)
excute 13:47:23.910667 line       556                     i = i_j[0]
excute 13:47:23.913693 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:23.917679 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:23.920670 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, -1, 1)
excute 13:47:23.924660 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:47:23.928650 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:23.932608 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:23.936597 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, -1, 1)
excute 13:47:23.939620 line       556                     i = i_j[0]
excute 13:47:23.943610 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:23.947568 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:23.951557 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -1, 1)
excute 13:47:23.955546 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:47:23.958573 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:23.962558 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:23.966550 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -1, 1)
excute 13:47:23.970538 line       556                     i = i_j[0]
excute 13:47:23.974497 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:23.978488 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:23.982475 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 0)
excute 13:47:23.985501 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:47:23.989487 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:23.993445 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:23.997435 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:47:24.000457 line       556                     i = i_j[0]
excute 13:47:24.004416 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:24.008404 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.012393 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:47:24.015385 line       556                     i = i_j[0]
excute 13:47:24.019375 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:24.022367 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.026356 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 0)
excute 13:47:24.031343 line       556                     i = i_j[0]
excute 13:47:24.038325 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:24.045306 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.050295 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:47:24.054283 line       556                     i = i_j[0]
excute 13:47:24.058291 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:24.061294 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.065288 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:47:24.069273 line       556                     i = i_j[0]
excute 13:47:24.073232 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:24.076254 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.081215 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 0)
excute 13:47:24.085230 line       556                     i = i_j[0]
excute 13:47:24.089189 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:24.092212 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.096178 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 0, 0)
excute 13:47:24.099193 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:47:24.103152 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:24.107176 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.111131 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 0, 0)
excute 13:47:24.114153 line       556                     i = i_j[0]
excute 13:47:24.118114 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:24.121138 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.125094 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 0, 0)
excute 13:47:24.128116 line       556                     i = i_j[0]
excute 13:47:24.132105 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:24.136094 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.140054 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 0, 0)
excute 13:47:24.144074 line       556                     i = i_j[0]
excute 13:47:24.147065 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:24.151055 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.155014 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 0, 0)
excute 13:47:24.158038 line       556                     i = i_j[0]
excute 13:47:24.162026 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:24.166019 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.169011 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 0, 0)
excute 13:47:24.172966 line       556                     i = i_j[0]
excute 13:47:24.180944 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:24.185930 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.189919 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 0, 0)
excute 13:47:24.192911 line       556                     i = i_j[0]
excute 13:47:24.196900 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:24.200890 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.203881 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 0, 0)
excute 13:47:24.207871 line       556                     i = i_j[0]
excute 13:47:24.210863 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:24.214852 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.218843 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 1)
excute 13:47:24.221833 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:47:24.225823 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:24.229818 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.233803 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 1)
excute 13:47:24.236825 line       556                     i = i_j[0]
excute 13:47:24.240784 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:24.243806 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.247765 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 0, 1)
excute 13:47:24.250788 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:47:24.254785 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:24.259733 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.263722 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 1, 0)
excute 13:47:24.266745 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:47:24.270735 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:24.274693 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.278682 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 1, 0)
excute 13:47:24.281705 line       556                     i = i_j[0]
excute 13:47:24.286661 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:24.290655 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.293676 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 1, 0)
excute 13:47:24.297664 line       556                     i = i_j[0]
excute 13:47:24.300655 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:24.304648 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.308603 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 1, 0)
excute 13:47:24.311625 line       556                     i = i_j[0]
excute 13:47:24.315615 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:24.319573 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.323574 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 1, 0)
excute 13:47:24.327555 line       556                     i = i_j[0]
excute 13:47:24.335530 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:24.341519 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.345535 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 1, 0)
excute 13:47:24.349506 line       556                     i = i_j[0]
excute 13:47:24.353485 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:24.357471 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.360462 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 1, 0)
excute 13:47:24.364452 line       556                     i = i_j[0]
excute 13:47:24.368442 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:24.372441 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.376457 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 1, 0)
excute 13:47:24.379445 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:47:24.383402 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:24.389397 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.394374 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 1, 0)
excute 13:47:24.397398 line       556                     i = i_j[0]
excute 13:47:24.401355 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:24.404377 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.408371 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 1, 0)
excute 13:47:24.412324 line       556                     i = i_j[0]
excute 13:47:24.416316 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:24.419317 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.423295 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 1, 0)
excute 13:47:24.426287 line       556                     i = i_j[0]
excute 13:47:24.430277 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:24.434266 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.438258 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 1, 0)
excute 13:47:24.441246 line       556                     i = i_j[0]
excute 13:47:24.445236 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:24.449230 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.453219 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 1, 0)
excute 13:47:24.457236 line       556                     i = i_j[0]
excute 13:47:24.461195 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:24.465185 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.470170 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 1, 0)
excute 13:47:24.473194 line       556                     i = i_j[0]
excute 13:47:24.477181 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:24.481152 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.484164 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 1, 0)
excute 13:47:24.488157 line       556                     i = i_j[0]
excute 13:47:24.493110 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:24.496136 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.500122 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 1, 0)
excute 13:47:24.503114 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:47:24.507103 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:24.512060 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.515081 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 1, 0)
excute 13:47:24.519071 line       556                     i = i_j[0]
excute 13:47:24.523029 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:24.526052 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.530018 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 1, 0)
excute 13:47:24.533037 line       556                     i = i_j[0]
excute 13:47:24.536992 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:24.540015 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.544009 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 1, 0)
excute 13:47:24.547962 line       556                     i = i_j[0]
excute 13:47:24.550986 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:24.554974 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.558933 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 1, 0)
excute 13:47:24.561956 line       556                     i = i_j[0]
excute 13:47:24.565928 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:24.568937 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.573925 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 1, 0)
excute 13:47:24.576916 line       556                     i = i_j[0]
excute 13:47:24.580875 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:24.583896 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.587864 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 1, 0)
excute 13:47:24.590878 line       556                     i = i_j[0]
excute 13:47:24.595836 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:24.598857 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.602846 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 0)
excute 13:47:24.606837 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:47:24.610796 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:24.614784 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.618774 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 0)
excute 13:47:24.621764 line       556                     i = i_j[0]
excute 13:47:24.625754 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:24.628746 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.632736 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:47:24.636759 line       556                     i = i_j[0]
excute 13:47:24.640715 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:24.643737 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.647698 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 0)
excute 13:47:24.650724 line       556                     i = i_j[0]
excute 13:47:24.654713 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:24.658702 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.662657 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 0)
excute 13:47:24.666644 line       556                     i = i_j[0]
excute 13:47:24.670634 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:24.673626 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.677627 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 0)
excute 13:47:24.680607 line       556                     i = i_j[0]
excute 13:47:24.684596 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:24.687588 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.691577 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 0)
excute 13:47:24.695569 line       556                     i = i_j[0]
excute 13:47:24.700554 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:24.703546 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.707535 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 1, 1)
excute 13:47:24.710527 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:47:24.714516 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:24.718507 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.722496 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 1, 1)
excute 13:47:24.725519 line       556                     i = i_j[0]
excute 13:47:24.729509 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:24.733467 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.736490 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 125
excute 13:47:24.740483 line       560                         if (t_tmp > self.TIME):
excute 13:47:24.744438 line       563                             if (available_vhecles[i][t] == 0):
excute 13:47:24.747460 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:47:24.750452 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 140
excute 13:47:24.754443 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:47:24.758399 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 1, 1)
excute 13:47:24.762389 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:47:24.767376 line       557                     j = i_j[1]
excute 13:47:24.771379 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.774388 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 1, 1)
excute 13:47:24.778346 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:47:24.781370 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:24.785358 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.789319 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 1, 1)
excute 13:47:24.792340 line       556                     i = i_j[0]
excute 13:47:24.796332 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:24.801300 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.805275 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 1)
excute 13:47:24.808297 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:47:24.812256 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:24.816245 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.820269 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 1)
excute 13:47:24.824257 line       556                     i = i_j[0]
excute 13:47:24.827247 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:24.831240 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.835195 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 2, 0)
excute 13:47:24.838188 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:47:24.846165 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:24.854146 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.858134 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 2, 0)
excute 13:47:24.862122 line       556                     i = i_j[0]
excute 13:47:24.869103 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:24.872127 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.876118 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 2, 0)
excute 13:47:24.880105 line       556                     i = i_j[0]
excute 13:47:24.884066 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:24.888053 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.891076 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 2, 0)
excute 13:47:24.895070 line       556                     i = i_j[0]
excute 13:47:24.899033 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:24.903050 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.907003 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 2, 0)
excute 13:47:24.910025 line       556                     i = i_j[0]
excute 13:47:24.914015 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:24.917984 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.920996 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 2, 0)
excute 13:47:24.924985 line       556                     i = i_j[0]
excute 13:47:24.928943 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:24.931970 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.935926 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 2, 0)
excute 13:47:24.938948 line       556                     i = i_j[0]
excute 13:47:24.943906 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:24.947893 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.952880 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 2, 1)
excute 13:47:24.958863 line       556                     i = i_j[0]
excute 13:47:24.964848 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:24.969837 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.973855 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 2, 1)
excute 13:47:24.977844 line       556                     i = i_j[0]
excute 13:47:24.981835 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:24.985792 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:24.989782 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 10, 0)
excute 13:47:24.993770 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:47:24.997759 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:25.001749 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:25.007733 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 10, 0)
excute 13:47:25.010725 line       556                     i = i_j[0]
excute 13:47:25.014714 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:25.017706 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:25.021695 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 10, 0)
excute 13:47:25.025684 line       556                     i = i_j[0]
excute 13:47:25.029674 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:25.032666 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:25.040201 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 10, 0)
excute 13:47:25.044210 line       556                     i = i_j[0]
excute 13:47:25.047214 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:25.054184 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:25.059185 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 10, 0)
excute 13:47:25.062176 line       556                     i = i_j[0]
excute 13:47:25.066134 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:25.069157 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:25.073152 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 10, 0)
excute 13:47:25.077135 line       556                     i = i_j[0]
excute 13:47:25.081105 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:25.084120 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:25.088076 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 10, 0)
excute 13:47:25.091099 line       556                     i = i_j[0]
excute 13:47:25.095057 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:25.098080 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:25.102069 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 10, 1)
excute 13:47:25.106029 line       556                     i = i_j[0]
excute 13:47:25.110048 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:25.114038 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:25.117996 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 118
excute 13:47:25.121018 line       560                         if (t_tmp > self.TIME):
excute 13:47:25.125008 line       563                             if (available_vhecles[i][t] == 0):
excute 13:47:25.127999 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:47:25.131992 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 141
excute 13:47:25.135949 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:47:25.139937 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 10, 1)
excute 13:47:25.143925 line       556                     i = i_j[0]
excute 13:47:25.147915 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:25.151910 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:25.155895 line       555                 for i_j in i_j_list:
excute 13:47:25.158920 line       581             self.write_matrix(
excute 13:47:25.161909 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:47:25.165899 line       583                 result_file_path,
excute 13:47:25.169856 line       584                 mode='a'
excute 13:47:25.175841 line       488         for t in time_steps:
excute Modified var:.. t = 114
excute 13:47:25.179830 line       489             if (t != self.TIME + 1):
excute 13:47:25.183821 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:47:25.186811 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:47:25.190801 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:47:25.194791 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:25.198781 line       494                         if (i == j):
excute 13:47:25.205762 line       495                             continue
excute 13:47:25.210750 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:25.213739 line       494                         if (i == j):
excute 13:47:25.219724 line       496                         i_j_list.append((
excute 13:47:25.223716 line       497                             i, j,
excute 13:47:25.229729 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:25.236681 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0)]
excute 13:47:25.245654 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:25.252637 line       494                         if (i == j):
excute 13:47:25.258652 line       496                         i_j_list.append((
excute 13:47:25.263606 line       497                             i, j,
excute 13:47:25.266600 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:25.270587 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0)]
excute 13:47:25.277569 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:25.282556 line       494                         if (i == j):
excute 13:47:25.286545 line       496                         i_j_list.append((
excute 13:47:25.289537 line       497                             i, j,
excute 13:47:25.295520 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:25.299512 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:47:25.303499 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:25.310482 line       494                         if (i == j):
excute 13:47:25.316467 line       496                         i_j_list.append((
excute 13:47:25.319457 line       497                             i, j,
excute 13:47:25.324444 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:25.332441 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1)]
excute 13:47:25.341398 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:25.345388 line       494                         if (i == j):
excute 13:47:25.349377 line       496                         i_j_list.append((
excute 13:47:25.353366 line       497                             i, j,
excute 13:47:25.357356 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:25.361345 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1)]
excute 13:47:25.365334 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:25.370322 line       494                         if (i == j):
excute 13:47:25.374312 line       496                         i_j_list.append((
excute 13:47:25.377301 line       497                             i, j,
excute 13:47:25.380294 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:25.384285 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0)]
excute 13:47:25.388274 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:25.391265 line       494                         if (i == j):
excute 13:47:25.395255 line       496                         i_j_list.append((
excute 13:47:25.399245 line       497                             i, j,
excute 13:47:25.402235 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:25.405227 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0)]
excute 13:47:25.408219 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:25.412209 line       494                         if (i == j):
excute 13:47:25.418193 line       496                         i_j_list.append((
excute 13:47:25.421185 line       497                             i, j,
excute 13:47:25.424178 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:25.428168 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1)]
excute 13:47:25.432157 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:25.436147 line       494                         if (i == j):
excute 13:47:25.439167 line       496                         i_j_list.append((
excute 13:47:25.443160 line       497                             i, j,
excute 13:47:25.446153 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:25.450110 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0)]
excute 13:47:25.455095 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:25.460082 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:47:25.464071 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:25.468092 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:25.472050 line       494                         if (i == j):
excute 13:47:25.475074 line       496                         i_j_list.append((
excute 13:47:25.478067 line       497                             i, j,
excute 13:47:25.482056 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:25.485045 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0)]
excute 13:47:25.488037 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:25.492028 line       494                         if (i == j):
excute 13:47:25.495985 line       495                             continue
excute 13:47:25.499010 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:25.502003 line       494                         if (i == j):
excute 13:47:25.506958 line       496                         i_j_list.append((
excute 13:47:25.509987 line       497                             i, j,
excute 13:47:25.513969 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:25.516960 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0)]
excute 13:47:25.522913 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:25.525944 line       494                         if (i == j):
excute 13:47:25.529931 line       496                         i_j_list.append((
excute 13:47:25.532922 line       497                             i, j,
excute 13:47:25.536881 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:25.539899 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0)]
excute 13:47:25.542891 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:25.546858 line       494                         if (i == j):
excute 13:47:25.550840 line       496                         i_j_list.append((
excute 13:47:25.553864 line       497                             i, j,
excute 13:47:25.557854 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:25.560843 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1)]
excute 13:47:25.563835 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:25.567793 line       494                         if (i == j):
excute 13:47:25.571783 line       496                         i_j_list.append((
excute 13:47:25.574805 line       497                             i, j,
excute 13:47:25.578763 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:25.581790 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1)]
excute 13:47:25.584778 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:25.588738 line       494                         if (i == j):
excute 13:47:25.591759 line       496                         i_j_list.append((
excute 13:47:25.595749 line       497                             i, j,
excute 13:47:25.598742 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:25.601733 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0)]
excute 13:47:25.604725 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:25.608716 line       494                         if (i == j):
excute 13:47:25.612677 line       496                         i_j_list.append((
excute 13:47:25.615696 line       497                             i, j,
excute 13:47:25.619686 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:25.623677 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0)]
excute 13:47:25.626669 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:25.630658 line       494                         if (i == j):
excute 13:47:25.635612 line       496                         i_j_list.append((
excute 13:47:25.638634 line       497                             i, j,
excute 13:47:25.641626 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:25.644618 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1)]
excute 13:47:25.648608 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:25.651600 line       494                         if (i == j):
excute 13:47:25.655590 line       496                         i_j_list.append((
excute 13:47:25.659547 line       497                             i, j,
excute 13:47:25.662571 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:25.665565 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0)]
excute 13:47:25.668554 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:25.672512 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:47:25.676502 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:25.680491 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:25.683483 line       494                         if (i == j):
excute 13:47:25.687488 line       496                         i_j_list.append((
excute 13:47:25.690499 line       497                             i, j,
excute 13:47:25.693491 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:25.697448 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0)]
excute 13:47:25.701438 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:25.704430 line       494                         if (i == j):
excute 13:47:25.709415 line       496                         i_j_list.append((
excute 13:47:25.713404 line       497                             i, j,
excute 13:47:25.717396 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:25.722380 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0)]
excute 13:47:25.727368 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:25.735345 line       494                         if (i == j):
excute 13:47:25.742326 line       495                             continue
excute 13:47:25.746317 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:25.749309 line       494                         if (i == j):
excute 13:47:25.753298 line       496                         i_j_list.append((
excute 13:47:25.757287 line       497                             i, j,
excute 13:47:25.761277 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:25.765266 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0)]
excute 13:47:25.769256 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:25.773246 line       494                         if (i == j):
excute 13:47:25.777234 line       496                         i_j_list.append((
excute 13:47:25.780257 line       497                             i, j,
excute 13:47:25.784245 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:25.787237 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1)]
excute 13:47:25.790229 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:25.794224 line       494                         if (i == j):
excute 13:47:25.798178 line       496                         i_j_list.append((
excute 13:47:25.801168 line       497                             i, j,
excute 13:47:25.805159 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:25.809149 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1)]
excute 13:47:25.812141 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:25.816130 line       494                         if (i == j):
excute 13:47:25.820120 line       496                         i_j_list.append((
excute 13:47:25.824109 line       497                             i, j,
excute 13:47:25.829128 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:25.833097 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0)]
excute 13:47:25.836106 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:25.840066 line       494                         if (i == j):
excute 13:47:25.843088 line       496                         i_j_list.append((
excute 13:47:25.847078 line       497                             i, j,
excute 13:47:25.850072 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:25.854060 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0)]
excute 13:47:25.857051 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:25.861010 line       494                         if (i == j):
excute 13:47:25.864998 line       496                         i_j_list.append((
excute 13:47:25.868021 line       497                             i, j,
excute 13:47:25.871014 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:25.874008 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1)]
excute 13:47:25.877964 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:25.880987 line       494                         if (i == j):
excute 13:47:25.884980 line       496                         i_j_list.append((
excute 13:47:25.888935 line       497                             i, j,
excute 13:47:25.892924 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:25.895918 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0)]
excute 13:47:25.898909 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:25.902910 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:47:25.905890 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:25.909880 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:25.912872 line       494                         if (i == j):
excute 13:47:25.916861 line       496                         i_j_list.append((
excute 13:47:25.920850 line       497                             i, j,
excute 13:47:25.923842 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:25.927834 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0)]
excute 13:47:25.931852 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:25.935840 line       494                         if (i == j):
excute 13:47:25.939830 line       496                         i_j_list.append((
excute 13:47:25.942822 line       497                             i, j,
excute 13:47:25.946811 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:25.950770 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0)]
excute 13:47:25.955756 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:25.958779 line       494                         if (i == j):
excute 13:47:25.962749 line       496                         i_j_list.append((
excute 13:47:25.965759 line       497                             i, j,
excute 13:47:25.969733 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:25.972745 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0)]
excute 13:47:25.976713 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:25.980689 line       494                         if (i == j):
excute 13:47:25.983713 line       495                             continue
excute 13:47:25.987671 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:25.990662 line       494                         if (i == j):
excute 13:47:25.994652 line       496                         i_j_list.append((
excute 13:47:25.997646 line       497                             i, j,
excute 13:47:26.000637 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:26.004626 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1)]
excute 13:47:26.008616 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:26.012604 line       494                         if (i == j):
excute 13:47:26.016594 line       496                         i_j_list.append((
excute 13:47:26.019616 line       497                             i, j,
excute 13:47:26.022608 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:26.026599 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1)]
excute 13:47:26.029591 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:26.035545 line       494                         if (i == j):
excute 13:47:26.039534 line       496                         i_j_list.append((
excute 13:47:26.042556 line       497                             i, j,
excute 13:47:26.045547 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:26.049511 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0)]
excute 13:47:26.052531 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:26.056487 line       494                         if (i == j):
excute 13:47:26.060475 line       496                         i_j_list.append((
excute 13:47:26.063499 line       497                             i, j,
excute 13:47:26.066491 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:26.070449 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0)]
excute 13:47:26.073475 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:26.077432 line       494                         if (i == j):
excute 13:47:26.081421 line       496                         i_j_list.append((
excute 13:47:26.084446 line       497                             i, j,
excute 13:47:26.088401 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:26.091425 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1)]
excute 13:47:26.094416 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:26.098375 line       494                         if (i == j):
excute 13:47:26.102368 line       496                         i_j_list.append((
excute 13:47:26.105389 line       497                             i, j,
excute 13:47:26.108382 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:26.111371 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0)]
excute 13:47:26.115360 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:26.118352 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:47:26.122342 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:26.125334 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:26.129325 line       494                         if (i == j):
excute 13:47:26.133281 line       496                         i_j_list.append((
excute 13:47:26.139266 line       497                             i, j,
excute 13:47:26.142288 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:26.145282 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0)]
excute 13:47:26.149270 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:26.153229 line       494                         if (i == j):
excute 13:47:26.157218 line       496                         i_j_list.append((
excute 13:47:26.160240 line       497                             i, j,
excute 13:47:26.163233 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:26.167222 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0)]
excute 13:47:26.170213 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:26.174173 line       494                         if (i == j):
excute 13:47:26.178164 line       496                         i_j_list.append((
excute 13:47:26.181185 line       497                             i, j,
excute 13:47:26.184176 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:26.188135 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0)]
excute 13:47:26.191158 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:26.195149 line       494                         if (i == j):
excute 13:47:26.199108 line       496                         i_j_list.append((
excute 13:47:26.202099 line       497                             i, j,
excute 13:47:26.206091 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:26.209112 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0)]
excute 13:47:26.212104 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:26.216060 line       494                         if (i == j):
excute 13:47:26.220085 line       495                             continue
excute 13:47:26.223072 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:26.226064 line       494                         if (i == j):
excute 13:47:26.230023 line       496                         i_j_list.append((
excute 13:47:26.233047 line       497                             i, j,
excute 13:47:26.237006 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:26.241026 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1)]
excute 13:47:26.244983 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:26.248006 line       494                         if (i == j):
excute 13:47:26.251971 line       496                         i_j_list.append((
excute 13:47:26.255984 line       497                             i, j,
excute 13:47:26.258976 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:26.262965 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0)]
excute 13:47:26.265958 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:26.269948 line       494                         if (i == j):
excute 13:47:26.273907 line       496                         i_j_list.append((
excute 13:47:26.278908 line       497                             i, j,
excute 13:47:26.284877 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:26.287869 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0)]
excute 13:47:26.291872 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:26.294880 line       494                         if (i == j):
excute 13:47:26.298847 line       496                         i_j_list.append((
excute 13:47:26.301870 line       497                             i, j,
excute 13:47:26.305857 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:26.308850 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1)]
excute 13:47:26.311840 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:26.315833 line       494                         if (i == j):
excute 13:47:26.319784 line       496                         i_j_list.append((
excute 13:47:26.323772 line       497                             i, j,
excute 13:47:26.332749 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:26.345714 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0)]
excute 13:47:26.349703 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:26.357685 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:47:26.361673 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:26.367655 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:26.374640 line       494                         if (i == j):
excute 13:47:26.378625 line       496                         i_j_list.append((
excute 13:47:26.383613 line       497                             i, j,
excute 13:47:26.388601 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:26.394583 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0)]
excute 13:47:26.403558 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:26.411539 line       494                         if (i == j):
excute 13:47:26.417521 line       496                         i_j_list.append((
excute 13:47:26.421511 line       497                             i, j,
excute 13:47:26.425500 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:26.428492 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0)]
excute 13:47:26.432481 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:26.436470 line       494                         if (i == j):
excute 13:47:26.441458 line       496                         i_j_list.append((
excute 13:47:26.445447 line       497                             i, j,
excute 13:47:26.451435 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:26.456417 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0)]
excute 13:47:26.467389 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:26.478359 line       494                         if (i == j):
excute 13:47:26.487335 line       496                         i_j_list.append((
excute 13:47:26.496311 line       497                             i, j,
excute 13:47:26.503292 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:26.511271 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0)]
excute 13:47:26.517255 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:26.526230 line       494                         if (i == j):
excute 13:47:26.533212 line       496                         i_j_list.append((
excute 13:47:26.539196 line       497                             i, j,
excute 13:47:26.546178 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:26.556151 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1)]
excute 13:47:26.562136 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:26.570115 line       494                         if (i == j):
excute 13:47:26.579090 line       495                             continue
excute 13:47:26.584076 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:26.591057 line       494                         if (i == j):
excute 13:47:26.597041 line       496                         i_j_list.append((
excute 13:47:26.602028 line       497                             i, j,
excute 13:47:26.608012 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:26.612998 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0)]
excute 13:47:26.621977 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:26.628957 line       494                         if (i == j):
excute 13:47:26.635937 line       496                         i_j_list.append((
excute 13:47:26.640926 line       497                             i, j,
excute 13:47:26.647906 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:26.654888 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0)]
excute 13:47:26.660876 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:26.666855 line       494                         if (i == j):
excute 13:47:26.672839 line       496                         i_j_list.append((
excute 13:47:26.678823 line       497                             i, j,
excute 13:47:26.685805 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:26.690790 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1)]
excute 13:47:26.696775 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:26.705751 line       494                         if (i == j):
excute 13:47:26.714727 line       496                         i_j_list.append((
excute 13:47:26.721708 line       497                             i, j,
excute 13:47:26.726695 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:26.733677 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0)]
excute 13:47:26.740657 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:26.749634 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:47:26.754624 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:26.761601 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:26.769581 line       494                         if (i == j):
excute 13:47:26.775565 line       496                         i_j_list.append((
excute 13:47:26.781550 line       497                             i, j,
excute 13:47:26.788530 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:26.793516 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 0, 0)]
excute 13:47:26.798503 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:26.802492 line       494                         if (i == j):
excute 13:47:26.806483 line       496                         i_j_list.append((
excute 13:47:26.810471 line       497                             i, j,
excute 13:47:26.813463 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:26.817452 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0)]
excute 13:47:26.821441 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:26.825431 line       494                         if (i == j):
excute 13:47:26.829422 line       496                         i_j_list.append((
excute 13:47:26.832411 line       497                             i, j,
excute 13:47:26.835403 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:26.839394 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0)]
excute 13:47:26.842385 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:26.846376 line       494                         if (i == j):
excute 13:47:26.849366 line       496                         i_j_list.append((
excute 13:47:26.853356 line       497                             i, j,
excute 13:47:26.856347 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:26.859340 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0)]
excute 13:47:26.864327 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:26.868318 line       494                         if (i == j):
excute 13:47:26.871310 line       496                         i_j_list.append((
excute 13:47:26.875298 line       497                             i, j,
excute 13:47:26.879287 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:26.882280 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1)]
excute 13:47:26.886295 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:26.890288 line       494                         if (i == j):
excute 13:47:26.894248 line       496                         i_j_list.append((
excute 13:47:26.897272 line       497                             i, j,
excute 13:47:26.901236 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:26.904251 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 1)]
excute 13:47:26.907245 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:26.911201 line       494                         if (i == j):
excute 13:47:26.915203 line       495                             continue
excute 13:47:26.918214 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:26.921210 line       494                         if (i == j):
excute 13:47:26.925195 line       496                         i_j_list.append((
excute 13:47:26.929157 line       497                             i, j,
excute 13:47:26.932184 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:26.935170 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0)]
excute 13:47:26.939130 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:26.943116 line       494                         if (i == j):
excute 13:47:26.947138 line       496                         i_j_list.append((
excute 13:47:26.951096 line       497                             i, j,
excute 13:47:26.955087 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:26.958078 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 1)]
excute 13:47:26.962067 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:26.967052 line       494                         if (i == j):
excute 13:47:26.971042 line       496                         i_j_list.append((
excute 13:47:26.975031 line       497                             i, j,
excute 13:47:26.979051 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:26.982043 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0)]
excute 13:47:26.985035 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:26.989025 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:47:26.992983 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:26.996006 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:26.999972 line       494                         if (i == j):
excute 13:47:27.002992 line       496                         i_j_list.append((
excute 13:47:27.006979 line       497                             i, j,
excute 13:47:27.009937 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:27.013928 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0)]
excute 13:47:27.017918 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:27.021906 line       494                         if (i == j):
excute 13:47:27.025902 line       496                         i_j_list.append((
excute 13:47:27.028888 line       497                             i, j,
excute 13:47:27.031880 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:27.035899 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0)]
excute 13:47:27.038893 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:27.042877 line       494                         if (i == j):
excute 13:47:27.046839 line       496                         i_j_list.append((
excute 13:47:27.049865 line       497                             i, j,
excute 13:47:27.053835 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:27.056843 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0)]
excute 13:47:27.060833 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:27.064791 line       494                         if (i == j):
excute 13:47:27.069778 line       496                         i_j_list.append((
excute 13:47:27.072771 line       497                             i, j,
excute 13:47:27.076760 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:27.079752 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0)]
excute 13:47:27.083742 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:27.086734 line       494                         if (i == j):
excute 13:47:27.098645 line       496                         i_j_list.append((
excute 13:47:27.101668 line       497                             i, j,
excute 13:47:27.104659 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:27.108648 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1)]
excute 13:47:27.111641 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:27.115599 line       494                         if (i == j):
excute 13:47:27.119588 line       496                         i_j_list.append((
excute 13:47:27.122612 line       497                             i, j,
excute 13:47:27.125603 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:27.129568 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 1)]
excute 13:47:27.132584 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:27.136577 line       494                         if (i == j):
excute 13:47:27.140531 line       496                         i_j_list.append((
excute 13:47:27.144521 line       497                             i, j,
excute 13:47:27.147512 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:27.151501 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0)]
excute 13:47:27.154493 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:27.159482 line       494                         if (i == j):
excute 13:47:27.163472 line       495                             continue
excute 13:47:27.167461 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:27.173445 line       494                         if (i == j):
excute 13:47:27.179429 line       496                         i_j_list.append((
excute 13:47:27.184446 line       497                             i, j,
excute 13:47:27.188436 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:27.191429 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 1)]
excute 13:47:27.194420 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:27.198408 line       494                         if (i == j):
excute 13:47:27.202366 line       496                         i_j_list.append((
excute 13:47:27.205358 line       497                             i, j,
excute 13:47:27.209347 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:27.212339 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0)]
excute 13:47:27.216329 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:27.219320 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:47:27.223310 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:27.226302 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:27.230291 line       494                         if (i == j):
excute 13:47:27.233283 line       496                         i_j_list.append((
excute 13:47:27.237272 line       497                             i, j,
excute 13:47:27.241262 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:27.244254 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 1, 0)]
excute 13:47:27.248244 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:27.252233 line       494                         if (i == j):
excute 13:47:27.256224 line       496                         i_j_list.append((
excute 13:47:27.259246 line       497                             i, j,
excute 13:47:27.263236 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:27.266228 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0)]
excute 13:47:27.269219 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:27.274176 line       494                         if (i == j):
excute 13:47:27.279162 line       496                         i_j_list.append((
excute 13:47:27.285176 line       497                             i, j,
excute 13:47:27.288168 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:27.292158 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0)]
excute 13:47:27.295151 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:27.299109 line       494                         if (i == j):
excute 13:47:27.303131 line       496                         i_j_list.append((
excute 13:47:27.306121 line       497                             i, j,
excute 13:47:27.309113 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:27.313101 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0)]
excute 13:47:27.316094 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:27.320051 line       494                         if (i == j):
excute 13:47:27.324040 line       496                         i_j_list.append((
excute 13:47:27.329027 line       497                             i, j,
excute 13:47:27.336009 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:27.340001 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 1)]
excute 13:47:27.344019 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:27.348013 line       494                         if (i == j):
excute 13:47:27.351998 line       496                         i_j_list.append((
excute 13:47:27.355987 line       497                             i, j,
excute 13:47:27.359977 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:27.362970 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 1), (8, 5, 1, 1)]
excute 13:47:27.366960 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:27.370919 line       494                         if (i == j):
excute 13:47:27.374907 line       496                         i_j_list.append((
excute 13:47:27.379891 line       497                             i, j,
excute 13:47:27.382883 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:27.386873 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 1), (8, 5, 1, 1), (8, 6, 1, 0)]
excute 13:47:27.390862 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:27.394852 line       494                         if (i == j):
excute 13:47:27.398841 line       496                         i_j_list.append((
excute 13:47:27.401832 line       497                             i, j,
excute 13:47:27.404825 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:27.408814 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 1), (8, 5, 1, 1), (8, 6, 1, 0), (8, 7, 1, 0)]
excute 13:47:27.411806 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:27.415795 line       494                         if (i == j):
excute 13:47:27.418787 line       495                             continue
excute 13:47:27.422776 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:27.425768 line       494                         if (i == j):
excute 13:47:27.429760 line       496                         i_j_list.append((
excute 13:47:27.432750 line       497                             i, j,
excute 13:47:27.435742 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:27.439732 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 1), (8, 5, 1, 1), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0)]
excute 13:47:27.442723 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:27.446713 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:47:27.450702 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:27.454691 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:27.458682 line       494                         if (i == j):
excute 13:47:27.462704 line       496                         i_j_list.append((
excute 13:47:27.465695 line       497                             i, j,
excute 13:47:27.468688 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:27.472676 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 1), (8, 5, 1, 1), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0)]
excute 13:47:27.475667 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:27.480630 line       494                         if (i == j):
excute 13:47:27.484613 line       496                         i_j_list.append((
excute 13:47:27.488602 line       497                             i, j,
excute 13:47:27.491595 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:27.495583 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 1), (8, 5, 1, 1), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0)]
excute 13:47:27.499585 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:27.502566 line       494                         if (i == j):
excute 13:47:27.507553 line       496                         i_j_list.append((
excute 13:47:27.510542 line       497                             i, j,
excute 13:47:27.514531 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:27.517523 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 1), (8, 5, 1, 1), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0)]
excute 13:47:27.520515 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:27.524505 line       494                         if (i == j):
excute 13:47:27.528494 line       496                         i_j_list.append((
excute 13:47:27.531486 line       497                             i, j,
excute 13:47:27.534478 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:27.538467 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 1), (8, 5, 1, 1), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0)]
excute 13:47:27.541459 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:27.545449 line       494                         if (i == j):
excute 13:47:27.549438 line       496                         i_j_list.append((
excute 13:47:27.552430 line       497                             i, j,
excute 13:47:27.556419 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:27.560408 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 1), (8, 5, 1, 1), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 1)]
excute 13:47:27.563400 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:27.567390 line       494                         if (i == j):
excute 13:47:27.571381 line       496                         i_j_list.append((
excute 13:47:27.574404 line       497                             i, j,
excute 13:47:27.578362 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:27.582351 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 1), (8, 5, 1, 1), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 1), (9, 5, 1, 1)]
excute 13:47:27.585342 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:27.589331 line       494                         if (i == j):
excute 13:47:27.592323 line       496                         i_j_list.append((
excute 13:47:27.596322 line       497                             i, j,
excute 13:47:27.599304 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:27.602297 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 1), (8, 5, 1, 1), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 1), (9, 5, 1, 1), (9, 6, 1, 0)]
excute 13:47:27.605289 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:27.609278 line       494                         if (i == j):
excute 13:47:27.613267 line       496                         i_j_list.append((
excute 13:47:27.617257 line       497                             i, j,
excute 13:47:27.620280 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:27.624240 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 1), (8, 5, 1, 1), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 1), (9, 5, 1, 1), (9, 6, 1, 0), (9, 7, 1, 0)]
excute 13:47:27.627230 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:27.631221 line       494                         if (i == j):
excute 13:47:27.635209 line       496                         i_j_list.append((
excute 13:47:27.638200 line       497                             i, j,
excute 13:47:27.642191 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:27.645182 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 1), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 1), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 1), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 1), (8, 5, 1, 1), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 1), (9, 5, 1, 1), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 1)]
excute 13:47:27.649174 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:27.652163 line       494                         if (i == j):
excute 13:47:27.656153 line       495                             continue
excute 13:47:27.660142 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:27.663134 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:47:27.666126 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 6, -1, 0), (7, 9, -1, 0), (5, 4, -1, 1), (5, 8, -1, 1), (7, 4, -1, 1), (7, 5, -1, 1), (7, 8, -1, 1), (0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 7, 0, 0), (6, 9, 0, 0), (0, 4, 0, 1), (0, 5, 0, 1), (0, 8, 0, 1), (6, 4, 0, 1), (6, 5, 0, 1), (6, 8, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (2, 4, 1, 1), (2, 5, 1, 1), (2, 8, 1, 1), (4, 5, 1, 1), (4, 8, 1, 1), (8, 4, 1, 1), (8, 5, 1, 1), (9, 4, 1, 1), (9, 5, 1, 1), (9, 8, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 9, 2, 0), (1, 4, 2, 1), (1, 5, 2, 1), (1, 8, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 9, 10, 0), (3, 4, 10, 1), (3, 5, 10, 1), (3, 8, 10, 1)]
excute 13:47:27.670116 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:47:27.674137 line       505                     if (self.RELOCATE):
excute 13:47:27.677128 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:47:27.682116 line       505                     if (self.RELOCATE):
excute 13:47:27.687072 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:47:27.691061 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, -1, 0)
excute 13:47:27.695050 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:47:27.699038 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:27.703027 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:27.706019 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, -1, 0)
excute 13:47:27.710009 line       556                     i = i_j[0]
excute 13:47:27.713998 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:27.717987 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:27.720979 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, -1, 0)
excute 13:47:27.724968 line       556                     i = i_j[0]
excute 13:47:27.727961 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:27.731951 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:27.734942 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, -1, 0)
excute 13:47:27.738931 line       556                     i = i_j[0]
excute 13:47:27.741923 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:27.745912 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:27.748905 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, -1, 0)
excute 13:47:27.752894 line       556                     i = i_j[0]
excute 13:47:27.756883 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:27.759876 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:27.763865 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, -1, 0)
excute 13:47:27.767854 line       556                     i = i_j[0]
excute 13:47:27.771844 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:27.776830 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:27.782816 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, -1, 0)
excute 13:47:27.786806 line       556                     i = i_j[0]
excute 13:47:27.791792 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:27.794783 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:27.798772 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -1, 0)
excute 13:47:27.802761 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:47:27.806752 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:27.810740 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:27.814731 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -1, 0)
excute 13:47:27.818720 line       556                     i = i_j[0]
excute 13:47:27.822709 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:27.826698 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:27.830689 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -1, 0)
excute 13:47:27.833680 line       556                     i = i_j[0]
excute 13:47:27.838678 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:27.842655 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:27.845679 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -1, 0)
excute 13:47:27.849668 line       556                     i = i_j[0]
excute 13:47:27.853628 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:27.856618 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:27.860608 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -1, 0)
excute 13:47:27.864597 line       556                     i = i_j[0]
excute 13:47:27.868588 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:27.871579 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:27.875567 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -1, 0)
excute 13:47:27.878560 line       556                     i = i_j[0]
excute 13:47:27.882549 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:27.886572 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:27.891527 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, -1, 1)
excute 13:47:27.894516 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:47:27.898506 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:27.902496 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:27.905487 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, -1, 1)
excute 13:47:27.909477 line       556                     i = i_j[0]
excute 13:47:27.913466 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:27.916458 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:27.920446 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 124
excute 13:47:27.923440 line       560                         if (t_tmp > self.TIME):
excute 13:47:27.926431 line       563                             if (available_vhecles[i][t] == 0):
excute 13:47:27.930421 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:47:27.933412 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 142
excute 13:47:27.937403 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:47:27.941391 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -1, 1)
excute 13:47:27.944415 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:47:27.949370 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:27.952363 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:27.957349 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -1, 1)
excute 13:47:27.962336 line       556                     i = i_j[0]
excute 13:47:27.967322 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:27.971311 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:27.975332 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -1, 1)
excute 13:47:27.979310 line       556                     i = i_j[0]
excute 13:47:27.982312 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:27.986302 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:27.990277 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 0)
excute 13:47:27.994250 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:47:27.998238 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:28.002227 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.006235 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:47:28.010238 line       556                     i = i_j[0]
excute 13:47:28.014227 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:28.017220 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.021178 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:47:28.025184 line       556                     i = i_j[0]
excute 13:47:28.028189 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:28.032180 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.036149 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 0)
excute 13:47:28.039129 line       556                     i = i_j[0]
excute 13:47:28.043120 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:28.046111 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.050101 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:47:28.054089 line       556                     i = i_j[0]
excute 13:47:28.058080 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:28.061104 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.065092 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 0)
excute 13:47:28.068083 line       556                     i = i_j[0]
excute 13:47:28.072074 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:28.076061 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.080020 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 0, 0)
excute 13:47:28.083043 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:47:28.087004 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:28.091023 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.094985 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 0, 0)
excute 13:47:28.099001 line       556                     i = i_j[0]
excute 13:47:28.102992 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:28.105982 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.109941 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 0, 0)
excute 13:47:28.112964 line       556                     i = i_j[0]
excute 13:47:28.116935 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:28.119945 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.123907 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 0, 0)
excute 13:47:28.126926 line       556                     i = i_j[0]
excute 13:47:28.130884 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:28.134873 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.138862 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 0, 0)
excute 13:47:28.142852 line       556                     i = i_j[0]
excute 13:47:28.145843 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:28.149833 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.153823 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 0, 0)
excute 13:47:28.156847 line       556                     i = i_j[0]
excute 13:47:28.160835 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:28.164820 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.168785 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 1)
excute 13:47:28.171777 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:47:28.175766 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:28.179754 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.183744 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 1)
excute 13:47:28.187733 line       556                     i = i_j[0]
excute 13:47:28.191723 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:28.195712 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.201695 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 1)
excute 13:47:28.204686 line       556                     i = i_j[0]
excute 13:47:28.208676 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:28.211668 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.215657 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 0, 1)
excute 13:47:28.218649 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:47:28.222639 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:28.229621 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.233611 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 0, 1)
excute 13:47:28.236634 line       556                     i = i_j[0]
excute 13:47:28.240591 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:28.243615 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.247604 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 0, 1)
excute 13:47:28.251562 line       556                     i = i_j[0]
excute 13:47:28.255552 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:28.259572 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.263529 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 1, 0)
excute 13:47:28.266521 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:47:28.270511 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:28.273502 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.279487 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 1, 0)
excute 13:47:28.284475 line       556                     i = i_j[0]
excute 13:47:28.288464 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:28.291456 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.295445 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 1, 0)
excute 13:47:28.299435 line       556                     i = i_j[0]
excute 13:47:28.304421 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:28.307443 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.311435 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 1, 0)
excute 13:47:28.315391 line       556                     i = i_j[0]
excute 13:47:28.318414 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:28.322384 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.326394 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 1, 0)
excute 13:47:28.332347 line       556                     i = i_j[0]
excute 13:47:28.340325 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:28.345311 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.349299 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 1, 0)
excute 13:47:28.353289 line       556                     i = i_j[0]
excute 13:47:28.358278 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:28.362267 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.366255 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 1, 0)
excute 13:47:28.371247 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:47:28.375263 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:28.379251 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.383242 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 1, 0)
excute 13:47:28.387198 line       556                     i = i_j[0]
excute 13:47:28.392185 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:28.395179 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.399168 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 1, 0)
excute 13:47:28.404154 line       556                     i = i_j[0]
excute 13:47:28.408176 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:28.411167 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.415157 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 1, 0)
excute 13:47:28.418148 line       556                     i = i_j[0]
excute 13:47:28.422137 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:28.426104 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.429119 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 1, 0)
excute 13:47:28.433107 line       556                     i = i_j[0]
excute 13:47:28.436101 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:28.440089 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.444059 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 1, 0)
excute 13:47:28.447071 line       556                     i = i_j[0]
excute 13:47:28.451027 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:28.455018 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.459006 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 1, 0)
excute 13:47:28.461999 line       556                     i = i_j[0]
excute 13:47:28.465987 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:28.469978 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.472969 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 1, 0)
excute 13:47:28.476958 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:47:28.480950 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:28.484939 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.488928 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 1, 0)
excute 13:47:28.492918 line       556                     i = i_j[0]
excute 13:47:28.497905 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:28.500899 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.506880 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 1, 0)
excute 13:47:28.510870 line       556                     i = i_j[0]
excute 13:47:28.514858 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:28.518848 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.521841 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 1, 0)
excute 13:47:28.525829 line       556                     i = i_j[0]
excute 13:47:28.529819 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:28.533808 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.537798 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 1, 0)
excute 13:47:28.540790 line       556                     i = i_j[0]
excute 13:47:28.544787 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:28.547771 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.551760 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 1, 0)
excute 13:47:28.556746 line       556                     i = i_j[0]
excute 13:47:28.560738 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:28.563728 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.568714 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 1, 0)
excute 13:47:28.571706 line       556                     i = i_j[0]
excute 13:47:28.575694 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:28.578686 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.582676 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 0)
excute 13:47:28.585668 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:47:28.589657 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:28.592649 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.596638 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 0)
excute 13:47:28.599630 line       556                     i = i_j[0]
excute 13:47:28.603620 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:28.606612 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.611598 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:47:28.615588 line       556                     i = i_j[0]
excute 13:47:28.618579 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:28.622569 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.625561 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 0)
excute 13:47:28.629550 line       556                     i = i_j[0]
excute 13:47:28.633540 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:28.636532 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.640521 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 0)
excute 13:47:28.643513 line       556                     i = i_j[0]
excute 13:47:28.647502 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:28.650495 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.655483 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 0)
excute 13:47:28.658505 line       556                     i = i_j[0]
excute 13:47:28.662464 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:28.665486 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.669447 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 1, 1)
excute 13:47:28.672467 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:47:28.676425 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:28.680447 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.685433 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 121
excute 13:47:28.689422 line       560                         if (t_tmp > self.TIME):
excute 13:47:28.693381 line       563                             if (available_vhecles[i][t] == 0):
excute 13:47:28.696404 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:47:28.700393 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 143
excute 13:47:28.703385 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:47:28.707344 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 1, 1)
excute 13:47:28.710367 line       556                     i = i_j[0]
excute 13:47:28.716351 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:28.719313 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.723302 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 1, 1)
excute 13:47:28.726294 line       556                     i = i_j[0]
excute 13:47:28.731279 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:28.734273 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.738261 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 1, 1)
excute 13:47:28.741254 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:47:28.745242 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:28.749232 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.754217 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 1, 1)
excute 13:47:28.757241 line       556                     i = i_j[0]
excute 13:47:28.761230 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:28.765220 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.768212 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 1, 1)
excute 13:47:28.772201 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:47:28.775193 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:28.779152 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.785160 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 1, 1)
excute 13:47:28.788159 line       556                     i = i_j[0]
excute 13:47:28.792117 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:28.795141 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.799112 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 1)
excute 13:47:28.802120 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:47:28.806112 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:28.810070 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.814091 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 1)
excute 13:47:28.819046 line       556                     i = i_j[0]
excute 13:47:28.824033 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:28.827025 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.831015 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 1)
excute 13:47:28.834005 line       556                     i = i_j[0]
excute 13:47:28.838991 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:28.841985 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.845975 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 2, 0)
excute 13:47:28.848966 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:47:28.853981 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:28.857943 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.861932 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 2, 0)
excute 13:47:28.864924 line       556                     i = i_j[0]
excute 13:47:28.869911 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:28.872902 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.876892 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 2, 0)
excute 13:47:28.880880 line       556                     i = i_j[0]
excute 13:47:28.885867 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:28.888889 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.892848 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 2, 0)
excute 13:47:28.895870 line       556                     i = i_j[0]
excute 13:47:28.899830 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:28.902852 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.906821 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 2, 0)
excute 13:47:28.909834 line       556                     i = i_j[0]
excute 13:47:28.913823 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:28.917793 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.921801 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 2, 0)
excute 13:47:28.924793 line       556                     i = i_j[0]
excute 13:47:28.928782 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:28.931774 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.935768 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 2, 1)
excute 13:47:28.939738 line       556                     i = i_j[0]
excute 13:47:28.942745 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:28.946736 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.950724 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 2, 1)
excute 13:47:28.954715 line       556                     i = i_j[0]
excute 13:47:28.958671 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:28.962661 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.966650 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 2, 1)
excute 13:47:28.969673 line       556                     i = i_j[0]
excute 13:47:28.973664 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:28.976655 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.980645 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 10, 0)
excute 13:47:28.984601 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:47:28.987625 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:28.991582 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:28.997574 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 10, 0)
excute 13:47:29.001557 line       556                     i = i_j[0]
excute 13:47:29.004548 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:29.008537 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:29.013525 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 10, 0)
excute 13:47:29.016518 line       556                     i = i_j[0]
excute 13:47:29.022503 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:29.025523 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:29.029483 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 10, 0)
excute 13:47:29.032505 line       556                     i = i_j[0]
excute 13:47:29.036462 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:29.040466 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:29.043476 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 10, 0)
excute 13:47:29.047467 line       556                     i = i_j[0]
excute 13:47:29.050458 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:29.054447 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:29.058406 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 10, 0)
excute 13:47:29.061429 line       556                     i = i_j[0]
excute 13:47:29.065386 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:29.068410 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:29.072399 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 10, 1)
excute 13:47:29.076356 line       556                     i = i_j[0]
excute 13:47:29.079348 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:29.083337 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:29.087327 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 10, 1)
excute 13:47:29.090319 line       556                     i = i_j[0]
excute 13:47:29.098300 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:29.105304 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:29.109270 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 123
excute 13:47:29.114255 line       560                         if (t_tmp > self.TIME):
excute 13:47:29.117279 line       563                             if (available_vhecles[i][t] == 0):
excute 13:47:29.121268 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:47:29.125230 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 144
excute 13:47:29.130213 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:47:29.133237 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 10, 1)
excute 13:47:29.137226 line       556                     i = i_j[0]
excute 13:47:29.144174 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:29.148190 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:29.152168 line       555                 for i_j in i_j_list:
excute 13:47:29.156144 line       581             self.write_matrix(
excute 13:47:29.159137 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:47:29.163137 line       583                 result_file_path,
excute 13:47:29.166118 line       584                 mode='a'
excute 13:47:29.173269 line       488         for t in time_steps:
excute Modified var:.. t = 115
excute 13:47:29.179234 line       489             if (t != self.TIME + 1):
excute 13:47:29.186217 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:47:29.192199 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:47:29.197220 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:47:29.201176 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:29.205167 line       494                         if (i == j):
excute 13:47:29.212146 line       495                             continue
excute 13:47:29.215138 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:29.219127 line       494                         if (i == j):
excute 13:47:29.223118 line       496                         i_j_list.append((
excute 13:47:29.229104 line       497                             i, j,
excute 13:47:29.235098 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:29.246061 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0)]
excute 13:47:29.250045 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:29.255042 line       494                         if (i == j):
excute 13:47:29.261016 line       496                         i_j_list.append((
excute 13:47:29.266001 line       497                             i, j,
excute 13:47:29.269991 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:29.272984 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0)]
excute 13:47:29.278967 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:29.285949 line       494                         if (i == j):
excute 13:47:29.290936 line       496                         i_j_list.append((
excute 13:47:29.295924 line       497                             i, j,
excute 13:47:29.300911 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:29.303901 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:47:29.310885 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:29.313875 line       494                         if (i == j):
excute 13:47:29.317864 line       496                         i_j_list.append((
excute 13:47:29.321853 line       497                             i, j,
excute 13:47:29.328835 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:29.338810 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0)]
excute 13:47:29.344791 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:29.348781 line       494                         if (i == j):
excute 13:47:29.352770 line       496                         i_j_list.append((
excute 13:47:29.357759 line       497                             i, j,
excute 13:47:29.361746 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:29.364738 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0)]
excute 13:47:29.367730 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:29.372718 line       494                         if (i == j):
excute 13:47:29.376707 line       496                         i_j_list.append((
excute 13:47:29.379701 line       497                             i, j,
excute 13:47:29.383688 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:29.386679 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0)]
excute 13:47:29.390669 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:29.395657 line       494                         if (i == j):
excute 13:47:29.399646 line       496                         i_j_list.append((
excute 13:47:29.402638 line       497                             i, j,
excute 13:47:29.406627 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:29.409619 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0)]
excute 13:47:29.412613 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:29.417598 line       494                         if (i == j):
excute 13:47:29.420590 line       496                         i_j_list.append((
excute 13:47:29.424578 line       497                             i, j,
excute 13:47:29.427572 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:29.430562 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0)]
excute 13:47:29.434556 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:29.438542 line       494                         if (i == j):
excute 13:47:29.442531 line       496                         i_j_list.append((
excute 13:47:29.446520 line       497                             i, j,
excute 13:47:29.449511 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:29.453500 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0)]
excute 13:47:29.456493 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:29.462478 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:47:29.470473 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:29.475444 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:29.479433 line       494                         if (i == j):
excute 13:47:29.482459 line       496                         i_j_list.append((
excute 13:47:29.486445 line       497                             i, j,
excute 13:47:29.489436 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:29.493396 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0)]
excute 13:47:29.497398 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:29.501375 line       494                         if (i == j):
excute 13:47:29.505363 line       495                             continue
excute 13:47:29.509353 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:29.513343 line       494                         if (i == j):
excute 13:47:29.516332 line       496                         i_j_list.append((
excute 13:47:29.519325 line       497                             i, j,
excute 13:47:29.523313 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:29.526305 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0)]
excute 13:47:29.529298 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:29.533287 line       494                         if (i == j):
excute 13:47:29.537278 line       496                         i_j_list.append((
excute 13:47:29.541301 line       497                             i, j,
excute 13:47:29.544289 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:29.548271 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0)]
excute 13:47:29.551241 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:29.555231 line       494                         if (i == j):
excute 13:47:29.560218 line       496                         i_j_list.append((
excute 13:47:29.563209 line       497                             i, j,
excute 13:47:29.567198 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:29.571188 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0)]
excute 13:47:29.574180 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:29.578169 line       494                         if (i == j):
excute 13:47:29.582158 line       496                         i_j_list.append((
excute 13:47:29.586148 line       497                             i, j,
excute 13:47:29.589140 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:29.593129 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0)]
excute 13:47:29.596121 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:29.600110 line       494                         if (i == j):
excute 13:47:29.605098 line       496                         i_j_list.append((
excute 13:47:29.608090 line       497                             i, j,
excute 13:47:29.612077 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:29.618062 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0)]
excute 13:47:29.621053 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:29.625044 line       494                         if (i == j):
excute 13:47:29.629033 line       496                         i_j_list.append((
excute 13:47:29.632025 line       497                             i, j,
excute 13:47:29.636015 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:29.641001 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0)]
excute 13:47:29.644991 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:29.648978 line       494                         if (i == j):
excute 13:47:29.651970 line       496                         i_j_list.append((
excute 13:47:29.655959 line       497                             i, j,
excute 13:47:29.658951 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:29.661943 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0)]
excute 13:47:29.665933 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:29.669932 line       494                         if (i == j):
excute 13:47:29.673912 line       496                         i_j_list.append((
excute 13:47:29.676903 line       497                             i, j,
excute 13:47:29.680894 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:29.684883 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0)]
excute 13:47:29.687876 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:29.692876 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:47:29.695855 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:29.699844 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:29.703833 line       494                         if (i == j):
excute 13:47:29.707824 line       496                         i_j_list.append((
excute 13:47:29.710815 line       497                             i, j,
excute 13:47:29.714804 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:29.718793 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0)]
excute 13:47:29.721785 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:29.725775 line       494                         if (i == j):
excute 13:47:29.730762 line       496                         i_j_list.append((
excute 13:47:29.733753 line       497                             i, j,
excute 13:47:29.736744 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:29.740735 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0)]
excute 13:47:29.744723 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:29.748711 line       494                         if (i == j):
excute 13:47:29.751703 line       495                             continue
excute 13:47:29.755694 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:29.759683 line       494                         if (i == j):
excute 13:47:29.762674 line       496                         i_j_list.append((
excute 13:47:29.765666 line       497                             i, j,
excute 13:47:29.769655 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:29.772647 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0)]
excute 13:47:29.775639 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:29.779629 line       494                         if (i == j):
excute 13:47:29.782621 line       496                         i_j_list.append((
excute 13:47:29.786610 line       497                             i, j,
excute 13:47:29.789602 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:29.794589 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0)]
excute 13:47:29.800574 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:29.803597 line       494                         if (i == j):
excute 13:47:29.807554 line       496                         i_j_list.append((
excute 13:47:29.810579 line       497                             i, j,
excute 13:47:29.814568 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:29.817562 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0)]
excute 13:47:29.821517 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:29.824540 line       494                         if (i == j):
excute 13:47:29.828534 line       496                         i_j_list.append((
excute 13:47:29.831490 line       497                             i, j,
excute 13:47:29.835479 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:29.838471 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0)]
excute 13:47:29.841463 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:29.845453 line       494                         if (i == j):
excute 13:47:29.850440 line       496                         i_j_list.append((
excute 13:47:29.854429 line       497                             i, j,
excute 13:47:29.857423 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:29.861412 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0)]
excute 13:47:29.864405 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:29.868394 line       494                         if (i == j):
excute 13:47:29.871386 line       496                         i_j_list.append((
excute 13:47:29.875375 line       497                             i, j,
excute 13:47:29.878366 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:29.882356 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0)]
excute 13:47:29.886345 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:29.890336 line       494                         if (i == j):
excute 13:47:29.896318 line       496                         i_j_list.append((
excute 13:47:29.899308 line       497                             i, j,
excute 13:47:29.902301 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:29.906290 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0)]
excute 13:47:29.909282 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:29.913271 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:47:29.917262 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:29.920252 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:29.923245 line       494                         if (i == j):
excute 13:47:29.927235 line       496                         i_j_list.append((
excute 13:47:29.930226 line       497                             i, j,
excute 13:47:29.933218 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:29.937207 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0)]
excute 13:47:29.940199 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:29.944189 line       494                         if (i == j):
excute 13:47:29.949177 line       496                         i_j_list.append((
excute 13:47:29.954163 line       497                             i, j,
excute 13:47:29.958152 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:29.961144 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0)]
excute 13:47:29.965133 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:29.969123 line       494                         if (i == j):
excute 13:47:29.974111 line       496                         i_j_list.append((
excute 13:47:29.977101 line       497                             i, j,
excute 13:47:29.981091 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:29.984083 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0)]
excute 13:47:29.988072 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:29.992062 line       494                         if (i == j):
excute 13:47:29.996050 line       495                             continue
excute 13:47:29.999042 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:30.003048 line       494                         if (i == j):
excute 13:47:30.007022 line       496                         i_j_list.append((
excute 13:47:30.012008 line       497                             i, j,
excute 13:47:30.018989 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.021982 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0)]
excute 13:47:30.028962 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:30.034948 line       494                         if (i == j):
excute 13:47:30.038960 line       496                         i_j_list.append((
excute 13:47:30.042956 line       497                             i, j,
excute 13:47:30.045949 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.048942 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0)]
excute 13:47:30.052900 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:30.057885 line       494                         if (i == j):
excute 13:47:30.060876 line       496                         i_j_list.append((
excute 13:47:30.064866 line       497                             i, j,
excute 13:47:30.067858 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.070850 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0)]
excute 13:47:30.074839 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:30.078829 line       494                         if (i == j):
excute 13:47:30.081821 line       496                         i_j_list.append((
excute 13:47:30.084813 line       497                             i, j,
excute 13:47:30.088803 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.091794 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0)]
excute 13:47:30.094786 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:30.098776 line       494                         if (i == j):
excute 13:47:30.102778 line       496                         i_j_list.append((
excute 13:47:30.105756 line       497                             i, j,
excute 13:47:30.109747 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.112738 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0)]
excute 13:47:30.116728 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:30.119720 line       494                         if (i == j):
excute 13:47:30.123710 line       496                         i_j_list.append((
excute 13:47:30.127700 line       497                             i, j,
excute 13:47:30.130690 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.134681 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0)]
excute 13:47:30.137671 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:30.141662 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:47:30.144653 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:30.148643 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:30.151635 line       494                         if (i == j):
excute 13:47:30.157620 line       496                         i_j_list.append((
excute 13:47:30.160611 line       497                             i, j,
excute 13:47:30.164601 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.167624 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0)]
excute 13:47:30.170616 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:30.174605 line       494                         if (i == j):
excute 13:47:30.178564 line       496                         i_j_list.append((
excute 13:47:30.181586 line       497                             i, j,
excute 13:47:30.185543 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.188567 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0)]
excute 13:47:30.191560 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:30.195552 line       494                         if (i == j):
excute 13:47:30.199527 line       496                         i_j_list.append((
excute 13:47:30.202531 line       497                             i, j,
excute 13:47:30.206519 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.209512 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0)]
excute 13:47:30.212503 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:30.216495 line       494                         if (i == j):
excute 13:47:30.220451 line       496                         i_j_list.append((
excute 13:47:30.223475 line       497                             i, j,
excute 13:47:30.227432 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.230426 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0)]
excute 13:47:30.233418 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:30.238405 line       494                         if (i == j):
excute 13:47:30.241396 line       495                             continue
excute 13:47:30.245385 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:30.249375 line       494                         if (i == j):
excute 13:47:30.253366 line       496                         i_j_list.append((
excute 13:47:30.257356 line       497                             i, j,
excute 13:47:30.262338 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.265330 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0)]
excute 13:47:30.269320 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:30.272311 line       494                         if (i == j):
excute 13:47:30.276300 line       496                         i_j_list.append((
excute 13:47:30.280325 line       497                             i, j,
excute 13:47:30.283317 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.286305 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0)]
excute 13:47:30.290263 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:30.294253 line       494                         if (i == j):
excute 13:47:30.298243 line       496                         i_j_list.append((
excute 13:47:30.301265 line       497                             i, j,
excute 13:47:30.304226 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.310213 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0)]
excute 13:47:30.314202 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:30.318191 line       494                         if (i == j):
excute 13:47:30.322180 line       496                         i_j_list.append((
excute 13:47:30.328163 line       497                             i, j,
excute 13:47:30.335144 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.339133 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0)]
excute 13:47:30.344121 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:30.347147 line       494                         if (i == j):
excute 13:47:30.351135 line       496                         i_j_list.append((
excute 13:47:30.355127 line       497                             i, j,
excute 13:47:30.359084 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.363105 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0)]
excute 13:47:30.367059 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:30.370081 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:47:30.374072 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:30.378031 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:30.381052 line       494                         if (i == j):
excute 13:47:30.386008 line       496                         i_j_list.append((
excute 13:47:30.389003 line       497                             i, j,
excute 13:47:30.392988 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.395981 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0)]
excute 13:47:30.398973 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:30.402963 line       494                         if (i == j):
excute 13:47:30.406952 line       496                         i_j_list.append((
excute 13:47:30.409943 line       497                             i, j,
excute 13:47:30.412935 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.415927 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0)]
excute 13:47:30.419918 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:30.422909 line       494                         if (i == j):
excute 13:47:30.426899 line       496                         i_j_list.append((
excute 13:47:30.429890 line       497                             i, j,
excute 13:47:30.433879 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.436871 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0)]
excute 13:47:30.439863 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:30.443854 line       494                         if (i == j):
excute 13:47:30.447842 line       496                         i_j_list.append((
excute 13:47:30.451864 line       497                             i, j,
excute 13:47:30.455856 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.458848 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0)]
excute 13:47:30.463802 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:30.466827 line       494                         if (i == j):
excute 13:47:30.470813 line       496                         i_j_list.append((
excute 13:47:30.474806 line       497                             i, j,
excute 13:47:30.477793 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.480786 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0)]
excute 13:47:30.484779 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:30.488766 line       494                         if (i == j):
excute 13:47:30.492723 line       495                             continue
excute 13:47:30.498757 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:30.501765 line       494                         if (i == j):
excute 13:47:30.505755 line       496                         i_j_list.append((
excute 13:47:30.509751 line       497                             i, j,
excute 13:47:30.513733 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.516725 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0)]
excute 13:47:30.519717 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:30.523706 line       494                         if (i == j):
excute 13:47:30.527696 line       496                         i_j_list.append((
excute 13:47:30.530688 line       497                             i, j,
excute 13:47:30.533680 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.537669 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0)]
excute 13:47:30.540662 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:30.544651 line       494                         if (i == j):
excute 13:47:30.547643 line       496                         i_j_list.append((
excute 13:47:30.551634 line       497                             i, j,
excute 13:47:30.554624 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.558614 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0)]
excute 13:47:30.561605 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:30.566593 line       494                         if (i == j):
excute 13:47:30.570587 line       496                         i_j_list.append((
excute 13:47:30.573573 line       497                             i, j,
excute 13:47:30.577562 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.580554 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0)]
excute 13:47:30.583547 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:30.587536 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:47:30.590528 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:30.594517 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:30.597509 line       494                         if (i == j):
excute 13:47:30.601499 line       496                         i_j_list.append((
excute 13:47:30.604490 line       497                             i, j,
excute 13:47:30.607483 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.611472 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0)]
excute 13:47:30.614464 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:30.618454 line       494                         if (i == j):
excute 13:47:30.622444 line       496                         i_j_list.append((
excute 13:47:30.625435 line       497                             i, j,
excute 13:47:30.628426 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.632417 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0)]
excute 13:47:30.636406 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:30.639399 line       494                         if (i == j):
excute 13:47:30.643387 line       496                         i_j_list.append((
excute 13:47:30.646379 line       497                             i, j,
excute 13:47:30.650368 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.653360 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0)]
excute 13:47:30.657352 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:30.661339 line       494                         if (i == j):
excute 13:47:30.664330 line       496                         i_j_list.append((
excute 13:47:30.670326 line       497                             i, j,
excute 13:47:30.673306 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.676298 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0)]
excute 13:47:30.680289 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:30.684277 line       494                         if (i == j):
excute 13:47:30.688268 line       496                         i_j_list.append((
excute 13:47:30.691259 line       497                             i, j,
excute 13:47:30.694251 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.698240 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0)]
excute 13:47:30.701232 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:30.705222 line       494                         if (i == j):
excute 13:47:30.709212 line       496                         i_j_list.append((
excute 13:47:30.713201 line       497                             i, j,
excute 13:47:30.716192 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.720182 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0)]
excute 13:47:30.723206 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:30.727164 line       494                         if (i == j):
excute 13:47:30.731153 line       495                             continue
excute 13:47:30.734177 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:30.737172 line       494                         if (i == j):
excute 13:47:30.741126 line       496                         i_j_list.append((
excute 13:47:30.744152 line       497                             i, j,
excute 13:47:30.748145 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.751130 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0)]
excute 13:47:30.755090 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:30.759079 line       494                         if (i == j):
excute 13:47:30.762101 line       496                         i_j_list.append((
excute 13:47:30.766091 line       497                             i, j,
excute 13:47:30.769083 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.775066 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0)]
excute 13:47:30.779025 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:30.782048 line       494                         if (i == j):
excute 13:47:30.786037 line       496                         i_j_list.append((
excute 13:47:30.789029 line       497                             i, j,
excute 13:47:30.793018 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.796013 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0)]
excute 13:47:30.799969 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:30.802960 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:47:30.806950 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:30.813931 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:30.816956 line       494                         if (i == j):
excute 13:47:30.820924 line       496                         i_j_list.append((
excute 13:47:30.824902 line       497                             i, j,
excute 13:47:30.827925 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.830917 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0)]
excute 13:47:30.834875 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:30.837866 line       494                         if (i == j):
excute 13:47:30.841856 line       496                         i_j_list.append((
excute 13:47:30.845846 line       497                             i, j,
excute 13:47:30.848872 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.851861 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0)]
excute 13:47:30.855856 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:30.859810 line       494                         if (i == j):
excute 13:47:30.863799 line       496                         i_j_list.append((
excute 13:47:30.866822 line       497                             i, j,
excute 13:47:30.869813 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.873782 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0)]
excute 13:47:30.877794 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:30.881750 line       494                         if (i == j):
excute 13:47:30.885767 line       496                         i_j_list.append((
excute 13:47:30.889729 line       497                             i, j,
excute 13:47:30.892720 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.896710 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0)]
excute 13:47:30.899702 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:30.903693 line       494                         if (i == j):
excute 13:47:30.908678 line       496                         i_j_list.append((
excute 13:47:30.912670 line       497                             i, j,
excute 13:47:30.915659 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.918651 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0)]
excute 13:47:30.922640 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:30.926631 line       494                         if (i == j):
excute 13:47:30.929621 line       496                         i_j_list.append((
excute 13:47:30.933610 line       497                             i, j,
excute 13:47:30.936603 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.939595 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0)]
excute 13:47:30.943584 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:30.948575 line       494                         if (i == j):
excute 13:47:30.952560 line       496                         i_j_list.append((
excute 13:47:30.955554 line       497                             i, j,
excute 13:47:30.959541 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:30.963532 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0)]
excute 13:47:30.969553 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:30.974504 line       494                         if (i == j):
excute 13:47:30.979488 line       495                             continue
excute 13:47:30.982480 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:30.985472 line       494                         if (i == j):
excute 13:47:30.989461 line       496                         i_j_list.append((
excute 13:47:30.993484 line       497                             i, j,
excute 13:47:30.996474 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:31.000433 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0)]
excute 13:47:31.004422 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:31.011403 line       494                         if (i == j):
excute 13:47:31.015393 line       496                         i_j_list.append((
excute 13:47:31.019386 line       497                             i, j,
excute 13:47:31.022373 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:31.026362 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0)]
excute 13:47:31.029355 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:31.033345 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:47:31.036336 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:31.040326 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:31.043317 line       494                         if (i == j):
excute 13:47:31.047307 line       496                         i_j_list.append((
excute 13:47:31.050300 line       497                             i, j,
excute 13:47:31.053291 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:31.057280 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0)]
excute 13:47:31.061271 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:31.064261 line       494                         if (i == j):
excute 13:47:31.068251 line       496                         i_j_list.append((
excute 13:47:31.072241 line       497                             i, j,
excute 13:47:31.075232 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:31.079225 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0)]
excute 13:47:31.083212 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:31.087201 line       494                         if (i == j):
excute 13:47:31.090192 line       496                         i_j_list.append((
excute 13:47:31.094181 line       497                             i, j,
excute 13:47:31.097174 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:31.100166 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0)]
excute 13:47:31.104155 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:31.108144 line       494                         if (i == j):
excute 13:47:31.111136 line       496                         i_j_list.append((
excute 13:47:31.114129 line       497                             i, j,
excute 13:47:31.118118 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:31.121110 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0)]
excute 13:47:31.124102 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:31.128091 line       494                         if (i == j):
excute 13:47:31.132091 line       496                         i_j_list.append((
excute 13:47:31.136071 line       497                             i, j,
excute 13:47:31.139061 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:31.143051 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0)]
excute 13:47:31.146043 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:31.150033 line       494                         if (i == j):
excute 13:47:31.154023 line       496                         i_j_list.append((
excute 13:47:31.157014 line       497                             i, j,
excute 13:47:31.161003 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:31.163995 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0)]
excute 13:47:31.166987 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:31.170977 line       494                         if (i == j):
excute 13:47:31.174966 line       496                         i_j_list.append((
excute 13:47:31.178957 line       497                             i, j,
excute 13:47:31.182946 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:31.186968 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0)]
excute 13:47:31.190954 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:31.194913 line       494                         if (i == j):
excute 13:47:31.198903 line       496                         i_j_list.append((
excute 13:47:31.201926 line       497                             i, j,
excute 13:47:31.205915 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:31.208908 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0)]
excute 13:47:31.212865 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:31.215859 line       494                         if (i == j):
excute 13:47:31.219848 line       495                             continue
excute 13:47:31.222838 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:31.226827 line       494                         if (i == j):
excute 13:47:31.229818 line       496                         i_j_list.append((
excute 13:47:31.233808 line       497                             i, j,
excute 13:47:31.236800 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:31.240792 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0)]
excute 13:47:31.243782 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:31.247771 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:47:31.251760 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:31.255751 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:31.259772 line       494                         if (i == j):
excute 13:47:31.263729 line       496                         i_j_list.append((
excute 13:47:31.266720 line       497                             i, j,
excute 13:47:31.269713 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:31.273701 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0)]
excute 13:47:31.276694 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:31.280683 line       494                         if (i == j):
excute 13:47:31.284672 line       496                         i_j_list.append((
excute 13:47:31.288696 line       497                             i, j,
excute 13:47:31.292651 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:31.295643 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0)]
excute 13:47:31.299633 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:31.302624 line       494                         if (i == j):
excute 13:47:31.306614 line       496                         i_j_list.append((
excute 13:47:31.310604 line       497                             i, j,
excute 13:47:31.313595 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:31.316587 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0)]
excute 13:47:31.321574 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:31.331549 line       494                         if (i == j):
excute 13:47:31.344513 line       496                         i_j_list.append((
excute 13:47:31.352494 line       497                             i, j,
excute 13:47:31.358477 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:31.366461 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0)]
excute 13:47:31.370443 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:31.379421 line       494                         if (i == j):
excute 13:47:31.386402 line       496                         i_j_list.append((
excute 13:47:31.394382 line       497                             i, j,
excute 13:47:31.398369 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:31.402358 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0)]
excute 13:47:31.407345 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:31.411335 line       494                         if (i == j):
excute 13:47:31.419314 line       496                         i_j_list.append((
excute 13:47:31.423302 line       497                             i, j,
excute 13:47:31.427293 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:31.431281 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0)]
excute 13:47:31.435273 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:31.439260 line       494                         if (i == j):
excute 13:47:31.444247 line       496                         i_j_list.append((
excute 13:47:31.451228 line       497                             i, j,
excute 13:47:31.456216 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:31.463196 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0)]
excute 13:47:31.472173 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:31.480151 line       494                         if (i == j):
excute 13:47:31.488129 line       496                         i_j_list.append((
excute 13:47:31.496108 line       497                             i, j,
excute 13:47:31.503089 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:31.510071 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0)]
excute 13:47:31.516054 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:31.524033 line       494                         if (i == j):
excute 13:47:31.532013 line       496                         i_j_list.append((
excute 13:47:31.539990 line       497                             i, j,
excute 13:47:31.546972 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:31.552956 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0)]
excute 13:47:31.558939 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:31.564925 line       494                         if (i == j):
excute 13:47:31.572902 line       495                             continue
excute 13:47:31.577889 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:31.583873 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:47:31.588859 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0)]
excute 13:47:31.596839 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:47:31.603825 line       505                     if (self.RELOCATE):
excute 13:47:31.610803 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:47:31.618780 line       505                     if (self.RELOCATE):
excute 13:47:31.627755 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:47:31.633740 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, -1, 0)
excute 13:47:31.640721 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:47:31.647702 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:31.653687 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:31.660669 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, -1, 0)
excute 13:47:31.667651 line       556                     i = i_j[0]
excute 13:47:31.675628 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:31.682609 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:31.691585 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, -1, 0)
excute 13:47:31.699565 line       556                     i = i_j[0]
excute 13:47:31.708541 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:31.714523 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:31.721505 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, -1, 0)
excute 13:47:31.729484 line       556                     i = i_j[0]
excute 13:47:31.737462 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:31.742449 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:31.749430 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, -1, 0)
excute 13:47:31.754420 line       556                     i = i_j[0]
excute 13:47:31.762396 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:31.769377 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:31.775361 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, -1, 0)
excute 13:47:31.782344 line       556                     i = i_j[0]
excute 13:47:31.786332 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:31.790321 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:31.794314 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, -1, 0)
excute 13:47:31.797302 line       556                     i = i_j[0]
excute 13:47:31.801292 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:31.806278 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:31.810268 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, -1, 0)
excute 13:47:31.813260 line       556                     i = i_j[0]
excute 13:47:31.817249 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:31.821239 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:31.825228 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, -1, 0)
excute 13:47:31.829217 line       556                     i = i_j[0]
excute 13:47:31.833207 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:31.836198 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:31.840188 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -1, 0)
excute 13:47:31.843179 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:47:31.847175 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:31.851159 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:31.855391 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -1, 0)
excute 13:47:31.859415 line       556                     i = i_j[0]
excute 13:47:31.864490 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:31.868513 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:31.872504 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -1, 0)
excute 13:47:31.875494 line       556                     i = i_j[0]
excute 13:47:31.879454 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:31.882475 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:31.886468 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -1, 0)
excute 13:47:31.890424 line       556                     i = i_j[0]
excute 13:47:31.895412 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:31.898403 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:31.902393 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -1, 0)
excute 13:47:31.907406 line       556                     i = i_j[0]
excute 13:47:31.911368 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:31.914390 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:31.918349 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -1, 0)
excute 13:47:31.921371 line       556                     i = i_j[0]
excute 13:47:31.925330 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:31.928353 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:31.932342 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -1, 0)
excute 13:47:31.936306 line       556                     i = i_j[0]
excute 13:47:31.939324 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:31.943313 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:31.948270 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -1, 0)
excute 13:47:31.951263 line       556                     i = i_j[0]
excute 13:47:31.956248 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:31.960237 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:31.964227 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -1, 0)
excute 13:47:31.968217 line       556                     i = i_j[0]
excute 13:47:31.972207 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:31.976195 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:31.980184 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 0)
excute 13:47:31.984173 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:47:31.988163 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:31.992153 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:31.996142 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:47:32.000131 line       556                     i = i_j[0]
excute 13:47:32.004120 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:32.009107 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.014095 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:47:32.017085 line       556                     i = i_j[0]
excute 13:47:32.021074 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:32.025065 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.028056 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 0)
excute 13:47:32.032045 line       556                     i = i_j[0]
excute 13:47:32.036035 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:32.040024 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.044023 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 0)
excute 13:47:32.048003 line       556                     i = i_j[0]
excute 13:47:32.051993 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:32.055982 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.059970 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 0)
excute 13:47:32.062963 line       556                     i = i_j[0]
excute 13:47:32.066952 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:32.070943 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.074931 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:47:32.077922 line       556                     i = i_j[0]
excute 13:47:32.081912 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:32.085902 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.088893 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:47:32.092883 line       556                     i = i_j[0]
excute 13:47:32.096872 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:32.099864 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.103854 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 0)
excute 13:47:32.106845 line       556                     i = i_j[0]
excute 13:47:32.110836 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:32.115822 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.119812 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 0, 0)
excute 13:47:32.123800 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:47:32.127790 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:32.131779 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.135769 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 0, 0)
excute 13:47:32.139757 line       556                     i = i_j[0]
excute 13:47:32.143747 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:32.147736 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.152736 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 0, 0)
excute 13:47:32.156711 line       556                     i = i_j[0]
excute 13:47:32.159705 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:32.163693 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.167684 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 0, 0)
excute 13:47:32.171672 line       556                     i = i_j[0]
excute 13:47:32.175663 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:32.179649 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.183639 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 0, 0)
excute 13:47:32.186633 line       556                     i = i_j[0]
excute 13:47:32.190622 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:32.194610 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.197603 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 0, 0)
excute 13:47:32.201591 line       556                     i = i_j[0]
excute 13:47:32.205583 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:32.208573 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.212564 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 0, 0)
excute 13:47:32.216553 line       556                     i = i_j[0]
excute 13:47:32.220542 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:32.224531 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.228521 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 0, 0)
excute 13:47:32.232510 line       556                     i = i_j[0]
excute 13:47:32.236500 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:32.239491 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.243481 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 0, 0)
excute 13:47:32.247469 line       556                     i = i_j[0]
excute 13:47:32.251459 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:32.256446 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.260436 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 1, 0)
excute 13:47:32.264424 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:47:32.269409 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:32.273400 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.277389 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 1, 0)
excute 13:47:32.280382 line       556                     i = i_j[0]
excute 13:47:32.285367 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:32.288358 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.292351 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 1, 0)
excute 13:47:32.296348 line       556                     i = i_j[0]
excute 13:47:32.300329 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:32.303320 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.307311 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 1, 0)
excute 13:47:32.310301 line       556                     i = i_j[0]
excute 13:47:32.314291 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:32.318280 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.323268 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 1, 0)
excute 13:47:32.334238 line       556                     i = i_j[0]
excute 13:47:32.340221 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:32.345208 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.349207 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 1, 0)
excute 13:47:32.352189 line       556                     i = i_j[0]
excute 13:47:32.357176 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:32.362161 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.366152 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 1, 0)
excute 13:47:32.370142 line       556                     i = i_j[0]
excute 13:47:32.375128 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:32.379118 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.384103 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 1, 0)
excute 13:47:32.387095 line       556                     i = i_j[0]
excute 13:47:32.392084 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:32.395074 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.399064 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 1, 0)
excute 13:47:32.403053 line       556                     i = i_j[0]
excute 13:47:32.407042 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:32.410034 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.414026 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 1, 0)
excute 13:47:32.417016 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:47:32.422004 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:32.426991 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.430981 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 1, 0)
excute 13:47:32.433972 line       556                     i = i_j[0]
excute 13:47:32.437961 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:32.441980 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.445940 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 1, 0)
excute 13:47:32.449927 line       556                     i = i_j[0]
excute 13:47:32.453920 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:32.457906 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.463891 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 1, 0)
excute 13:47:32.468880 line       556                     i = i_j[0]
excute 13:47:32.473864 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:32.477852 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.481843 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 1, 0)
excute 13:47:32.484869 line       556                     i = i_j[0]
excute 13:47:32.488855 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:32.492843 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.496833 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 1, 0)
excute 13:47:32.500797 line       556                     i = i_j[0]
excute 13:47:32.504781 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:32.510764 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.514755 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 1, 0)
excute 13:47:32.518743 line       556                     i = i_j[0]
excute 13:47:32.524727 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:32.527721 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.535700 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 1, 0)
excute 13:47:32.538691 line       556                     i = i_j[0]
excute 13:47:32.543677 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:32.546700 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.550659 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 1, 0)
excute 13:47:32.553680 line       556                     i = i_j[0]
excute 13:47:32.557670 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:32.561659 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.565619 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 1, 0)
excute 13:47:32.568641 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:47:32.572631 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:32.576620 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.580578 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 1, 0)
excute 13:47:32.583601 line       556                     i = i_j[0]
excute 13:47:32.587592 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:32.591549 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.594572 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 1, 0)
excute 13:47:32.598561 line       556                     i = i_j[0]
excute 13:47:32.602553 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:32.605511 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.609502 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 1, 0)
excute 13:47:32.614512 line       556                     i = i_j[0]
excute 13:47:32.622466 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:32.627453 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.631441 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 1, 0)
excute 13:47:32.635431 line       556                     i = i_j[0]
excute 13:47:32.639422 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:32.643411 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.647401 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 1, 0)
excute 13:47:32.651390 line       556                     i = i_j[0]
excute 13:47:32.655380 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:32.659368 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.663358 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 1, 0)
excute 13:47:32.667347 line       556                     i = i_j[0]
excute 13:47:32.671336 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:32.675326 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.680314 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 1, 0)
excute 13:47:32.683303 line       556                     i = i_j[0]
excute 13:47:32.688292 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:32.691283 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.695273 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 1, 0)
excute 13:47:32.699297 line       556                     i = i_j[0]
excute 13:47:32.703286 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:32.707267 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.711229 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 0)
excute 13:47:32.714220 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:47:32.719208 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:32.723197 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.727186 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 0)
excute 13:47:32.731207 line       556                     i = i_j[0]
excute 13:47:32.735196 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:32.739186 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.742177 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:47:32.746167 line       556                     i = i_j[0]
excute 13:47:32.750157 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:32.753149 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.757138 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 0)
excute 13:47:32.761127 line       556                     i = i_j[0]
excute 13:47:32.765087 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:32.768078 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.772068 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 0)
excute 13:47:32.776056 line       556                     i = i_j[0]
excute 13:47:32.781043 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:32.784036 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.788024 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 0)
excute 13:47:32.792025 line       556                     i = i_j[0]
excute 13:47:32.795006 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:32.798995 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.802986 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 0)
excute 13:47:32.805977 line       556                     i = i_j[0]
excute 13:47:32.810965 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:32.813953 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.817945 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 0)
excute 13:47:32.821934 line       556                     i = i_j[0]
excute 13:47:32.825925 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:32.831907 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.835897 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 0)
excute 13:47:32.839886 line       556                     i = i_j[0]
excute 13:47:32.843876 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:32.847864 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.851871 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 2, 0)
excute 13:47:32.855844 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:47:32.860829 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:32.863820 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.868808 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 2, 0)
excute 13:47:32.871801 line       556                     i = i_j[0]
excute 13:47:32.875790 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:32.879779 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.883769 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 2, 0)
excute 13:47:32.887758 line       556                     i = i_j[0]
excute 13:47:32.891747 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:32.895736 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.899727 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 2, 0)
excute 13:47:32.902718 line       556                     i = i_j[0]
excute 13:47:32.906707 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:32.910696 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.914686 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 2, 0)
excute 13:47:32.918675 line       556                     i = i_j[0]
excute 13:47:32.922665 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:32.925657 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.929646 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 2, 0)
excute 13:47:32.934633 line       556                     i = i_j[0]
excute 13:47:32.938621 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:32.942611 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.946602 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 2, 0)
excute 13:47:32.950589 line       556                     i = i_j[0]
excute 13:47:32.955582 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:32.958569 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.962559 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 2, 0)
excute 13:47:32.965549 line       556                     i = i_j[0]
excute 13:47:32.969539 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:32.973541 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.977517 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 2, 0)
excute 13:47:32.980510 line       556                     i = i_j[0]
excute 13:47:32.985496 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:32.988489 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:32.992478 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 10, 0)
excute 13:47:32.996467 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:47:33.000456 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:33.004445 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:33.008435 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 10, 0)
excute 13:47:33.012425 line       556                     i = i_j[0]
excute 13:47:33.016413 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:33.019405 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:33.023395 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 10, 0)
excute 13:47:33.027383 line       556                     i = i_j[0]
excute 13:47:33.030375 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:33.034366 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:33.039353 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 10, 0)
excute 13:47:33.043342 line       556                     i = i_j[0]
excute 13:47:33.046333 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:33.050323 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:33.054312 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 10, 0)
excute 13:47:33.057303 line       556                     i = i_j[0]
excute 13:47:33.061293 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:33.065283 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:33.069273 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 10, 0)
excute 13:47:33.073262 line       556                     i = i_j[0]
excute 13:47:33.077252 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:33.081241 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:33.085231 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 10, 0)
excute 13:47:33.088223 line       556                     i = i_j[0]
excute 13:47:33.093208 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:33.096200 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:33.100191 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 10, 0)
excute 13:47:33.103182 line       556                     i = i_j[0]
excute 13:47:33.107170 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:33.110162 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:33.114153 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 10, 0)
excute 13:47:33.117144 line       556                     i = i_j[0]
excute 13:47:33.121134 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:33.125122 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:33.128114 line       555                 for i_j in i_j_list:
excute 13:47:33.132104 line       581             self.write_matrix(
excute 13:47:33.135096 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:47:33.140083 line       583                 result_file_path,
excute 13:47:33.143075 line       584                 mode='a'
excute 13:47:33.149728 line       488         for t in time_steps:
excute Modified var:.. t = 116
excute 13:47:33.154713 line       489             if (t != self.TIME + 1):
excute 13:47:33.159736 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:47:33.162693 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:47:33.169676 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:47:33.176688 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:33.180678 line       494                         if (i == j):
excute 13:47:33.185632 line       495                             continue
excute 13:47:33.188624 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:33.192613 line       494                         if (i == j):
excute 13:47:33.196602 line       496                         i_j_list.append((
excute 13:47:33.200592 line       497                             i, j,
excute 13:47:33.204581 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:33.208572 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0)]
excute 13:47:33.216551 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:33.225534 line       494                         if (i == j):
excute 13:47:33.232506 line       496                         i_j_list.append((
excute 13:47:33.236495 line       497                             i, j,
excute 13:47:33.239488 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:33.244474 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0)]
excute 13:47:33.248463 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:33.252452 line       494                         if (i == j):
excute 13:47:33.258439 line       496                         i_j_list.append((
excute 13:47:33.262427 line       497                             i, j,
excute 13:47:33.265418 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:33.269407 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:47:33.272413 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:33.279382 line       494                         if (i == j):
excute 13:47:33.285366 line       496                         i_j_list.append((
excute 13:47:33.289355 line       497                             i, j,
excute 13:47:33.294340 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:33.297334 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0)]
excute 13:47:33.301321 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:33.305312 line       494                         if (i == j):
excute 13:47:33.310299 line       496                         i_j_list.append((
excute 13:47:33.314288 line       497                             i, j,
excute 13:47:33.321293 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:33.328250 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1)]
excute 13:47:33.340219 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:33.351198 line       494                         if (i == j):
excute 13:47:33.356178 line       496                         i_j_list.append((
excute 13:47:33.361163 line       497                             i, j,
excute 13:47:33.365153 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:33.368145 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1)]
excute 13:47:33.372132 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:33.376123 line       494                         if (i == j):
excute 13:47:33.381110 line       496                         i_j_list.append((
excute 13:47:33.385097 line       497                             i, j,
excute 13:47:33.388091 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:33.393076 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0)]
excute 13:47:33.396067 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:33.400057 line       494                         if (i == j):
excute 13:47:33.404047 line       496                         i_j_list.append((
excute 13:47:33.407038 line       497                             i, j,
excute 13:47:33.411029 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:33.414019 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0)]
excute 13:47:33.417013 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:33.421002 line       494                         if (i == j):
excute 13:47:33.424991 line       496                         i_j_list.append((
excute 13:47:33.427983 line       497                             i, j,
excute 13:47:33.431973 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:33.434965 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1)]
excute 13:47:33.437956 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:33.442944 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:47:33.446932 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:33.451920 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:33.455908 line       494                         if (i == j):
excute 13:47:33.459899 line       496                         i_j_list.append((
excute 13:47:33.462890 line       497                             i, j,
excute 13:47:33.466880 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:33.469871 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0)]
excute 13:47:33.473861 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:33.477851 line       494                         if (i == j):
excute 13:47:33.481839 line       495                             continue
excute 13:47:33.484831 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:33.488821 line       494                         if (i == j):
excute 13:47:33.492810 line       496                         i_j_list.append((
excute 13:47:33.495802 line       497                             i, j,
excute 13:47:33.500788 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:33.505775 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0)]
excute 13:47:33.510763 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:33.514753 line       494                         if (i == j):
excute 13:47:33.518741 line       496                         i_j_list.append((
excute 13:47:33.522730 line       497                             i, j,
excute 13:47:33.526718 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:33.529711 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0)]
excute 13:47:33.532702 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:33.536692 line       494                         if (i == j):
excute 13:47:33.540682 line       496                         i_j_list.append((
excute 13:47:33.543673 line       497                             i, j,
excute 13:47:33.547664 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:33.550655 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0)]
excute 13:47:33.554644 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:33.558633 line       494                         if (i == j):
excute 13:47:33.562622 line       496                         i_j_list.append((
excute 13:47:33.565646 line       497                             i, j,
excute 13:47:33.569605 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:33.572598 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1)]
excute 13:47:33.576587 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:33.580575 line       494                         if (i == j):
excute 13:47:33.584566 line       496                         i_j_list.append((
excute 13:47:33.588555 line       497                             i, j,
excute 13:47:33.591547 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:33.595536 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1)]
excute 13:47:33.599525 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:33.603515 line       494                         if (i == j):
excute 13:47:33.607504 line       496                         i_j_list.append((
excute 13:47:33.611493 line       497                             i, j,
excute 13:47:33.615483 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:33.618505 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0)]
excute 13:47:33.621497 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:33.625455 line       494                         if (i == j):
excute 13:47:33.629477 line       496                         i_j_list.append((
excute 13:47:33.632468 line       497                             i, j,
excute 13:47:33.636425 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:33.639417 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0)]
excute 13:47:33.642409 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:33.646398 line       494                         if (i == j):
excute 13:47:33.650389 line       496                         i_j_list.append((
excute 13:47:33.653411 line       497                             i, j,
excute 13:47:33.658380 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:33.661390 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1)]
excute 13:47:33.665349 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:33.668372 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:47:33.672361 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:33.676321 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:33.679342 line       494                         if (i == j):
excute 13:47:33.683335 line       496                         i_j_list.append((
excute 13:47:33.686327 line       497                             i, j,
excute 13:47:33.689315 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:33.693286 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0)]
excute 13:47:33.697294 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:33.701254 line       494                         if (i == j):
excute 13:47:33.705243 line       496                         i_j_list.append((
excute 13:47:33.709232 line       497                             i, j,
excute 13:47:33.713222 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:33.717211 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0)]
excute 13:47:33.721198 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:33.725191 line       494                         if (i == j):
excute 13:47:33.729178 line       495                             continue
excute 13:47:33.732171 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:33.735163 line       494                         if (i == j):
excute 13:47:33.740151 line       496                         i_j_list.append((
excute 13:47:33.743142 line       497                             i, j,
excute 13:47:33.747131 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:33.751118 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0)]
excute 13:47:33.755110 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:33.760095 line       494                         if (i == j):
excute 13:47:33.764084 line       496                         i_j_list.append((
excute 13:47:33.767076 line       497                             i, j,
excute 13:47:33.770068 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:33.773060 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0)]
excute 13:47:33.777049 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:33.781039 line       494                         if (i == j):
excute 13:47:33.784031 line       496                         i_j_list.append((
excute 13:47:33.787022 line       497                             i, j,
excute 13:47:33.791013 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:33.794004 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1)]
excute 13:47:33.796996 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:33.800986 line       494                         if (i == j):
excute 13:47:33.804974 line       496                         i_j_list.append((
excute 13:47:33.807966 line       497                             i, j,
excute 13:47:33.810958 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:33.813951 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1)]
excute 13:47:33.817939 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:33.821936 line       494                         if (i == j):
excute 13:47:33.825919 line       496                         i_j_list.append((
excute 13:47:33.828910 line       497                             i, j,
excute 13:47:33.831902 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:33.834894 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0)]
excute 13:47:33.838885 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:33.842874 line       494                         if (i == j):
excute 13:47:33.846865 line       496                         i_j_list.append((
excute 13:47:33.850854 line       497                             i, j,
excute 13:47:33.853845 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:33.857835 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0)]
excute 13:47:33.862822 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:33.866812 line       494                         if (i == j):
excute 13:47:33.870802 line       496                         i_j_list.append((
excute 13:47:33.873793 line       497                             i, j,
excute 13:47:33.876784 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:33.880774 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1)]
excute 13:47:33.884763 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:33.889749 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:47:33.892772 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:33.896731 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:33.899753 line       494                         if (i == j):
excute 13:47:33.903743 line       496                         i_j_list.append((
excute 13:47:33.906737 line       497                             i, j,
excute 13:47:33.910723 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:33.913716 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0)]
excute 13:47:33.916707 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:33.920698 line       494                         if (i == j):
excute 13:47:33.924657 line       496                         i_j_list.append((
excute 13:47:33.927678 line       497                             i, j,
excute 13:47:33.930673 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:33.934660 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0)]
excute 13:47:33.937651 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:33.941610 line       494                         if (i == j):
excute 13:47:33.945599 line       496                         i_j_list.append((
excute 13:47:33.949624 line       497                             i, j,
excute 13:47:33.952611 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:33.956601 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0)]
excute 13:47:33.959592 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:33.966544 line       494                         if (i == j):
excute 13:47:33.971562 line       495                             continue
excute 13:47:33.975551 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:33.979542 line       494                         if (i == j):
excute 13:47:33.983499 line       496                         i_j_list.append((
excute 13:47:33.986489 line       497                             i, j,
excute 13:47:33.990478 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:33.994468 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0)]
excute 13:47:33.997459 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:34.002447 line       494                         if (i == j):
excute 13:47:34.006438 line       496                         i_j_list.append((
excute 13:47:34.009459 line       497                             i, j,
excute 13:47:34.013452 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.016441 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1)]
excute 13:47:34.020399 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:34.023422 line       494                         if (i == j):
excute 13:47:34.027380 line       496                         i_j_list.append((
excute 13:47:34.030372 line       497                             i, j,
excute 13:47:34.034362 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.037353 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1)]
excute 13:47:34.040345 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:34.044335 line       494                         if (i == j):
excute 13:47:34.047327 line       496                         i_j_list.append((
excute 13:47:34.051315 line       497                             i, j,
excute 13:47:34.054309 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.058297 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0)]
excute 13:47:34.061289 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:34.067307 line       494                         if (i == j):
excute 13:47:34.070265 line       496                         i_j_list.append((
excute 13:47:34.074257 line       497                             i, j,
excute 13:47:34.078246 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.081238 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0)]
excute 13:47:34.085227 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:34.089217 line       494                         if (i == j):
excute 13:47:34.093207 line       496                         i_j_list.append((
excute 13:47:34.100186 line       497                             i, j,
excute 13:47:34.104177 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.110186 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1)]
excute 13:47:34.113184 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:34.117141 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:47:34.120164 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:34.124122 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:34.127113 line       494                         if (i == j):
excute 13:47:34.131103 line       496                         i_j_list.append((
excute 13:47:34.135092 line       497                             i, j,
excute 13:47:34.138084 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.142074 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0)]
excute 13:47:34.145065 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:34.149055 line       494                         if (i == j):
excute 13:47:34.152046 line       496                         i_j_list.append((
excute 13:47:34.156036 line       497                             i, j,
excute 13:47:34.159060 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.163019 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0)]
excute 13:47:34.166041 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:34.170999 line       494                         if (i == j):
excute 13:47:34.175019 line       496                         i_j_list.append((
excute 13:47:34.178012 line       497                             i, j,
excute 13:47:34.181004 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.184991 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0)]
excute 13:47:34.187982 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:34.191942 line       494                         if (i == j):
excute 13:47:34.195930 line       496                         i_j_list.append((
excute 13:47:34.198953 line       497                             i, j,
excute 13:47:34.202942 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.205934 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0)]
excute 13:47:34.209892 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:34.213885 line       494                         if (i == j):
excute 13:47:34.217872 line       495                             continue
excute 13:47:34.220863 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:34.224855 line       494                         if (i == j):
excute 13:47:34.228842 line       496                         i_j_list.append((
excute 13:47:34.231866 line       497                             i, j,
excute 13:47:34.234857 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.238847 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1)]
excute 13:47:34.241840 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:34.245797 line       494                         if (i == j):
excute 13:47:34.249787 line       496                         i_j_list.append((
excute 13:47:34.252812 line       497                             i, j,
excute 13:47:34.256798 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.259790 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1)]
excute 13:47:34.263779 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:34.267771 line       494                         if (i == j):
excute 13:47:34.271728 line       496                         i_j_list.append((
excute 13:47:34.275748 line       497                             i, j,
excute 13:47:34.279705 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.282698 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0)]
excute 13:47:34.286687 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:34.290676 line       494                         if (i == j):
excute 13:47:34.293668 line       496                         i_j_list.append((
excute 13:47:34.297657 line       497                             i, j,
excute 13:47:34.300684 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.303672 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0)]
excute 13:47:34.307662 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:34.311653 line       494                         if (i == j):
excute 13:47:34.314643 line       496                         i_j_list.append((
excute 13:47:34.318634 line       497                             i, j,
excute 13:47:34.321595 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.325615 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1)]
excute 13:47:34.333563 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:34.342539 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:47:34.347524 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:34.351513 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:34.355503 line       494                         if (i == j):
excute 13:47:34.359493 line       496                         i_j_list.append((
excute 13:47:34.364481 line       497                             i, j,
excute 13:47:34.368472 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.371462 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0)]
excute 13:47:34.376448 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:34.380436 line       494                         if (i == j):
excute 13:47:34.385425 line       496                         i_j_list.append((
excute 13:47:34.388450 line       497                             i, j,
excute 13:47:34.392437 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.396409 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0)]
excute 13:47:34.399418 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:34.403375 line       494                         if (i == j):
excute 13:47:34.407366 line       496                         i_j_list.append((
excute 13:47:34.410387 line       497                             i, j,
excute 13:47:34.414377 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.417371 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0)]
excute 13:47:34.420364 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:34.424351 line       494                         if (i == j):
excute 13:47:34.428343 line       496                         i_j_list.append((
excute 13:47:34.432310 line       497                             i, j,
excute 13:47:34.435321 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.438313 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0)]
excute 13:47:34.442302 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:34.446263 line       494                         if (i == j):
excute 13:47:34.450287 line       496                         i_j_list.append((
excute 13:47:34.454270 line       497                             i, j,
excute 13:47:34.457231 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.461220 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0)]
excute 13:47:34.464212 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:34.468202 line       494                         if (i == j):
excute 13:47:34.472191 line       495                             continue
excute 13:47:34.475183 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:34.480172 line       494                         if (i == j):
excute 13:47:34.485157 line       496                         i_j_list.append((
excute 13:47:34.488150 line       497                             i, j,
excute 13:47:34.492140 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.495132 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1)]
excute 13:47:34.499120 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:34.503108 line       494                         if (i == j):
excute 13:47:34.507099 line       496                         i_j_list.append((
excute 13:47:34.511088 line       497                             i, j,
excute 13:47:34.514110 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.517102 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0)]
excute 13:47:34.521094 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:34.525064 line       494                         if (i == j):
excute 13:47:34.529041 line       496                         i_j_list.append((
excute 13:47:34.533030 line       497                             i, j,
excute 13:47:34.536022 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.540011 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0)]
excute 13:47:34.544001 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:34.547991 line       494                         if (i == j):
excute 13:47:34.551011 line       496                         i_j_list.append((
excute 13:47:34.555001 line       497                             i, j,
excute 13:47:34.558992 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.561982 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1)]
excute 13:47:34.564976 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:34.568966 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:47:34.572954 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:34.576914 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:34.580902 line       494                         if (i == j):
excute 13:47:34.589913 line       496                         i_j_list.append((
excute 13:47:34.593909 line       497                             i, j,
excute 13:47:34.596902 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.600891 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1), (6, 0, 0, 0)]
excute 13:47:34.604880 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:34.608871 line       494                         if (i == j):
excute 13:47:34.612859 line       496                         i_j_list.append((
excute 13:47:34.617846 line       497                             i, j,
excute 13:47:34.621836 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.625824 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1), (6, 0, 0, 0), (6, 1, 0, 0)]
excute 13:47:34.629820 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:34.633804 line       494                         if (i == j):
excute 13:47:34.637790 line       496                         i_j_list.append((
excute 13:47:34.640782 line       497                             i, j,
excute 13:47:34.644771 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.647764 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0)]
excute 13:47:34.651753 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:34.655743 line       494                         if (i == j):
excute 13:47:34.659732 line       496                         i_j_list.append((
excute 13:47:34.662723 line       497                             i, j,
excute 13:47:34.666713 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.673694 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0)]
excute 13:47:34.676686 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:34.683669 line       494                         if (i == j):
excute 13:47:34.687690 line       496                         i_j_list.append((
excute 13:47:34.691646 line       497                             i, j,
excute 13:47:34.694670 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.698663 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0)]
excute 13:47:34.701652 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:34.705609 line       494                         if (i == j):
excute 13:47:34.709611 line       496                         i_j_list.append((
excute 13:47:34.713589 line       497                             i, j,
excute 13:47:34.716611 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.720569 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1)]
excute 13:47:34.723597 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:34.727564 line       494                         if (i == j):
excute 13:47:34.731577 line       495                             continue
excute 13:47:34.734563 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:34.737555 line       494                         if (i == j):
excute 13:47:34.741546 line       496                         i_j_list.append((
excute 13:47:34.745503 line       497                             i, j,
excute 13:47:34.748526 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.751518 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0)]
excute 13:47:34.755512 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:34.759467 line       494                         if (i == j):
excute 13:47:34.763456 line       496                         i_j_list.append((
excute 13:47:34.766446 line       497                             i, j,
excute 13:47:34.770436 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.773431 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0)]
excute 13:47:34.777452 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:34.781408 line       494                         if (i == j):
excute 13:47:34.785399 line       496                         i_j_list.append((
excute 13:47:34.789387 line       497                             i, j,
excute 13:47:34.793376 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.797365 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1)]
excute 13:47:34.801355 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:34.805345 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:47:34.809332 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:34.813323 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:34.816315 line       494                         if (i == j):
excute 13:47:34.821300 line       496                         i_j_list.append((
excute 13:47:34.824294 line       497                             i, j,
excute 13:47:34.828283 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.832272 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0)]
excute 13:47:34.836262 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:34.840250 line       494                         if (i == j):
excute 13:47:34.844240 line       496                         i_j_list.append((
excute 13:47:34.848229 line       497                             i, j,
excute 13:47:34.852219 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.856208 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0)]
excute 13:47:34.860197 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:34.864188 line       494                         if (i == j):
excute 13:47:34.868175 line       496                         i_j_list.append((
excute 13:47:34.871168 line       497                             i, j,
excute 13:47:34.875157 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.879147 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0)]
excute 13:47:34.883136 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:34.888122 line       494                         if (i == j):
excute 13:47:34.892147 line       496                         i_j_list.append((
excute 13:47:34.896134 line       497                             i, j,
excute 13:47:34.899127 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.903108 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0)]
excute 13:47:34.906105 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:34.910064 line       494                         if (i == j):
excute 13:47:34.914085 line       496                         i_j_list.append((
excute 13:47:34.917076 line       497                             i, j,
excute 13:47:34.920071 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.924057 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0)]
excute 13:47:34.927049 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:34.931007 line       494                         if (i == j):
excute 13:47:34.935029 line       496                         i_j_list.append((
excute 13:47:34.938020 line       497                             i, j,
excute 13:47:34.941983 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.944972 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1)]
excute 13:47:34.949959 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:34.953978 line       494                         if (i == j):
excute 13:47:34.957968 line       496                         i_j_list.append((
excute 13:47:34.961956 line       497                             i, j,
excute 13:47:34.964947 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:34.968937 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1)]
excute 13:47:34.971929 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:34.975922 line       494                         if (i == j):
excute 13:47:34.979880 line       495                             continue
excute 13:47:34.982899 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:34.986893 line       494                         if (i == j):
excute 13:47:34.991845 line       496                         i_j_list.append((
excute 13:47:34.994836 line       497                             i, j,
excute 13:47:34.998825 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:35.001817 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0)]
excute 13:47:35.005806 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:35.009796 line       494                         if (i == j):
excute 13:47:35.013786 line       496                         i_j_list.append((
excute 13:47:35.016777 line       497                             i, j,
excute 13:47:35.019769 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:35.023758 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 1)]
excute 13:47:35.026751 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:35.030740 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:47:35.033732 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:47:35.037721 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:35.041710 line       494                         if (i == j):
excute 13:47:35.045700 line       496                         i_j_list.append((
excute 13:47:35.048692 line       497                             i, j,
excute 13:47:35.051684 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:35.055673 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 0, 0)]
excute 13:47:35.058665 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:35.062654 line       494                         if (i == j):
excute 13:47:35.066643 line       496                         i_j_list.append((
excute 13:47:35.070633 line       497                             i, j,
excute 13:47:35.073626 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:35.076617 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 0, 0), (8, 1, 0, 0)]
excute 13:47:35.080606 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:35.084596 line       494                         if (i == j):
excute 13:47:35.087588 line       496                         i_j_list.append((
excute 13:47:35.091577 line       497                             i, j,
excute 13:47:35.095569 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:35.098594 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0)]
excute 13:47:35.102580 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:35.106552 line       494                         if (i == j):
excute 13:47:35.110528 line       496                         i_j_list.append((
excute 13:47:35.113550 line       497                             i, j,
excute 13:47:35.117517 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:35.120531 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0)]
excute 13:47:35.123524 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:35.127515 line       494                         if (i == j):
excute 13:47:35.131473 line       496                         i_j_list.append((
excute 13:47:35.135460 line       497                             i, j,
excute 13:47:35.138452 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:35.141444 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0)]
excute 13:47:35.145433 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:35.149423 line       494                         if (i == j):
excute 13:47:35.153413 line       496                         i_j_list.append((
excute 13:47:35.156404 line       497                             i, j,
excute 13:47:35.159396 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:35.163385 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1)]
excute 13:47:35.166377 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:35.170366 line       494                         if (i == j):
excute 13:47:35.174356 line       496                         i_j_list.append((
excute 13:47:35.177348 line       497                             i, j,
excute 13:47:35.181337 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:35.184329 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 1)]
excute 13:47:35.188320 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:35.191310 line       494                         if (i == j):
excute 13:47:35.195300 line       496                         i_j_list.append((
excute 13:47:35.200288 line       497                             i, j,
excute 13:47:35.203279 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:35.206271 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 1), (8, 7, 0, 0)]
excute 13:47:35.210260 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:35.214250 line       494                         if (i == j):
excute 13:47:35.218239 line       495                             continue
excute 13:47:35.221231 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:35.225221 line       494                         if (i == j):
excute 13:47:35.228212 line       496                         i_j_list.append((
excute 13:47:35.232202 line       497                             i, j,
excute 13:47:35.235193 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:35.239183 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 1)]
excute 13:47:35.242174 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:35.246165 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:47:35.249156 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:35.254146 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:35.258134 line       494                         if (i == j):
excute 13:47:35.262122 line       496                         i_j_list.append((
excute 13:47:35.265113 line       497                             i, j,
excute 13:47:35.268105 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:35.272094 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 1, 0)]
excute 13:47:35.275087 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:35.279076 line       494                         if (i == j):
excute 13:47:35.283072 line       496                         i_j_list.append((
excute 13:47:35.286057 line       497                             i, j,
excute 13:47:35.290046 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:35.293039 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 1, 0), (9, 1, 1, 0)]
excute 13:47:35.297028 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:35.301019 line       494                         if (i == j):
excute 13:47:35.305008 line       496                         i_j_list.append((
excute 13:47:35.307999 line       497                             i, j,
excute 13:47:35.311989 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:35.314980 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0)]
excute 13:47:35.317972 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:35.322959 line       494                         if (i == j):
excute 13:47:35.327946 line       496                         i_j_list.append((
excute 13:47:35.333947 line       497                             i, j,
excute 13:47:35.341909 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:35.346895 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0)]
excute 13:47:35.349887 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:35.354875 line       494                         if (i == j):
excute 13:47:35.358865 line       496                         i_j_list.append((
excute 13:47:35.361855 line       497                             i, j,
excute 13:47:35.365844 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:35.368836 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0)]
excute 13:47:35.372830 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:35.376816 line       494                         if (i == j):
excute 13:47:35.380805 line       496                         i_j_list.append((
excute 13:47:35.384794 line       497                             i, j,
excute 13:47:35.387785 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:35.391774 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 1)]
excute 13:47:35.394767 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:35.398756 line       494                         if (i == j):
excute 13:47:35.405739 line       496                         i_j_list.append((
excute 13:47:35.408730 line       497                             i, j,
excute 13:47:35.412719 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:35.416709 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 1), (9, 6, 1, 1)]
excute 13:47:35.419700 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:35.423690 line       494                         if (i == j):
excute 13:47:35.427679 line       496                         i_j_list.append((
excute 13:47:35.430671 line       497                             i, j,
excute 13:47:35.434660 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:35.437652 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 1), (9, 6, 1, 1), (9, 7, 1, 0)]
excute 13:47:35.441641 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:35.444634 line       494                         if (i == j):
excute 13:47:35.449620 line       496                         i_j_list.append((
excute 13:47:35.452612 line       497                             i, j,
excute 13:47:35.456601 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:35.460623 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 1), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 1), (9, 6, 1, 1), (9, 7, 1, 0), (9, 8, 1, 0)]
excute 13:47:35.466580 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:35.470566 line       494                         if (i == j):
excute 13:47:35.475553 line       495                             continue
excute 13:47:35.478543 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:35.482532 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:47:35.485524 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 8, -1, 0), (5, 6, -1, 1), (5, 9, -1, 1), (7, 5, -1, 1), (7, 6, -1, 1), (7, 9, -1, 1), (0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 7, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 9, 0, 1), (6, 5, 0, 1), (6, 9, 0, 1), (8, 5, 0, 1), (8, 6, 0, 1), (8, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 9, 1, 1), (4, 5, 1, 1), (4, 6, 1, 1), (4, 9, 1, 1), (9, 5, 1, 1), (9, 6, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 5, 2, 1), (1, 6, 2, 1), (1, 9, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 9, 10, 1)]
excute 13:47:35.489515 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:47:35.494500 line       505                     if (self.RELOCATE):
excute 13:47:35.498503 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:47:35.501481 line       505                     if (self.RELOCATE):
excute 13:47:35.505472 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:47:35.511454 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, -1, 0)
excute 13:47:35.514447 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:47:35.518436 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:35.522425 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:35.526415 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, -1, 0)
excute 13:47:35.532400 line       556                     i = i_j[0]
excute 13:47:35.539381 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:35.543370 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:35.549354 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, -1, 0)
excute 13:47:35.554340 line       556                     i = i_j[0]
excute 13:47:35.561322 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:35.565312 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:35.571296 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, -1, 0)
excute 13:47:35.574287 line       556                     i = i_j[0]
excute 13:47:35.578276 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:35.581268 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:35.585258 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, -1, 0)
excute 13:47:35.589247 line       556                     i = i_j[0]
excute 13:47:35.593251 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:35.596229 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:35.600219 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, -1, 0)
excute 13:47:35.603210 line       556                     i = i_j[0]
excute 13:47:35.608196 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:35.612186 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:35.616176 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, -1, 0)
excute 13:47:35.620164 line       556                     i = i_j[0]
excute 13:47:35.624154 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:35.628143 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:35.632134 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -1, 0)
excute 13:47:35.637121 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:47:35.641111 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:35.645098 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:35.649091 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -1, 0)
excute 13:47:35.652112 line       556                     i = i_j[0]
excute 13:47:35.657066 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:35.660059 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:35.665045 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -1, 0)
excute 13:47:35.668068 line       556                     i = i_j[0]
excute 13:47:35.672057 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:35.676019 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:35.679038 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -1, 0)
excute 13:47:35.683027 line       556                     i = i_j[0]
excute 13:47:35.687018 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:35.690009 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:35.693968 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -1, 0)
excute 13:47:35.696994 line       556                     i = i_j[0]
excute 13:47:35.700980 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:35.704973 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:35.708939 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -1, 0)
excute 13:47:35.712917 line       556                     i = i_j[0]
excute 13:47:35.716939 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:35.720931 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:35.724918 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, -1, 1)
excute 13:47:35.727908 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:47:35.731867 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:35.735888 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:35.739845 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, -1, 1)
excute 13:47:35.742868 line       556                     i = i_j[0]
excute 13:47:35.746826 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:35.749852 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:35.753839 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -1, 1)
excute 13:47:35.757831 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:47:35.761806 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:35.765776 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:35.769797 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -1, 1)
excute 13:47:35.772789 line       556                     i = i_j[0]
excute 13:47:35.776746 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:35.779769 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:35.783760 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -1, 1)
excute 13:47:35.787748 line       556                     i = i_j[0]
excute 13:47:35.791738 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:35.794729 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:35.798688 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 0)
excute 13:47:35.801710 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:47:35.805702 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:35.809658 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:35.814646 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:47:35.818665 line       556                     i = i_j[0]
excute 13:47:35.822624 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:35.826613 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:35.829604 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:47:35.833593 line       556                     i = i_j[0]
excute 13:47:35.837583 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:35.841575 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:35.845595 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 0)
excute 13:47:35.849583 line       556                     i = i_j[0]
excute 13:47:35.853547 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:35.857531 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:35.860553 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:47:35.864546 line       556                     i = i_j[0]
excute 13:47:35.868533 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:35.871524 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:35.875482 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:47:35.878506 line       556                     i = i_j[0]
excute 13:47:35.882494 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:35.886485 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:35.890443 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 0, 0)
excute 13:47:35.893468 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:47:35.897455 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:35.901447 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:35.905434 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 0, 0)
excute 13:47:35.908426 line       556                     i = i_j[0]
excute 13:47:35.912419 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:35.916377 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:35.921362 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 0, 0)
excute 13:47:35.925348 line       556                     i = i_j[0]
excute 13:47:35.929340 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:35.932332 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:35.937317 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 0, 0)
excute 13:47:35.940311 line       556                     i = i_j[0]
excute 13:47:35.951607 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:35.955601 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:35.960587 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 0, 0)
excute 13:47:35.966570 line       556                     i = i_j[0]
excute 13:47:35.974549 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:35.980533 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:35.984523 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 0, 0)
excute 13:47:35.987514 line       556                     i = i_j[0]
excute 13:47:35.991503 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:35.995527 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:35.999515 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 0, 0)
excute 13:47:36.002505 line       556                     i = i_j[0]
excute 13:47:36.006468 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:36.010455 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.014444 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 0, 0)
excute 13:47:36.019429 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:47:36.023419 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:36.027409 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.031427 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 0, 0)
excute 13:47:36.034421 line       556                     i = i_j[0]
excute 13:47:36.038379 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:36.041402 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.045392 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 0, 0)
excute 13:47:36.049380 line       556                     i = i_j[0]
excute 13:47:36.052373 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:36.056365 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.060352 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 0, 0)
excute 13:47:36.064309 line       556                     i = i_j[0]
excute 13:47:36.068300 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:36.071322 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.075313 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 0, 0)
excute 13:47:36.079300 line       556                     i = i_j[0]
excute 13:47:36.083259 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:36.086285 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.090273 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 0, 0)
excute 13:47:36.093263 line       556                     i = i_j[0]
excute 13:47:36.097254 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:36.101219 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.104233 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 1)
excute 13:47:36.108227 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:47:36.112215 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:36.115207 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.119194 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 128
excute 13:47:36.124151 line       560                         if (t_tmp > self.TIME):
excute 13:47:36.129136 line       563                             if (available_vhecles[i][t] == 0):
excute 13:47:36.132130 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:47:36.136118 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 145
excute 13:47:36.140108 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:47:36.144096 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 1)
excute 13:47:36.148087 line       556                     i = i_j[0]
excute 13:47:36.152076 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:36.156065 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.160055 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 1)
excute 13:47:36.164044 line       556                     i = i_j[0]
excute 13:47:36.168032 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:36.172023 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.176013 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 0, 1)
excute 13:47:36.179004 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:47:36.182993 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:36.186983 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.191973 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 0, 1)
excute 13:47:36.194962 line       556                     i = i_j[0]
excute 13:47:36.198951 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:36.201972 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.205965 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 0, 1)
excute 13:47:36.209943 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:47:36.212943 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:36.216904 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.221888 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 0, 1)
excute 13:47:36.227874 line       556                     i = i_j[0]
excute 13:47:36.231862 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:36.234854 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.238843 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 0, 1)
excute 13:47:36.242832 line       556                     i = i_j[0]
excute 13:47:36.247851 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:36.251839 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.255830 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 1, 0)
excute 13:47:36.259817 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:47:36.263776 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:36.267766 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.271787 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 1, 0)
excute 13:47:36.274780 line       556                     i = i_j[0]
excute 13:47:36.278768 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:36.282763 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.286747 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 1, 0)
excute 13:47:36.289741 line       556                     i = i_j[0]
excute 13:47:36.293697 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:36.296720 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.300709 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 1, 0)
excute 13:47:36.304666 line       556                     i = i_j[0]
excute 13:47:36.308661 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:36.311680 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.315638 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 1, 0)
excute 13:47:36.318660 line       556                     i = i_j[0]
excute 13:47:36.325614 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:36.338578 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.348552 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 1, 0)
excute 13:47:36.352547 line       556                     i = i_j[0]
excute 13:47:36.359522 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:36.365507 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.371490 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 1, 0)
excute 13:47:36.376476 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:47:36.381463 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:36.387445 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.392438 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 1, 0)
excute 13:47:36.399417 line       556                     i = i_j[0]
excute 13:47:36.403406 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:36.407393 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.416368 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 1, 0)
excute 13:47:36.420360 line       556                     i = i_j[0]
excute 13:47:36.424348 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:36.428340 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.434323 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 1, 0)
excute 13:47:36.438313 line       556                     i = i_j[0]
excute 13:47:36.442300 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:36.446288 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.453270 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 1, 0)
excute 13:47:36.462245 line       556                     i = i_j[0]
excute 13:47:36.470224 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:36.477207 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.486182 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 1, 0)
excute 13:47:36.493163 line       556                     i = i_j[0]
excute 13:47:36.499147 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:36.504134 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.513112 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 0)
excute 13:47:36.519096 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:47:36.525077 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:36.531062 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.540038 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 0)
excute 13:47:36.546022 line       556                     i = i_j[0]
excute 13:47:36.552007 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:36.557989 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.565968 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:47:36.570955 line       556                     i = i_j[0]
excute 13:47:36.579932 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:36.587909 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.595890 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 0)
excute 13:47:36.602870 line       556                     i = i_j[0]
excute 13:47:36.610850 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:36.616832 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.624810 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 0)
excute 13:47:36.632791 line       556                     i = i_j[0]
excute 13:47:36.641767 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:36.649744 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.655730 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 0)
excute 13:47:36.661714 line       556                     i = i_j[0]
excute 13:47:36.670689 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:36.675675 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.682657 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 0)
excute 13:47:36.688640 line       556                     i = i_j[0]
excute 13:47:36.697617 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:36.702604 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.710581 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 1, 1)
excute 13:47:36.715568 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:47:36.721554 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:36.728533 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.735516 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 1, 1)
excute 13:47:36.742497 line       556                     i = i_j[0]
excute 13:47:36.750476 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:36.757456 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.764437 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 1, 1)
excute 13:47:36.770424 line       556                     i = i_j[0]
excute 13:47:36.776406 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:36.780395 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.784385 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 1, 1)
excute 13:47:36.787376 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:47:36.791366 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:36.795360 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.799344 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 1, 1)
excute 13:47:36.802336 line       556                     i = i_j[0]
excute 13:47:36.806326 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:36.809317 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.813306 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 132
excute 13:47:36.817297 line       560                         if (t_tmp > self.TIME):
excute 13:47:36.821295 line       563                             if (available_vhecles[i][t] == 0):
excute 13:47:36.824277 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:47:36.828267 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 146
excute 13:47:36.831259 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:47:36.837242 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 1, 1)
excute 13:47:36.845223 line       556                     i = i_j[0]
excute 13:47:36.850208 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:36.855195 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.862177 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 1)
excute 13:47:36.866167 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:47:36.870155 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:36.874146 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.878162 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 1)
excute 13:47:36.881156 line       556                     i = i_j[0]
excute 13:47:36.885146 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:36.889105 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.893095 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 2, 0)
excute 13:47:36.897084 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:47:36.902069 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:36.906061 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.910051 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 2, 0)
excute 13:47:36.913042 line       556                     i = i_j[0]
excute 13:47:36.917031 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:36.921020 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.925010 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 2, 0)
excute 13:47:36.928999 line       556                     i = i_j[0]
excute 13:47:36.932989 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:36.937974 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.941963 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 2, 0)
excute 13:47:36.945952 line       556                     i = i_j[0]
excute 13:47:36.951940 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:36.955927 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.960913 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 2, 0)
excute 13:47:36.966898 line       556                     i = i_j[0]
excute 13:47:36.971885 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:36.975872 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.979862 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 2, 0)
excute 13:47:36.983852 line       556                     i = i_j[0]
excute 13:47:36.987842 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:36.991831 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:36.995818 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 2, 1)
excute 13:47:36.999808 line       556                     i = i_j[0]
excute 13:47:37.003797 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:37.006789 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:37.010778 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 2, 1)
excute 13:47:37.014767 line       556                     i = i_j[0]
excute 13:47:37.018757 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:37.021749 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:37.025739 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 2, 1)
excute 13:47:37.028731 line       556                     i = i_j[0]
excute 13:47:37.032721 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:37.036711 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:37.039702 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 124
excute 13:47:37.043692 line       560                         if (t_tmp > self.TIME):
excute 13:47:37.047681 line       563                             if (available_vhecles[i][t] == 0):
excute 13:47:37.050705 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:47:37.054663 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 147
excute 13:47:37.058682 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:47:37.062653 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 10, 0)
excute 13:47:37.065663 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:47:37.069621 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:37.073612 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:37.077601 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 10, 0)
excute 13:47:37.080592 line       556                     i = i_j[0]
excute 13:47:37.084588 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:37.087573 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:37.091562 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 10, 0)
excute 13:47:37.095553 line       556                     i = i_j[0]
excute 13:47:37.098543 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:37.102533 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:37.106557 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 10, 0)
excute 13:47:37.109548 line       556                     i = i_j[0]
excute 13:47:37.113506 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:37.116528 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:37.120509 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 10, 0)
excute 13:47:37.124475 line       556                     i = i_j[0]
excute 13:47:37.127499 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:37.131491 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:37.135446 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 10, 0)
excute 13:47:37.138437 line       556                     i = i_j[0]
excute 13:47:37.142441 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:37.145419 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:37.149407 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 10, 1)
excute 13:47:37.153397 line       556                     i = i_j[0]
excute 13:47:37.158396 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:37.161378 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:37.165367 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 10, 1)
excute 13:47:37.169356 line       556                     i = i_j[0]
excute 13:47:37.173357 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:37.176370 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:37.180357 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 10, 1)
excute 13:47:37.184349 line       556                     i = i_j[0]
excute 13:47:37.188337 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:37.191329 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:37.195286 line       555                 for i_j in i_j_list:
excute 13:47:37.199309 line       581             self.write_matrix(
excute 13:47:37.202299 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:47:37.206288 line       583                 result_file_path,
excute 13:47:37.209279 line       584                 mode='a'
excute 13:47:37.264679 line       488         for t in time_steps:
excute Modified var:.. t = 117
excute 13:47:37.274683 line       489             if (t != self.TIME + 1):
excute 13:47:37.281631 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:47:37.284623 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:47:37.288612 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:47:37.292602 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:37.297590 line       494                         if (i == j):
excute 13:47:37.301587 line       495                             continue
excute 13:47:37.312548 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:37.316541 line       494                         if (i == j):
excute 13:47:37.321526 line       496                         i_j_list.append((
excute 13:47:37.325553 line       497                             i, j,
excute 13:47:37.333494 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:37.347458 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0)]
excute 13:47:37.353444 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:37.364411 line       494                         if (i == j):
excute 13:47:37.370404 line       496                         i_j_list.append((
excute 13:47:37.375381 line       497                             i, j,
excute 13:47:37.381397 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:37.385356 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0)]
excute 13:47:37.388346 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:37.392340 line       494                         if (i == j):
excute 13:47:37.396328 line       496                         i_j_list.append((
excute 13:47:37.400315 line       497                             i, j,
excute 13:47:37.404305 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:37.408294 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:47:37.412282 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:37.416274 line       494                         if (i == j):
excute 13:47:37.421261 line       496                         i_j_list.append((
excute 13:47:37.424252 line       497                             i, j,
excute 13:47:37.428245 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:37.432229 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0)]
excute 13:47:37.435223 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:37.439212 line       494                         if (i == j):
excute 13:47:37.443200 line       496                         i_j_list.append((
excute 13:47:37.447191 line       497                             i, j,
excute 13:47:37.451180 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:37.454171 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1)]
excute 13:47:37.457163 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:37.461153 line       494                         if (i == j):
excute 13:47:37.465142 line       496                         i_j_list.append((
excute 13:47:37.469131 line       497                             i, j,
excute 13:47:37.472122 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:37.476113 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0)]
excute 13:47:37.480102 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:37.484091 line       494                         if (i == j):
excute 13:47:37.489080 line       496                         i_j_list.append((
excute 13:47:37.493069 line       497                             i, j,
excute 13:47:37.497056 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:37.501049 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0)]
excute 13:47:37.504038 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:37.508028 line       494                         if (i == j):
excute 13:47:37.513015 line       496                         i_j_list.append((
excute 13:47:37.516006 line       497                             i, j,
excute 13:47:37.518998 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:37.521989 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0)]
excute 13:47:37.525979 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:37.528972 line       494                         if (i == j):
excute 13:47:37.532962 line       496                         i_j_list.append((
excute 13:47:37.535952 line       497                             i, j,
excute 13:47:37.538944 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:37.542935 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0)]
excute 13:47:37.545926 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:37.548918 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:47:37.552906 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:37.556896 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:37.559889 line       494                         if (i == j):
excute 13:47:37.563878 line       496                         i_j_list.append((
excute 13:47:37.567868 line       497                             i, j,
excute 13:47:37.571857 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:37.575846 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0)]
excute 13:47:37.579836 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:37.582862 line       494                         if (i == j):
excute 13:47:37.586842 line       495                             continue
excute 13:47:37.589839 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:37.593817 line       494                         if (i == j):
excute 13:47:37.596791 line       496                         i_j_list.append((
excute 13:47:37.600780 line       497                             i, j,
excute 13:47:37.603772 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:37.607759 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0)]
excute 13:47:37.610754 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:37.614744 line       494                         if (i == j):
excute 13:47:37.618733 line       496                         i_j_list.append((
excute 13:47:37.621724 line       497                             i, j,
excute 13:47:37.624716 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:37.628705 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0)]
excute 13:47:37.631698 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:37.636683 line       494                         if (i == j):
excute 13:47:37.640671 line       496                         i_j_list.append((
excute 13:47:37.643665 line       497                             i, j,
excute 13:47:37.647654 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:37.651644 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0)]
excute 13:47:37.654636 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:37.659621 line       494                         if (i == j):
excute 13:47:37.662614 line       496                         i_j_list.append((
excute 13:47:37.666603 line       497                             i, j,
excute 13:47:37.669595 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:37.673586 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1)]
excute 13:47:37.677573 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:37.681564 line       494                         if (i == j):
excute 13:47:37.685553 line       496                         i_j_list.append((
excute 13:47:37.689543 line       497                             i, j,
excute 13:47:37.692535 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:37.696524 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0)]
excute 13:47:37.700513 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:37.704503 line       494                         if (i == j):
excute 13:47:37.708491 line       496                         i_j_list.append((
excute 13:47:37.711483 line       497                             i, j,
excute 13:47:37.715471 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:37.719462 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0)]
excute 13:47:37.723453 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:37.726442 line       494                         if (i == j):
excute 13:47:37.730433 line       496                         i_j_list.append((
excute 13:47:37.733425 line       497                             i, j,
excute 13:47:37.737414 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:37.741415 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0)]
excute 13:47:37.744395 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:37.748386 line       494                         if (i == j):
excute 13:47:37.752375 line       496                         i_j_list.append((
excute 13:47:37.756365 line       497                             i, j,
excute 13:47:37.759354 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:37.763345 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0)]
excute 13:47:37.767334 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:37.771325 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:47:37.774317 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:37.779304 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:37.782294 line       494                         if (i == j):
excute 13:47:37.786285 line       496                         i_j_list.append((
excute 13:47:37.789276 line       497                             i, j,
excute 13:47:37.793266 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:37.796258 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0)]
excute 13:47:37.799250 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:37.803238 line       494                         if (i == j):
excute 13:47:37.807226 line       496                         i_j_list.append((
excute 13:47:37.810220 line       497                             i, j,
excute 13:47:37.814209 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:37.818199 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0)]
excute 13:47:37.822186 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:37.826177 line       494                         if (i == j):
excute 13:47:37.830165 line       495                             continue
excute 13:47:37.833158 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:37.837148 line       494                         if (i == j):
excute 13:47:37.841136 line       496                         i_j_list.append((
excute 13:47:37.844129 line       497                             i, j,
excute 13:47:37.848118 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:37.852106 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0)]
excute 13:47:37.856096 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:37.861084 line       494                         if (i == j):
excute 13:47:37.865073 line       496                         i_j_list.append((
excute 13:47:37.868064 line       497                             i, j,
excute 13:47:37.871056 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:37.875046 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0)]
excute 13:47:37.878038 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:37.883026 line       494                         if (i == j):
excute 13:47:37.887014 line       496                         i_j_list.append((
excute 13:47:37.891003 line       497                             i, j,
excute 13:47:37.893994 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:37.896988 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1)]
excute 13:47:37.900978 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:37.903969 line       494                         if (i == j):
excute 13:47:37.907959 line       496                         i_j_list.append((
excute 13:47:37.910980 line       497                             i, j,
excute 13:47:37.913973 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:37.917931 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0)]
excute 13:47:37.920954 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:37.924945 line       494                         if (i == j):
excute 13:47:37.927935 line       496                         i_j_list.append((
excute 13:47:37.931894 line       497                             i, j,
excute 13:47:37.934916 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:37.937908 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0)]
excute 13:47:37.940900 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:37.944884 line       494                         if (i == j):
excute 13:47:37.949847 line       496                         i_j_list.append((
excute 13:47:37.952839 line       497                             i, j,
excute 13:47:37.956828 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:37.960818 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0)]
excute 13:47:37.963810 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:37.967802 line       494                         if (i == j):
excute 13:47:37.971789 line       496                         i_j_list.append((
excute 13:47:37.975777 line       497                             i, j,
excute 13:47:37.979798 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:37.983786 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0)]
excute 13:47:37.986780 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:37.990767 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:47:37.993759 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:37.997753 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:38.001707 line       494                         if (i == j):
excute 13:47:38.004730 line       496                         i_j_list.append((
excute 13:47:38.008688 line       497                             i, j,
excute 13:47:38.011711 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.014703 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0)]
excute 13:47:38.018662 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:38.021684 line       494                         if (i == j):
excute 13:47:38.025676 line       496                         i_j_list.append((
excute 13:47:38.029632 line       497                             i, j,
excute 13:47:38.032655 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.035647 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0)]
excute 13:47:38.038640 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:38.042607 line       494                         if (i == j):
excute 13:47:38.046590 line       496                         i_j_list.append((
excute 13:47:38.049610 line       497                             i, j,
excute 13:47:38.052602 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.056592 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0)]
excute 13:47:38.059583 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:38.063549 line       494                         if (i == j):
excute 13:47:38.067533 line       495                             continue
excute 13:47:38.070553 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:38.074547 line       494                         if (i == j):
excute 13:47:38.078502 line       496                         i_j_list.append((
excute 13:47:38.083503 line       497                             i, j,
excute 13:47:38.088506 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.092496 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0)]
excute 13:47:38.095488 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:38.099446 line       494                         if (i == j):
excute 13:47:38.103447 line       496                         i_j_list.append((
excute 13:47:38.106461 line       497                             i, j,
excute 13:47:38.110420 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.113439 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1)]
excute 13:47:38.116431 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:38.123382 line       494                         if (i == j):
excute 13:47:38.128369 line       496                         i_j_list.append((
excute 13:47:38.131359 line       497                             i, j,
excute 13:47:38.135350 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.139340 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0)]
excute 13:47:38.143328 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:38.147318 line       494                         if (i == j):
excute 13:47:38.151308 line       496                         i_j_list.append((
excute 13:47:38.154333 line       497                             i, j,
excute 13:47:38.158288 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.161315 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0)]
excute 13:47:38.164308 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:38.168263 line       494                         if (i == j):
excute 13:47:38.172284 line       496                         i_j_list.append((
excute 13:47:38.175244 line       497                             i, j,
excute 13:47:38.179234 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.182226 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0)]
excute 13:47:38.186215 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:38.191233 line       494                         if (i == j):
excute 13:47:38.195209 line       496                         i_j_list.append((
excute 13:47:38.199211 line       497                             i, j,
excute 13:47:38.202206 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.205198 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0)]
excute 13:47:38.209152 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:38.212175 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:47:38.216147 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:38.219156 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:38.223115 line       494                         if (i == j):
excute 13:47:38.226141 line       496                         i_j_list.append((
excute 13:47:38.230097 line       497                             i, j,
excute 13:47:38.233087 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.236080 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0)]
excute 13:47:38.242065 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:38.246055 line       494                         if (i == j):
excute 13:47:38.250043 line       496                         i_j_list.append((
excute 13:47:38.254034 line       497                             i, j,
excute 13:47:38.258023 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.262012 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0)]
excute 13:47:38.265004 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:38.268994 line       494                         if (i == j):
excute 13:47:38.272981 line       496                         i_j_list.append((
excute 13:47:38.287158 line       497                             i, j,
excute 13:47:38.291061 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.295081 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0)]
excute 13:47:38.299039 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:38.303030 line       494                         if (i == j):
excute 13:47:38.307019 line       496                         i_j_list.append((
excute 13:47:38.311009 line       497                             i, j,
excute 13:47:38.314997 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.317990 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0)]
excute 13:47:38.321980 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:38.327962 line       494                         if (i == j):
excute 13:47:38.336938 line       495                             continue
excute 13:47:38.340929 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:38.344918 line       494                         if (i == j):
excute 13:47:38.349935 line       496                         i_j_list.append((
excute 13:47:38.354890 line       497                             i, j,
excute 13:47:38.357882 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.361871 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1)]
excute 13:47:38.365862 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:38.369851 line       494                         if (i == j):
excute 13:47:38.373842 line       496                         i_j_list.append((
excute 13:47:38.377835 line       497                             i, j,
excute 13:47:38.380822 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.385807 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0)]
excute 13:47:38.388831 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:38.392791 line       494                         if (i == j):
excute 13:47:38.396777 line       496                         i_j_list.append((
excute 13:47:38.400768 line       497                             i, j,
excute 13:47:38.404758 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.407749 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0)]
excute 13:47:38.411741 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:38.414732 line       494                         if (i == j):
excute 13:47:38.418722 line       496                         i_j_list.append((
excute 13:47:38.421712 line       497                             i, j,
excute 13:47:38.425702 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.428692 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0)]
excute 13:47:38.432684 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:38.436673 line       494                         if (i == j):
excute 13:47:38.440663 line       496                         i_j_list.append((
excute 13:47:38.443654 line       497                             i, j,
excute 13:47:38.447645 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.450633 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0)]
excute 13:47:38.455622 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:38.459610 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:47:38.464597 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:38.469584 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:38.473574 line       494                         if (i == j):
excute 13:47:38.477565 line       496                         i_j_list.append((
excute 13:47:38.480555 line       497                             i, j,
excute 13:47:38.484544 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.487536 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0)]
excute 13:47:38.491526 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:38.497509 line       494                         if (i == j):
excute 13:47:38.501499 line       496                         i_j_list.append((
excute 13:47:38.505488 line       497                             i, j,
excute 13:47:38.509479 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.513468 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0)]
excute 13:47:38.516460 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:38.520449 line       494                         if (i == j):
excute 13:47:38.524439 line       496                         i_j_list.append((
excute 13:47:38.527430 line       497                             i, j,
excute 13:47:38.531420 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.534412 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0)]
excute 13:47:38.538401 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:38.542390 line       494                         if (i == j):
excute 13:47:38.546378 line       496                         i_j_list.append((
excute 13:47:38.549371 line       497                             i, j,
excute 13:47:38.553361 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.556351 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0)]
excute 13:47:38.560342 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:38.564331 line       494                         if (i == j):
excute 13:47:38.568321 line       496                         i_j_list.append((
excute 13:47:38.572308 line       497                             i, j,
excute 13:47:38.576298 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.579291 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0)]
excute 13:47:38.582283 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:38.586272 line       494                         if (i == j):
excute 13:47:38.590262 line       495                             continue
excute 13:47:38.594251 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:38.598244 line       494                         if (i == j):
excute 13:47:38.602229 line       496                         i_j_list.append((
excute 13:47:38.606219 line       497                             i, j,
excute 13:47:38.609210 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.612202 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0)]
excute 13:47:38.616193 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:38.620183 line       494                         if (i == j):
excute 13:47:38.623173 line       496                         i_j_list.append((
excute 13:47:38.627164 line       497                             i, j,
excute 13:47:38.630154 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.633146 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0)]
excute 13:47:38.637137 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:38.641127 line       494                         if (i == j):
excute 13:47:38.644117 line       496                         i_j_list.append((
excute 13:47:38.648107 line       497                             i, j,
excute 13:47:38.651099 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.654090 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0)]
excute 13:47:38.658111 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:38.662070 line       494                         if (i == j):
excute 13:47:38.665099 line       496                         i_j_list.append((
excute 13:47:38.669081 line       497                             i, j,
excute 13:47:38.674547 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.678542 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0)]
excute 13:47:38.681567 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:38.685524 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:47:38.688547 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:38.692506 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:38.695528 line       494                         if (i == j):
excute 13:47:38.699518 line       496                         i_j_list.append((
excute 13:47:38.704504 line       497                             i, j,
excute 13:47:38.707496 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.711454 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0)]
excute 13:47:38.715445 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:38.718434 line       494                         if (i == j):
excute 13:47:38.722425 line       496                         i_j_list.append((
excute 13:47:38.725447 line       497                             i, j,
excute 13:47:38.729439 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.732430 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0)]
excute 13:47:38.735423 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:38.739379 line       494                         if (i == j):
excute 13:47:38.743369 line       496                         i_j_list.append((
excute 13:47:38.746391 line       497                             i, j,
excute 13:47:38.749386 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.753376 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0)]
excute 13:47:38.756369 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:38.760355 line       494                         if (i == j):
excute 13:47:38.764341 line       496                         i_j_list.append((
excute 13:47:38.767336 line       497                             i, j,
excute 13:47:38.771325 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.774317 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0)]
excute 13:47:38.777311 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:38.781299 line       494                         if (i == j):
excute 13:47:38.785290 line       496                         i_j_list.append((
excute 13:47:38.789250 line       497                             i, j,
excute 13:47:38.792269 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.795260 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0)]
excute 13:47:38.798253 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:38.802242 line       494                         if (i == j):
excute 13:47:38.807229 line       496                         i_j_list.append((
excute 13:47:38.811219 line       497                             i, j,
excute 13:47:38.814211 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.818169 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1)]
excute 13:47:38.821192 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:38.825151 line       494                         if (i == j):
excute 13:47:38.829139 line       495                             continue
excute 13:47:38.832131 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:38.835123 line       494                         if (i == j):
excute 13:47:38.839112 line       496                         i_j_list.append((
excute 13:47:38.842104 line       497                             i, j,
excute 13:47:38.845096 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.849085 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0)]
excute 13:47:38.852077 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:38.856071 line       494                         if (i == j):
excute 13:47:38.862085 line       496                         i_j_list.append((
excute 13:47:38.866073 line       497                             i, j,
excute 13:47:38.869064 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.872057 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0)]
excute 13:47:38.876017 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:38.879037 line       494                         if (i == j):
excute 13:47:38.883027 line       496                         i_j_list.append((
excute 13:47:38.887016 line       497                             i, j,
excute 13:47:38.890008 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.893967 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0)]
excute 13:47:38.896991 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:38.900980 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:47:38.903970 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:38.911918 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:38.918898 line       494                         if (i == j):
excute 13:47:38.926880 line       496                         i_j_list.append((
excute 13:47:38.929870 line       497                             i, j,
excute 13:47:38.936853 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.939843 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0)]
excute 13:47:38.943833 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:38.947828 line       494                         if (i == j):
excute 13:47:38.951844 line       496                         i_j_list.append((
excute 13:47:38.955815 line       497                             i, j,
excute 13:47:38.958823 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.962782 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0)]
excute 13:47:38.965773 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:38.969763 line       494                         if (i == j):
excute 13:47:38.972754 line       496                         i_j_list.append((
excute 13:47:38.976744 line       497                             i, j,
excute 13:47:38.979738 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:38.982728 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0)]
excute 13:47:38.986718 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:38.989709 line       494                         if (i == j):
excute 13:47:38.993699 line       496                         i_j_list.append((
excute 13:47:38.996691 line       497                             i, j,
excute 13:47:38.999683 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:39.003672 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0)]
excute 13:47:39.006665 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:39.012649 line       494                         if (i == j):
excute 13:47:39.016640 line       496                         i_j_list.append((
excute 13:47:39.019629 line       497                             i, j,
excute 13:47:39.023620 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:39.026611 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0)]
excute 13:47:39.030600 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:39.033592 line       494                         if (i == j):
excute 13:47:39.037581 line       496                         i_j_list.append((
excute 13:47:39.040573 line       497                             i, j,
excute 13:47:39.043565 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:39.047554 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1)]
excute 13:47:39.050546 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:39.054537 line       494                         if (i == j):
excute 13:47:39.058526 line       496                         i_j_list.append((
excute 13:47:39.061517 line       497                             i, j,
excute 13:47:39.064510 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:39.067502 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0)]
excute 13:47:39.071490 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:39.075480 line       494                         if (i == j):
excute 13:47:39.078472 line       495                             continue
excute 13:47:39.082461 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:39.085454 line       494                         if (i == j):
excute 13:47:39.088445 line       496                         i_j_list.append((
excute 13:47:39.092434 line       497                             i, j,
excute 13:47:39.095427 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:39.098419 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0)]
excute 13:47:39.102408 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:39.106398 line       494                         if (i == j):
excute 13:47:39.109390 line       496                         i_j_list.append((
excute 13:47:39.113379 line       497                             i, j,
excute 13:47:39.117368 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:39.121358 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0)]
excute 13:47:39.124349 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:39.128340 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:47:39.131331 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:47:39.135321 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:39.139310 line       494                         if (i == j):
excute 13:47:39.143300 line       496                         i_j_list.append((
excute 13:47:39.146291 line       497                             i, j,
excute 13:47:39.149283 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:39.153273 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0)]
excute 13:47:39.156264 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:39.160255 line       494                         if (i == j):
excute 13:47:39.164244 line       496                         i_j_list.append((
excute 13:47:39.167235 line       497                             i, j,
excute 13:47:39.171228 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:39.174217 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0)]
excute 13:47:39.177208 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:39.181199 line       494                         if (i == j):
excute 13:47:39.185189 line       496                         i_j_list.append((
excute 13:47:39.188211 line       497                             i, j,
excute 13:47:39.191203 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:39.195193 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0)]
excute 13:47:39.198183 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:39.202174 line       494                         if (i == j):
excute 13:47:39.206132 line       496                         i_j_list.append((
excute 13:47:39.209154 line       497                             i, j,
excute 13:47:39.213113 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:39.217115 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0)]
excute 13:47:39.220093 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:39.224083 line       494                         if (i == j):
excute 13:47:39.227075 line       496                         i_j_list.append((
excute 13:47:39.231064 line       497                             i, j,
excute 13:47:39.234056 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:39.237048 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0)]
excute 13:47:39.240040 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:39.244029 line       494                         if (i == j):
excute 13:47:39.248020 line       496                         i_j_list.append((
excute 13:47:39.251011 line       497                             i, j,
excute 13:47:39.255000 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:39.258989 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1)]
excute 13:47:39.261981 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:39.266970 line       494                         if (i == j):
excute 13:47:39.269960 line       496                         i_j_list.append((
excute 13:47:39.273950 line       497                             i, j,
excute 13:47:39.276943 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:39.280931 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 0)]
excute 13:47:39.283923 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:39.287912 line       494                         if (i == j):
excute 13:47:39.291902 line       496                         i_j_list.append((
excute 13:47:39.294894 line       497                             i, j,
excute 13:47:39.297885 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:39.300878 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 0)]
excute 13:47:39.303870 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:39.307873 line       494                         if (i == j):
excute 13:47:39.311848 line       495                             continue
excute 13:47:39.314840 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:39.318830 line       494                         if (i == j):
excute 13:47:39.323817 line       496                         i_j_list.append((
excute 13:47:39.328804 line       497                             i, j,
excute 13:47:39.335786 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:39.339773 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0)]
excute 13:47:39.342765 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:39.347753 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:47:39.351742 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:47:39.356730 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:39.362715 line       494                         if (i == j):
excute 13:47:39.366702 line       496                         i_j_list.append((
excute 13:47:39.369693 line       497                             i, j,
excute 13:47:39.373684 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:39.376675 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0)]
excute 13:47:39.380667 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:39.384655 line       494                         if (i == j):
excute 13:47:39.388644 line       496                         i_j_list.append((
excute 13:47:39.391635 line       497                             i, j,
excute 13:47:39.395625 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:39.398616 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0)]
excute 13:47:39.401608 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:39.405598 line       494                         if (i == j):
excute 13:47:39.409588 line       496                         i_j_list.append((
excute 13:47:39.412579 line       497                             i, j,
excute 13:47:39.416568 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:39.419560 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0)]
excute 13:47:39.423589 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:39.427572 line       494                         if (i == j):
excute 13:47:39.431562 line       496                         i_j_list.append((
excute 13:47:39.434553 line       497                             i, j,
excute 13:47:39.438541 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:39.441533 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 0)]
excute 13:47:39.445493 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:39.450478 line       494                         if (i == j):
excute 13:47:39.455466 line       496                         i_j_list.append((
excute 13:47:39.458456 line       497                             i, j,
excute 13:47:39.462448 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:39.468431 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 0), (9, 4, 0, 0)]
excute 13:47:39.472421 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:39.476408 line       494                         if (i == j):
excute 13:47:39.480398 line       496                         i_j_list.append((
excute 13:47:39.483390 line       497                             i, j,
excute 13:47:39.487379 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:39.490371 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 0), (9, 4, 0, 0), (9, 5, 0, 1)]
excute 13:47:39.493363 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:39.497352 line       494                         if (i == j):
excute 13:47:39.501342 line       496                         i_j_list.append((
excute 13:47:39.504365 line       497                             i, j,
excute 13:47:39.508356 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:39.512314 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 0), (9, 4, 0, 0), (9, 5, 0, 1), (9, 6, 0, 0)]
excute 13:47:39.515335 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:39.519295 line       494                         if (i == j):
excute 13:47:39.523285 line       496                         i_j_list.append((
excute 13:47:39.527306 line       497                             i, j,
excute 13:47:39.531280 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:39.534286 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 0), (9, 4, 0, 0), (9, 5, 0, 1), (9, 6, 0, 0), (9, 7, 0, 0)]
excute 13:47:39.537277 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:39.541235 line       494                         if (i == j):
excute 13:47:39.545256 line       496                         i_j_list.append((
excute 13:47:39.549214 line       497                             i, j,
excute 13:47:39.552239 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:39.556212 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 0), (9, 4, 0, 0), (9, 5, 0, 1), (9, 6, 0, 0), (9, 7, 0, 0), (9, 8, 0, 0)]
excute 13:47:39.559220 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:39.563178 line       494                         if (i == j):
excute 13:47:39.567178 line       495                             continue
excute 13:47:39.570191 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:39.574148 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:47:39.577170 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (7, 5, -1, 1), (0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 0), (9, 4, 0, 0), (9, 6, 0, 0), (9, 7, 0, 0), (9, 8, 0, 0), (0, 5, 0, 1), (6, 5, 0, 1), (8, 5, 0, 1), (9, 5, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (2, 5, 1, 1), (4, 5, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (1, 5, 2, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (3, 5, 10, 1)]
excute 13:47:39.580163 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:47:39.584152 line       505                     if (self.RELOCATE):
excute 13:47:39.588130 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:47:39.591135 line       505                     if (self.RELOCATE):
excute 13:47:39.595124 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:47:39.598115 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, -1, 0)
excute 13:47:39.602105 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:47:39.606072 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:39.609054 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:39.613043 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, -1, 0)
excute 13:47:39.617034 line       556                     i = i_j[0]
excute 13:47:39.621022 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:39.624050 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:39.629002 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, -1, 0)
excute 13:47:39.632989 line       556                     i = i_j[0]
excute 13:47:39.637013 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:39.640977 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:39.643993 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, -1, 0)
excute 13:47:39.647981 line       556                     i = i_j[0]
excute 13:47:39.651966 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:39.655966 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:39.659921 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, -1, 0)
excute 13:47:39.662943 line       556                     i = i_j[0]
excute 13:47:39.666931 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:39.670927 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:39.674915 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, -1, 0)
excute 13:47:39.677906 line       556                     i = i_j[0]
excute 13:47:39.681860 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:39.684887 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:39.688841 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, -1, 0)
excute 13:47:39.691871 line       556                     i = i_j[0]
excute 13:47:39.695852 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:39.699812 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:39.702804 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, -1, 0)
excute 13:47:39.706793 line       556                     i = i_j[0]
excute 13:47:39.709784 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:39.713773 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:39.717763 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, -1, 0)
excute 13:47:39.720755 line       556                     i = i_j[0]
excute 13:47:39.724744 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:39.727768 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:39.732723 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -1, 0)
excute 13:47:39.735715 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:47:39.739704 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:39.743696 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:39.747685 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -1, 0)
excute 13:47:39.750708 line       556                     i = i_j[0]
excute 13:47:39.754691 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:39.757656 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:39.761645 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -1, 0)
excute 13:47:39.765636 line       556                     i = i_j[0]
excute 13:47:39.768627 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:39.771619 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:39.775608 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -1, 0)
excute 13:47:39.778600 line       556                     i = i_j[0]
excute 13:47:39.782589 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:39.785582 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:39.789571 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -1, 0)
excute 13:47:39.792563 line       556                     i = i_j[0]
excute 13:47:39.796559 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:39.799544 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:39.803535 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -1, 0)
excute 13:47:39.806526 line       556                     i = i_j[0]
excute 13:47:39.810515 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:39.813507 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:39.817497 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -1, 0)
excute 13:47:39.821486 line       556                     i = i_j[0]
excute 13:47:39.825480 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:39.828467 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:39.832461 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -1, 0)
excute 13:47:39.837444 line       556                     i = i_j[0]
excute 13:47:39.841434 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:39.844425 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:39.848415 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -1, 1)
excute 13:47:39.851406 line       556                     i = i_j[0]
excute 13:47:39.857391 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:39.860383 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:39.864372 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 0)
excute 13:47:39.868361 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:47:39.871353 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:39.875343 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:39.879339 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:47:39.882323 line       556                     i = i_j[0]
excute 13:47:39.886313 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:39.890307 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:39.893296 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:47:39.897283 line       556                     i = i_j[0]
excute 13:47:39.901273 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:39.904264 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:39.908254 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 0)
excute 13:47:39.911246 line       556                     i = i_j[0]
excute 13:47:39.915235 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:39.918227 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:39.922229 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 0)
excute 13:47:39.925208 line       556                     i = i_j[0]
excute 13:47:39.929198 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:39.932190 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:39.937181 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:47:39.940168 line       556                     i = i_j[0]
excute 13:47:39.944159 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:39.948147 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:39.952138 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:47:39.955130 line       556                     i = i_j[0]
excute 13:47:39.959118 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:39.964106 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:39.970089 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 0)
excute 13:47:39.973081 line       556                     i = i_j[0]
excute 13:47:39.978068 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:39.981059 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:39.985049 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 0, 0)
excute 13:47:39.988041 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:47:39.992030 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:39.997017 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.001006 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 0, 0)
excute 13:47:40.003998 line       556                     i = i_j[0]
excute 13:47:40.007987 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:40.011977 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.014968 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 0, 0)
excute 13:47:40.018958 line       556                     i = i_j[0]
excute 13:47:40.022949 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:40.025939 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.029929 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 0, 0)
excute 13:47:40.032920 line       556                     i = i_j[0]
excute 13:47:40.042943 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:40.046937 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.049928 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 0, 0)
excute 13:47:40.053918 line       556                     i = i_j[0]
excute 13:47:40.057906 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:40.060929 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.064919 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 0, 0)
excute 13:47:40.068877 line       556                     i = i_j[0]
excute 13:47:40.071902 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:40.075889 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.079849 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 0, 0)
excute 13:47:40.082873 line       556                     i = i_j[0]
excute 13:47:40.086831 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:40.089854 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.093810 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 0, 0)
excute 13:47:40.096834 line       556                     i = i_j[0]
excute 13:47:40.100823 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:40.104780 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.107805 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 0, 0)
excute 13:47:40.111796 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:47:40.115752 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:40.118776 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.122733 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 0, 0)
excute 13:47:40.126724 line       556                     i = i_j[0]
excute 13:47:40.130717 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:40.134734 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.138691 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 0, 0)
excute 13:47:40.142680 line       556                     i = i_j[0]
excute 13:47:40.146671 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:40.150660 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.154662 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 0, 0)
excute 13:47:40.158637 line       556                     i = i_j[0]
excute 13:47:40.161662 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:40.165652 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.169608 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 0, 0)
excute 13:47:40.172631 line       556                     i = i_j[0]
excute 13:47:40.176590 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:40.179612 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.183572 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 0, 0)
excute 13:47:40.186596 line       556                     i = i_j[0]
excute 13:47:40.190552 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:40.193574 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.197565 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 0, 0)
excute 13:47:40.201554 line       556                     i = i_j[0]
excute 13:47:40.205512 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:40.208535 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.212525 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 0, 0)
excute 13:47:40.215518 line       556                     i = i_j[0]
excute 13:47:40.219476 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:40.222497 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.226456 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 0, 0)
excute 13:47:40.229480 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:47:40.233468 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:40.237427 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.241418 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 0, 0)
excute 13:47:40.245408 line       556                     i = i_j[0]
excute 13:47:40.249396 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:40.253385 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.258372 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 0, 0)
excute 13:47:40.262391 line       556                     i = i_j[0]
excute 13:47:40.266353 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:40.269372 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.273331 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 0, 0)
excute 13:47:40.277319 line       556                     i = i_j[0]
excute 13:47:40.281345 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:40.284332 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.288322 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 0, 0)
excute 13:47:40.292286 line       556                     i = i_j[0]
excute 13:47:40.295306 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:40.299292 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.303250 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 0, 0)
excute 13:47:40.306277 line       556                     i = i_j[0]
excute 13:47:40.310234 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:40.313256 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.317213 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 0, 0)
excute 13:47:40.321204 line       556                     i = i_j[0]
excute 13:47:40.325228 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:40.332174 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.340154 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 0, 0)
excute 13:47:40.345141 line       556                     i = i_j[0]
excute 13:47:40.351122 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:40.356112 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.362096 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 1)
excute 13:47:40.366084 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:47:40.371074 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:40.375060 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.380045 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 0, 1)
excute 13:47:40.385033 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:47:40.389065 line       557                     j = i_j[1]
excute 13:47:40.393011 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.396033 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 0, 1)
excute 13:47:40.399028 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:47:40.403020 line       557                     j = i_j[1]
excute 13:47:40.406973 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.410004 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 0, 1)
excute 13:47:40.413985 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:47:40.417979 line       557                     j = i_j[1]
excute 13:47:40.421933 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.424956 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 1, 0)
excute 13:47:40.427949 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:47:40.431938 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:40.435909 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.439886 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 1, 0)
excute 13:47:40.442908 line       556                     i = i_j[0]
excute 13:47:40.446866 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:40.452853 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.456842 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 1, 0)
excute 13:47:40.460830 line       556                     i = i_j[0]
excute 13:47:40.464820 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:40.468809 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.472800 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 1, 0)
excute 13:47:40.475789 line       556                     i = i_j[0]
excute 13:47:40.479778 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:40.483767 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.488787 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 1, 0)
excute 13:47:40.492745 line       556                     i = i_j[0]
excute 13:47:40.496735 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:40.500724 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.504713 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 1, 0)
excute 13:47:40.509732 line       556                     i = i_j[0]
excute 13:47:40.513690 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:40.516681 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.520671 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 1, 0)
excute 13:47:40.524661 line       556                     i = i_j[0]
excute 13:47:40.528648 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:40.531678 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.535660 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 1, 0)
excute 13:47:40.539619 line       556                     i = i_j[0]
excute 13:47:40.543608 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:40.546631 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.550624 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 1, 0)
excute 13:47:40.554579 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:47:40.558568 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:40.562559 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.566582 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 1, 0)
excute 13:47:40.569573 line       556                     i = i_j[0]
excute 13:47:40.573560 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:40.577516 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.585496 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 1, 0)
excute 13:47:40.591482 line       556                     i = i_j[0]
excute 13:47:40.595475 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:40.598463 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.601454 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 1, 0)
excute 13:47:40.605444 line       556                     i = i_j[0]
excute 13:47:40.609433 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:40.613422 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.617412 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 1, 0)
excute 13:47:40.621401 line       556                     i = i_j[0]
excute 13:47:40.625390 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:40.629380 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.633372 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 1, 0)
excute 13:47:40.637359 line       556                     i = i_j[0]
excute 13:47:40.641349 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:40.644340 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.648330 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 1, 0)
excute 13:47:40.652318 line       556                     i = i_j[0]
excute 13:47:40.659301 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:40.663288 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.667288 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 1, 0)
excute 13:47:40.671266 line       556                     i = i_j[0]
excute 13:47:40.675257 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:40.678250 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.682238 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 1, 1)
excute 13:47:40.685261 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:47:40.690216 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:40.693239 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.698200 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 1, 1)
excute 13:47:40.701217 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:47:40.705211 line       557                     j = i_j[1]
excute 13:47:40.708199 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.712156 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 2, 0)
excute 13:47:40.716178 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:47:40.720137 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:40.723159 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.727150 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 2, 0)
excute 13:47:40.731106 line       556                     i = i_j[0]
excute 13:47:40.734132 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:40.738120 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.741111 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 2, 0)
excute 13:47:40.745103 line       556                     i = i_j[0]
excute 13:47:40.749060 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:40.752082 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.756040 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 2, 0)
excute 13:47:40.761062 line       556                     i = i_j[0]
excute 13:47:40.765017 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:40.768039 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.771999 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 2, 0)
excute 13:47:40.775020 line       556                     i = i_j[0]
excute 13:47:40.778984 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:40.782968 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.785961 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 2, 0)
excute 13:47:40.789951 line       556                     i = i_j[0]
excute 13:47:40.793941 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:40.796932 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.800927 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 2, 0)
excute 13:47:40.803913 line       556                     i = i_j[0]
excute 13:47:40.807903 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:40.811890 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.814882 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 2, 0)
excute 13:47:40.818873 line       556                     i = i_j[0]
excute 13:47:40.822863 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:40.826882 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.830843 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 2, 1)
excute 13:47:40.833863 line       556                     i = i_j[0]
excute 13:47:40.837856 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:40.840847 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.844804 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 127
excute 13:47:40.847826 line       560                         if (t_tmp > self.TIME):
excute 13:47:40.851792 line       563                             if (available_vhecles[i][t] == 0):
excute 13:47:40.856774 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:47:40.862755 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 148
excute 13:47:40.866745 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:47:40.870736 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 10, 0)
excute 13:47:40.873727 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:47:40.878714 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:40.882705 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.886704 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 10, 0)
excute 13:47:40.889714 line       556                     i = i_j[0]
excute 13:47:40.893673 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:40.896697 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.900654 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 10, 0)
excute 13:47:40.903677 line       556                     i = i_j[0]
excute 13:47:40.907645 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:40.910658 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.914649 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 10, 0)
excute 13:47:40.918605 line       556                     i = i_j[0]
excute 13:47:40.921629 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:40.925607 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.928613 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 10, 0)
excute 13:47:40.932600 line       556                     i = i_j[0]
excute 13:47:40.936558 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:40.939581 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.943540 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 10, 0)
excute 13:47:40.947529 line       556                     i = i_j[0]
excute 13:47:40.951517 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:40.955537 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.958529 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 10, 0)
excute 13:47:40.963486 line       556                     i = i_j[0]
excute 13:47:40.967474 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:40.971464 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.974458 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 10, 0)
excute 13:47:40.978446 line       556                     i = i_j[0]
excute 13:47:40.982467 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:40.986445 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:40.989418 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 10, 1)
excute 13:47:40.993406 line       556                     i = i_j[0]
excute 13:47:40.997397 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:41.000388 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:41.004377 line       555                 for i_j in i_j_list:
excute 13:47:41.008366 line       581             self.write_matrix(
excute 13:47:41.011388 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:47:41.015360 line       583                 result_file_path,
excute 13:47:41.018370 line       584                 mode='a'
excute 13:47:41.026612 line       488         for t in time_steps:
excute Modified var:.. t = 118
excute 13:47:41.030583 line       489             if (t != self.TIME + 1):
excute 13:47:41.034572 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:47:41.040555 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:47:41.047537 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:47:41.053521 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:41.059505 line       494                         if (i == j):
excute 13:47:41.063496 line       495                             continue
excute 13:47:41.067485 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:41.072471 line       494                         if (i == j):
excute 13:47:41.076461 line       496                         i_j_list.append((
excute 13:47:41.080450 line       497                             i, j,
excute 13:47:41.085436 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:41.089427 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0)]
excute 13:47:41.100399 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:41.109372 line       494                         if (i == j):
excute 13:47:41.114359 line       496                         i_j_list.append((
excute 13:47:41.118349 line       497                             i, j,
excute 13:47:41.121340 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:41.125331 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0)]
excute 13:47:41.129319 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:41.134308 line       494                         if (i == j):
excute 13:47:41.138296 line       496                         i_j_list.append((
excute 13:47:41.142286 line       497                             i, j,
excute 13:47:41.148270 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:41.155251 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:47:41.158241 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:41.164227 line       494                         if (i == j):
excute 13:47:41.167218 line       496                         i_j_list.append((
excute 13:47:41.173202 line       497                             i, j,
excute 13:47:41.177191 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:41.181185 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0)]
excute 13:47:41.184172 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:41.188162 line       494                         if (i == j):
excute 13:47:41.193149 line       496                         i_j_list.append((
excute 13:47:41.196141 line       497                             i, j,
excute 13:47:41.200130 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:41.204134 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0)]
excute 13:47:41.207111 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:41.211120 line       494                         if (i == j):
excute 13:47:41.214091 line       496                         i_j_list.append((
excute 13:47:41.217084 line       497                             i, j,
excute 13:47:41.221073 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:41.224064 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0)]
excute 13:47:41.227057 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:41.231046 line       494                         if (i == j):
excute 13:47:41.234038 line       496                         i_j_list.append((
excute 13:47:41.238027 line       497                             i, j,
excute 13:47:41.241019 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:41.244011 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0)]
excute 13:47:41.247004 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:41.250995 line       494                         if (i == j):
excute 13:47:41.254984 line       496                         i_j_list.append((
excute 13:47:41.258972 line       497                             i, j,
excute 13:47:41.262961 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:41.265953 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0)]
excute 13:47:41.272935 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:41.278919 line       494                         if (i == j):
excute 13:47:41.282908 line       496                         i_j_list.append((
excute 13:47:41.285900 line       497                             i, j,
excute 13:47:41.288892 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:41.292882 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0)]
excute 13:47:41.295873 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:41.299863 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:47:41.302855 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:41.306845 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:41.309837 line       494                         if (i == j):
excute 13:47:41.315827 line       496                         i_j_list.append((
excute 13:47:41.318812 line       497                             i, j,
excute 13:47:41.324796 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:41.334773 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0)]
excute 13:47:41.342749 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:41.349730 line       494                         if (i == j):
excute 13:47:41.353719 line       495                             continue
excute 13:47:41.358706 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:41.365699 line       494                         if (i == j):
excute 13:47:41.372670 line       496                         i_j_list.append((
excute 13:47:41.380648 line       497                             i, j,
excute 13:47:41.386632 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:41.389623 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0)]
excute 13:47:41.394610 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:41.398600 line       494                         if (i == j):
excute 13:47:41.407575 line       496                         i_j_list.append((
excute 13:47:41.413559 line       497                             i, j,
excute 13:47:41.423532 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:41.426524 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0)]
excute 13:47:41.430514 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:41.434503 line       494                         if (i == j):
excute 13:47:41.438493 line       496                         i_j_list.append((
excute 13:47:41.442481 line       497                             i, j,
excute 13:47:41.446471 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:41.451458 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0)]
excute 13:47:41.459437 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:41.472404 line       494                         if (i == j):
excute 13:47:41.482377 line       496                         i_j_list.append((
excute 13:47:41.492349 line       497                             i, j,
excute 13:47:41.499331 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:41.504316 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0)]
excute 13:47:41.511297 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:41.517281 line       494                         if (i == j):
excute 13:47:41.524263 line       496                         i_j_list.append((
excute 13:47:41.529250 line       497                             i, j,
excute 13:47:41.536230 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:41.543213 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0)]
excute 13:47:41.549196 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:41.555181 line       494                         if (i == j):
excute 13:47:41.561165 line       496                         i_j_list.append((
excute 13:47:41.568145 line       497                             i, j,
excute 13:47:41.573132 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:41.581111 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0)]
excute 13:47:41.588092 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:41.594076 line       494                         if (i == j):
excute 13:47:41.600061 line       496                         i_j_list.append((
excute 13:47:41.605048 line       497                             i, j,
excute 13:47:41.610034 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:41.616018 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0)]
excute 13:47:41.622002 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:41.627986 line       494                         if (i == j):
excute 13:47:41.633970 line       496                         i_j_list.append((
excute 13:47:41.641948 line       497                             i, j,
excute 13:47:41.648932 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:41.656908 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0)]
excute 13:47:41.664887 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:41.673864 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:47:41.680843 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:41.687827 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:41.694821 line       494                         if (i == j):
excute 13:47:41.701789 line       496                         i_j_list.append((
excute 13:47:41.708771 line       497                             i, j,
excute 13:47:41.716749 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:41.722732 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0)]
excute 13:47:41.730711 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:41.738689 line       494                         if (i == j):
excute 13:47:41.745671 line       496                         i_j_list.append((
excute 13:47:41.753650 line       497                             i, j,
excute 13:47:41.759635 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:41.765618 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0)]
excute 13:47:41.770605 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:41.776590 line       494                         if (i == j):
excute 13:47:41.783571 line       495                             continue
excute 13:47:41.787558 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:41.791551 line       494                         if (i == j):
excute 13:47:41.795537 line       496                         i_j_list.append((
excute 13:47:41.799527 line       497                             i, j,
excute 13:47:41.802519 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:41.805511 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0)]
excute 13:47:41.809500 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:41.813505 line       494                         if (i == j):
excute 13:47:41.817480 line       496                         i_j_list.append((
excute 13:47:41.820471 line       497                             i, j,
excute 13:47:41.824461 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:41.827452 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0)]
excute 13:47:41.830444 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:41.834434 line       494                         if (i == j):
excute 13:47:41.838424 line       496                         i_j_list.append((
excute 13:47:41.841415 line       497                             i, j,
excute 13:47:41.844407 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:41.848406 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0)]
excute 13:47:41.851388 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:41.855379 line       494                         if (i == j):
excute 13:47:41.858405 line       496                         i_j_list.append((
excute 13:47:41.862391 line       497                             i, j,
excute 13:47:41.865383 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:41.868374 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0)]
excute 13:47:41.872336 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:41.876323 line       494                         if (i == j):
excute 13:47:41.880313 line       496                         i_j_list.append((
excute 13:47:41.884302 line       497                             i, j,
excute 13:47:41.888291 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:41.891284 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0)]
excute 13:47:41.897266 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:41.901257 line       494                         if (i == j):
excute 13:47:41.904273 line       496                         i_j_list.append((
excute 13:47:41.907266 line       497                             i, j,
excute 13:47:41.911262 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:41.914256 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0)]
excute 13:47:41.917244 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:41.921236 line       494                         if (i == j):
excute 13:47:41.925191 line       496                         i_j_list.append((
excute 13:47:41.928183 line       497                             i, j,
excute 13:47:41.931175 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:41.935164 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0)]
excute 13:47:41.938156 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:41.942146 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:47:41.945170 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:41.950125 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:41.953118 line       494                         if (i == j):
excute 13:47:41.958106 line       496                         i_j_list.append((
excute 13:47:41.961096 line       497                             i, j,
excute 13:47:41.965115 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:41.968108 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0)]
excute 13:47:41.972097 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:41.975092 line       494                         if (i == j):
excute 13:47:41.980047 line       496                         i_j_list.append((
excute 13:47:41.983038 line       497                             i, j,
excute 13:47:41.987027 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:41.990020 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0)]
excute 13:47:41.994009 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:41.998995 line       494                         if (i == j):
excute 13:47:42.002982 line       496                         i_j_list.append((
excute 13:47:42.006972 line       497                             i, j,
excute 13:47:42.009963 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.012956 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0)]
excute 13:47:42.016945 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:42.019937 line       494                         if (i == j):
excute 13:47:42.023941 line       495                             continue
excute 13:47:42.026919 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:42.029911 line       494                         if (i == j):
excute 13:47:42.033908 line       496                         i_j_list.append((
excute 13:47:42.036892 line       497                             i, j,
excute 13:47:42.039884 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.043873 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0)]
excute 13:47:42.046865 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:42.050855 line       494                         if (i == j):
excute 13:47:42.054844 line       496                         i_j_list.append((
excute 13:47:42.057839 line       497                             i, j,
excute 13:47:42.061827 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.064820 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0)]
excute 13:47:42.068809 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:42.072796 line       494                         if (i == j):
excute 13:47:42.077783 line       496                         i_j_list.append((
excute 13:47:42.081773 line       497                             i, j,
excute 13:47:42.084764 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.088755 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0)]
excute 13:47:42.092745 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:42.096732 line       494                         if (i == j):
excute 13:47:42.100723 line       496                         i_j_list.append((
excute 13:47:42.104710 line       497                             i, j,
excute 13:47:42.107703 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.110695 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0)]
excute 13:47:42.114685 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:42.117675 line       494                         if (i == j):
excute 13:47:42.121666 line       496                         i_j_list.append((
excute 13:47:42.124657 line       497                             i, j,
excute 13:47:42.127649 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.131638 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0)]
excute 13:47:42.135629 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:42.138620 line       494                         if (i == j):
excute 13:47:42.142609 line       496                         i_j_list.append((
excute 13:47:42.145601 line       497                             i, j,
excute 13:47:42.148593 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.152584 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0)]
excute 13:47:42.155575 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:42.159564 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:47:42.162556 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:42.166562 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:42.169537 line       494                         if (i == j):
excute 13:47:42.173528 line       496                         i_j_list.append((
excute 13:47:42.176519 line       497                             i, j,
excute 13:47:42.179511 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.183501 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0)]
excute 13:47:42.186492 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:42.190483 line       494                         if (i == j):
excute 13:47:42.193474 line       496                         i_j_list.append((
excute 13:47:42.197463 line       497                             i, j,
excute 13:47:42.200455 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.204446 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0)]
excute 13:47:42.208435 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:42.211426 line       494                         if (i == j):
excute 13:47:42.215415 line       496                         i_j_list.append((
excute 13:47:42.218438 line       497                             i, j,
excute 13:47:42.222397 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.225390 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0)]
excute 13:47:42.229379 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:42.232372 line       494                         if (i == j):
excute 13:47:42.236360 line       496                         i_j_list.append((
excute 13:47:42.240350 line       497                             i, j,
excute 13:47:42.244340 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.247331 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0)]
excute 13:47:42.251321 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:42.255312 line       494                         if (i == j):
excute 13:47:42.259298 line       495                             continue
excute 13:47:42.263294 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:42.266282 line       494                         if (i == j):
excute 13:47:42.270271 line       496                         i_j_list.append((
excute 13:47:42.273262 line       497                             i, j,
excute 13:47:42.277251 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.280244 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0)]
excute 13:47:42.284231 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:42.287226 line       494                         if (i == j):
excute 13:47:42.291214 line       496                         i_j_list.append((
excute 13:47:42.295203 line       497                             i, j,
excute 13:47:42.298196 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.302185 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0)]
excute 13:47:42.306174 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:42.311192 line       494                         if (i == j):
excute 13:47:42.315150 line       496                         i_j_list.append((
excute 13:47:42.319143 line       497                             i, j,
excute 13:47:42.322163 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.327126 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0)]
excute 13:47:42.334099 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:42.338089 line       494                         if (i == j):
excute 13:47:42.342078 line       496                         i_j_list.append((
excute 13:47:42.346068 line       497                             i, j,
excute 13:47:42.351053 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.354077 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0)]
excute 13:47:42.358040 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:42.362023 line       494                         if (i == j):
excute 13:47:42.366012 line       496                         i_j_list.append((
excute 13:47:42.370999 line       497                             i, j,
excute 13:47:42.376983 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.380972 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0)]
excute 13:47:42.383964 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:42.388965 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:47:42.391946 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:42.395934 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:42.399923 line       494                         if (i == j):
excute 13:47:42.403912 line       496                         i_j_list.append((
excute 13:47:42.407913 line       497                             i, j,
excute 13:47:42.411891 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.415881 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0)]
excute 13:47:42.418873 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:42.422867 line       494                         if (i == j):
excute 13:47:42.426853 line       496                         i_j_list.append((
excute 13:47:42.429843 line       497                             i, j,
excute 13:47:42.433845 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.436824 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0)]
excute 13:47:42.439816 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:42.443807 line       494                         if (i == j):
excute 13:47:42.448792 line       496                         i_j_list.append((
excute 13:47:42.452782 line       497                             i, j,
excute 13:47:42.455775 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.459763 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0)]
excute 13:47:42.463753 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:42.466744 line       494                         if (i == j):
excute 13:47:42.470733 line       496                         i_j_list.append((
excute 13:47:42.473725 line       497                             i, j,
excute 13:47:42.477715 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.480741 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0)]
excute 13:47:42.483729 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:42.487688 line       494                         if (i == j):
excute 13:47:42.491678 line       496                         i_j_list.append((
excute 13:47:42.495667 line       497                             i, j,
excute 13:47:42.502647 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.506638 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0)]
excute 13:47:42.513620 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:42.519608 line       494                         if (i == j):
excute 13:47:42.523591 line       495                             continue
excute 13:47:42.526582 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:42.529575 line       494                         if (i == j):
excute 13:47:42.533564 line       496                         i_j_list.append((
excute 13:47:42.536556 line       497                             i, j,
excute 13:47:42.539548 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.543538 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0)]
excute 13:47:42.546529 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:42.550520 line       494                         if (i == j):
excute 13:47:42.553511 line       496                         i_j_list.append((
excute 13:47:42.557500 line       497                             i, j,
excute 13:47:42.560492 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.564481 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0)]
excute 13:47:42.567473 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:42.571463 line       494                         if (i == j):
excute 13:47:42.575454 line       496                         i_j_list.append((
excute 13:47:42.578477 line       497                             i, j,
excute 13:47:42.582434 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.585457 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0)]
excute 13:47:42.588449 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:42.592419 line       494                         if (i == j):
excute 13:47:42.596407 line       496                         i_j_list.append((
excute 13:47:42.599420 line       497                             i, j,
excute 13:47:42.602412 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.606370 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0)]
excute 13:47:42.609363 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:42.616353 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:47:42.620364 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:42.624337 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:42.627313 line       494                         if (i == j):
excute 13:47:42.631303 line       496                         i_j_list.append((
excute 13:47:42.634295 line       497                             i, j,
excute 13:47:42.638284 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.641276 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0)]
excute 13:47:42.644268 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:42.648258 line       494                         if (i == j):
excute 13:47:42.651250 line       496                         i_j_list.append((
excute 13:47:42.655239 line       497                             i, j,
excute 13:47:42.658231 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.661223 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0)]
excute 13:47:42.665213 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:42.669210 line       494                         if (i == j):
excute 13:47:42.673207 line       496                         i_j_list.append((
excute 13:47:42.676183 line       497                             i, j,
excute 13:47:42.679175 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.683164 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0)]
excute 13:47:42.686156 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:42.690146 line       494                         if (i == j):
excute 13:47:42.693137 line       496                         i_j_list.append((
excute 13:47:42.697127 line       497                             i, j,
excute 13:47:42.700119 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.704108 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0)]
excute 13:47:42.707100 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:42.710092 line       494                         if (i == j):
excute 13:47:42.715079 line       496                         i_j_list.append((
excute 13:47:42.720067 line       497                             i, j,
excute 13:47:42.724056 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.727047 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0)]
excute 13:47:42.730039 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:42.734029 line       494                         if (i == j):
excute 13:47:42.738019 line       496                         i_j_list.append((
excute 13:47:42.741009 line       497                             i, j,
excute 13:47:42.744001 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.746994 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0)]
excute 13:47:42.749986 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:42.753975 line       494                         if (i == j):
excute 13:47:42.757964 line       495                             continue
excute 13:47:42.768121 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:42.771117 line       494                         if (i == j):
excute 13:47:42.775097 line       496                         i_j_list.append((
excute 13:47:42.779088 line       497                             i, j,
excute 13:47:42.782078 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.785070 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0)]
excute 13:47:42.788062 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:42.792052 line       494                         if (i == j):
excute 13:47:42.796042 line       496                         i_j_list.append((
excute 13:47:42.799033 line       497                             i, j,
excute 13:47:42.802025 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.806015 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0)]
excute 13:47:42.809006 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:42.812997 line       494                         if (i == j):
excute 13:47:42.817002 line       496                         i_j_list.append((
excute 13:47:42.821010 line       497                             i, j,
excute 13:47:42.824978 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.827988 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0)]
excute 13:47:42.830979 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:42.834969 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:47:42.838958 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:42.842949 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:42.845939 line       494                         if (i == j):
excute 13:47:42.849898 line       496                         i_j_list.append((
excute 13:47:42.852923 line       497                             i, j,
excute 13:47:42.856910 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.859902 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0)]
excute 13:47:42.863860 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:42.866885 line       494                         if (i == j):
excute 13:47:42.870872 line       496                         i_j_list.append((
excute 13:47:42.874831 line       497                             i, j,
excute 13:47:42.877822 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.881846 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0)]
excute 13:47:42.885801 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:42.888824 line       494                         if (i == j):
excute 13:47:42.892816 line       496                         i_j_list.append((
excute 13:47:42.896772 line       497                             i, j,
excute 13:47:42.899796 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.902788 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0)]
excute 13:47:42.905782 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:42.909739 line       494                         if (i == j):
excute 13:47:42.914726 line       496                         i_j_list.append((
excute 13:47:42.917718 line       497                             i, j,
excute 13:47:42.923702 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.926723 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0)]
excute 13:47:42.930682 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:42.933705 line       494                         if (i == j):
excute 13:47:42.937702 line       496                         i_j_list.append((
excute 13:47:42.940688 line       497                             i, j,
excute 13:47:42.944676 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.948637 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0)]
excute 13:47:42.952622 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:42.956612 line       494                         if (i == j):
excute 13:47:42.959603 line       496                         i_j_list.append((
excute 13:47:42.966586 line       497                             i, j,
excute 13:47:42.970607 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.974564 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0)]
excute 13:47:42.977589 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:42.981577 line       494                         if (i == j):
excute 13:47:42.985558 line       496                         i_j_list.append((
excute 13:47:42.988560 line       497                             i, j,
excute 13:47:42.992547 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:42.995510 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0)]
excute 13:47:42.999529 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:43.003488 line       494                         if (i == j):
excute 13:47:43.007477 line       495                             continue
excute 13:47:43.010499 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:43.014489 line       494                         if (i == j):
excute 13:47:43.018480 line       496                         i_j_list.append((
excute 13:47:43.021469 line       497                             i, j,
excute 13:47:43.025430 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:43.029419 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0)]
excute 13:47:43.033406 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:43.036401 line       494                         if (i == j):
excute 13:47:43.040390 line       496                         i_j_list.append((
excute 13:47:43.044378 line       497                             i, j,
excute 13:47:43.048368 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:43.051360 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0)]
excute 13:47:43.055349 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:43.059339 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:47:43.063328 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:47:43.067317 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:43.072305 line       494                         if (i == j):
excute 13:47:43.076293 line       496                         i_j_list.append((
excute 13:47:43.079315 line       497                             i, j,
excute 13:47:43.082307 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:43.086296 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0)]
excute 13:47:43.089291 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:43.093278 line       494                         if (i == j):
excute 13:47:43.097270 line       496                         i_j_list.append((
excute 13:47:43.100261 line       497                             i, j,
excute 13:47:43.104249 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:43.107240 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0)]
excute 13:47:43.111201 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:43.114222 line       494                         if (i == j):
excute 13:47:43.118211 line       496                         i_j_list.append((
excute 13:47:43.122173 line       497                             i, j,
excute 13:47:43.125193 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:43.129151 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0)]
excute 13:47:43.133139 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:43.137129 line       494                         if (i == j):
excute 13:47:43.141118 line       496                         i_j_list.append((
excute 13:47:43.144110 line       497                             i, j,
excute 13:47:43.148099 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:43.151092 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0)]
excute 13:47:43.155080 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:43.159071 line       494                         if (i == j):
excute 13:47:43.162062 line       496                         i_j_list.append((
excute 13:47:43.166051 line       497                             i, j,
excute 13:47:43.169043 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:43.172035 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0)]
excute 13:47:43.176025 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:43.180017 line       494                         if (i == j):
excute 13:47:43.184006 line       496                         i_j_list.append((
excute 13:47:43.187995 line       497                             i, j,
excute 13:47:43.190987 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:43.194976 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0)]
excute 13:47:43.198965 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:43.202955 line       494                         if (i == j):
excute 13:47:43.207943 line       496                         i_j_list.append((
excute 13:47:43.210933 line       497                             i, j,
excute 13:47:43.213926 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:43.217914 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0)]
excute 13:47:43.221904 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:43.224896 line       494                         if (i == j):
excute 13:47:43.229884 line       496                         i_j_list.append((
excute 13:47:43.234868 line       497                             i, j,
excute 13:47:43.238857 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:43.241849 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0)]
excute 13:47:43.244841 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:43.248830 line       494                         if (i == j):
excute 13:47:43.252819 line       495                             continue
excute 13:47:43.255813 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:43.259803 line       494                         if (i == j):
excute 13:47:43.263792 line       496                         i_j_list.append((
excute 13:47:43.267781 line       497                             i, j,
excute 13:47:43.270773 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:43.274762 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0)]
excute 13:47:43.278750 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:43.282741 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:47:43.285731 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:47:43.289722 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:43.292713 line       494                         if (i == j):
excute 13:47:43.296702 line       496                         i_j_list.append((
excute 13:47:43.299694 line       497                             i, j,
excute 13:47:43.303684 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:43.306676 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0)]
excute 13:47:43.310664 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:43.314655 line       494                         if (i == j):
excute 13:47:43.318644 line       496                         i_j_list.append((
excute 13:47:43.321636 line       497                             i, j,
excute 13:47:43.325624 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:43.332608 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0)]
excute 13:47:43.341585 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:43.346572 line       494                         if (i == j):
excute 13:47:43.351589 line       496                         i_j_list.append((
excute 13:47:43.355581 line       497                             i, j,
excute 13:47:43.359534 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:43.362527 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0)]
excute 13:47:43.366547 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:43.370508 line       494                         if (i == j):
excute 13:47:43.374497 line       496                         i_j_list.append((
excute 13:47:43.378491 line       497                             i, j,
excute 13:47:43.382506 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:43.387461 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 0)]
excute 13:47:43.390453 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:43.394446 line       494                         if (i == j):
excute 13:47:43.400426 line       496                         i_j_list.append((
excute 13:47:43.403418 line       497                             i, j,
excute 13:47:43.411395 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:43.414420 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 0), (9, 4, 0, 0)]
excute 13:47:43.418409 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:43.422400 line       494                         if (i == j):
excute 13:47:43.425390 line       496                         i_j_list.append((
excute 13:47:43.429380 line       497                             i, j,
excute 13:47:43.432374 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:43.436361 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 0), (9, 4, 0, 0), (9, 5, 0, 0)]
excute 13:47:43.440320 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:43.444309 line       494                         if (i == j):
excute 13:47:43.448299 line       496                         i_j_list.append((
excute 13:47:43.452318 line       497                             i, j,
excute 13:47:43.456310 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:43.459302 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 0), (9, 4, 0, 0), (9, 5, 0, 0), (9, 6, 0, 0)]
excute 13:47:43.463272 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:43.467247 line       494                         if (i == j):
excute 13:47:43.470270 line       496                         i_j_list.append((
excute 13:47:43.474260 line       497                             i, j,
excute 13:47:43.477251 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:43.480246 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 0), (9, 4, 0, 0), (9, 5, 0, 0), (9, 6, 0, 0), (9, 7, 0, 0)]
excute 13:47:43.485204 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:43.489198 line       494                         if (i == j):
excute 13:47:43.492180 line       496                         i_j_list.append((
excute 13:47:43.496169 line       497                             i, j,
excute 13:47:43.502153 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:43.505146 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 0), (9, 4, 0, 0), (9, 5, 0, 0), (9, 6, 0, 0), (9, 7, 0, 0), (9, 8, 0, 0)]
excute 13:47:43.512129 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:43.516115 line       494                         if (i == j):
excute 13:47:43.520105 line       495                             continue
excute 13:47:43.524097 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:43.527088 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:47:43.531077 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 0), (9, 4, 0, 0), (9, 5, 0, 0), (9, 6, 0, 0), (9, 7, 0, 0), (9, 8, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0)]
excute 13:47:43.535067 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:47:43.539056 line       505                     if (self.RELOCATE):
excute 13:47:43.545039 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:47:43.548030 line       505                     if (self.RELOCATE):
excute 13:47:43.553017 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:47:43.557008 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -1, 0)
excute 13:47:43.560998 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:47:43.564988 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:43.568977 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:43.572967 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -1, 0)
excute 13:47:43.576955 line       556                     i = i_j[0]
excute 13:47:43.580945 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:43.583937 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:43.588924 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -1, 0)
excute 13:47:43.591915 line       556                     i = i_j[0]
excute 13:47:43.595904 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:43.599893 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:43.603883 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -1, 0)
excute 13:47:43.607872 line       556                     i = i_j[0]
excute 13:47:43.612860 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:43.615849 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:43.619838 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -1, 0)
excute 13:47:43.622830 line       556                     i = i_j[0]
excute 13:47:43.626820 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:43.629812 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:43.633801 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -1, 0)
excute 13:47:43.637790 line       556                     i = i_j[0]
excute 13:47:43.641783 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:43.645772 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:43.650756 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -1, 0)
excute 13:47:43.654747 line       556                     i = i_j[0]
excute 13:47:43.661728 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:43.667711 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:43.673696 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -1, 0)
excute 13:47:43.679679 line       556                     i = i_j[0]
excute 13:47:43.685664 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:43.689653 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:43.693643 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -1, 0)
excute 13:47:43.698629 line       556                     i = i_j[0]
excute 13:47:43.704616 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:43.708603 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:43.713592 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 0)
excute 13:47:43.716580 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:47:43.720570 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:43.724559 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:43.727550 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:47:43.731539 line       556                     i = i_j[0]
excute 13:47:43.735530 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:43.738521 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:43.742510 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:47:43.745502 line       556                     i = i_j[0]
excute 13:47:43.751488 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:43.755477 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:43.759467 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 0)
excute 13:47:43.762457 line       556                     i = i_j[0]
excute 13:47:43.766447 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:43.775422 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:43.789387 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 0)
excute 13:47:43.792377 line       556                     i = i_j[0]
excute 13:47:43.796368 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:43.799359 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:43.803348 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 0)
excute 13:47:43.806340 line       556                     i = i_j[0]
excute 13:47:43.810330 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:43.814320 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:43.817310 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:47:43.821300 line       556                     i = i_j[0]
excute 13:47:43.825296 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:43.828281 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:43.832271 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:47:43.835262 line       556                     i = i_j[0]
excute 13:47:43.839252 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:43.842244 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:43.846234 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 0)
excute 13:47:43.849225 line       556                     i = i_j[0]
excute 13:47:43.855223 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:43.858201 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:43.862194 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 0, 0)
excute 13:47:43.865182 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:47:43.869172 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:43.877152 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:43.880142 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 0, 0)
excute 13:47:43.884132 line       556                     i = i_j[0]
excute 13:47:43.888122 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:43.892118 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:43.895102 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 0, 0)
excute 13:47:43.899092 line       556                     i = i_j[0]
excute 13:47:43.903082 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:43.906073 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:43.910063 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 0, 0)
excute 13:47:43.913054 line       556                     i = i_j[0]
excute 13:47:43.917045 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:43.920036 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:43.924040 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 0, 0)
excute 13:47:43.927052 line       556                     i = i_j[0]
excute 13:47:43.931038 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:43.935030 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:43.938987 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 0, 0)
excute 13:47:43.942976 line       556                     i = i_j[0]
excute 13:47:43.946966 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:43.950953 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:43.956938 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 0, 0)
excute 13:47:43.959929 line       556                     i = i_j[0]
excute 13:47:43.963920 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:43.967910 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:43.971898 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 0, 0)
excute 13:47:43.975889 line       556                     i = i_j[0]
excute 13:47:43.979892 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:43.983867 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:43.987860 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 0, 0)
excute 13:47:43.990882 line       556                     i = i_j[0]
excute 13:47:43.994870 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:43.997862 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.001819 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 0, 0)
excute 13:47:44.004841 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:47:44.008831 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:44.012822 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.016782 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 0, 0)
excute 13:47:44.019801 line       556                     i = i_j[0]
excute 13:47:44.023793 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:44.026782 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.030774 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 0, 0)
excute 13:47:44.034731 line       556                     i = i_j[0]
excute 13:47:44.038720 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:44.042710 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.046698 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 0, 0)
excute 13:47:44.050688 line       556                     i = i_j[0]
excute 13:47:44.053710 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:44.058700 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.062682 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 0, 0)
excute 13:47:44.065681 line       556                     i = i_j[0]
excute 13:47:44.069670 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:44.072659 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.076649 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 0, 0)
excute 13:47:44.079641 line       556                     i = i_j[0]
excute 13:47:44.083601 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:44.087589 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.091579 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 0, 0)
excute 13:47:44.095568 line       556                     i = i_j[0]
excute 13:47:44.099559 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:44.103546 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.106540 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 0, 0)
excute 13:47:44.110528 line       556                     i = i_j[0]
excute 13:47:44.114518 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:44.118507 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.126485 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 0, 0)
excute 13:47:44.130506 line       556                     i = i_j[0]
excute 13:47:44.134464 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:44.138451 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.141444 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 0, 0)
excute 13:47:44.145434 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:47:44.149437 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:44.152414 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.156404 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 0, 0)
excute 13:47:44.162409 line       556                     i = i_j[0]
excute 13:47:44.165411 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:44.169403 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.173370 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 0, 0)
excute 13:47:44.176384 line       556                     i = i_j[0]
excute 13:47:44.180342 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:44.183364 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.187326 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 0, 0)
excute 13:47:44.191343 line       556                     i = i_j[0]
excute 13:47:44.195304 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:44.198294 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.202283 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 0, 0)
excute 13:47:44.206272 line       556                     i = i_j[0]
excute 13:47:44.210262 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:44.214251 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.218241 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 0, 0)
excute 13:47:44.222229 line       556                     i = i_j[0]
excute 13:47:44.225223 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:44.229211 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.233200 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 0, 0)
excute 13:47:44.237189 line       556                     i = i_j[0]
excute 13:47:44.241184 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:44.245168 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.249156 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 0, 0)
excute 13:47:44.253147 line       556                     i = i_j[0]
excute 13:47:44.257136 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:44.261124 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.266112 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 0, 0)
excute 13:47:44.271097 line       556                     i = i_j[0]
excute 13:47:44.276088 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:44.281070 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.285060 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 0, 0)
excute 13:47:44.288052 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:47:44.292041 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:44.296031 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.300032 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 0, 0)
excute 13:47:44.303012 line       556                     i = i_j[0]
excute 13:47:44.308001 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:44.313983 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.321964 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 0, 0)
excute 13:47:44.325953 line       556                     i = i_j[0]
excute 13:47:44.339916 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:44.343905 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.350888 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 0, 0)
excute 13:47:44.355873 line       556                     i = i_j[0]
excute 13:47:44.360860 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:44.364851 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.369834 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 0, 0)
excute 13:47:44.375818 line       556                     i = i_j[0]
excute 13:47:44.379806 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:44.383796 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.388784 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 0, 0)
excute 13:47:44.391776 line       556                     i = i_j[0]
excute 13:47:44.396763 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:44.400752 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.403744 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 0, 0)
excute 13:47:44.407732 line       556                     i = i_j[0]
excute 13:47:44.413717 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:44.416709 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.421696 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 0, 0)
excute 13:47:44.425684 line       556                     i = i_j[0]
excute 13:47:44.429675 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:44.432665 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.436654 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 0, 0)
excute 13:47:44.439647 line       556                     i = i_j[0]
excute 13:47:44.443636 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:44.447625 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.452613 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 0, 0)
excute 13:47:44.456603 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:47:44.459594 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:44.465578 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.472560 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 0, 0)
excute 13:47:44.475551 line       556                     i = i_j[0]
excute 13:47:44.480540 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:44.483529 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.487519 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 0, 0)
excute 13:47:44.490511 line       556                     i = i_j[0]
excute 13:47:44.494500 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:44.498493 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.502511 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 0, 0)
excute 13:47:44.506479 line       556                     i = i_j[0]
excute 13:47:44.510458 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:44.514450 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.518439 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 0, 0)
excute 13:47:44.521430 line       556                     i = i_j[0]
excute 13:47:44.525419 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:44.529408 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.533399 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 0, 0)
excute 13:47:44.537387 line       556                     i = i_j[0]
excute 13:47:44.541377 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:44.545366 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.549354 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 0, 0)
excute 13:47:44.553344 line       556                     i = i_j[0]
excute 13:47:44.558331 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:44.562321 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.566308 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 0, 0)
excute 13:47:44.570302 line       556                     i = i_j[0]
excute 13:47:44.576283 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:44.579274 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.583265 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 0, 0)
excute 13:47:44.586256 line       556                     i = i_j[0]
excute 13:47:44.590246 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:44.593237 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.597227 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 1, 0)
excute 13:47:44.600218 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:47:44.604208 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:44.608198 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.612186 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 1, 0)
excute 13:47:44.616177 line       556                     i = i_j[0]
excute 13:47:44.621162 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:44.625152 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.631135 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 1, 0)
excute 13:47:44.634127 line       556                     i = i_j[0]
excute 13:47:44.639114 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:44.642105 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.646101 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 1, 0)
excute 13:47:44.649086 line       556                     i = i_j[0]
excute 13:47:44.653076 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:44.656068 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.660067 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 1, 0)
excute 13:47:44.663049 line       556                     i = i_j[0]
excute 13:47:44.667039 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:44.671028 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.675017 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 1, 0)
excute 13:47:44.679039 line       556                     i = i_j[0]
excute 13:47:44.682997 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:44.686021 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.690011 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 1, 0)
excute 13:47:44.693003 line       556                     i = i_j[0]
excute 13:47:44.696990 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:44.700950 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.705936 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 1, 0)
excute 13:47:44.708929 line       556                     i = i_j[0]
excute 13:47:44.712916 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:44.716918 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.719900 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 1, 0)
excute 13:47:44.723888 line       556                     i = i_j[0]
excute 13:47:44.727878 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:44.731867 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.736852 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 2, 0)
excute 13:47:44.739846 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:47:44.743835 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:44.748824 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.751814 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 2, 0)
excute 13:47:44.756806 line       556                     i = i_j[0]
excute 13:47:44.760791 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:44.763782 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.768769 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 2, 0)
excute 13:47:44.771790 line       556                     i = i_j[0]
excute 13:47:44.775750 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:44.780735 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.783726 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 2, 0)
excute 13:47:44.787725 line       556                     i = i_j[0]
excute 13:47:44.790708 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:44.794698 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.797689 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 2, 0)
excute 13:47:44.801679 line       556                     i = i_j[0]
excute 13:47:44.808664 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:44.815644 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.820630 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 2, 0)
excute 13:47:44.824617 line       556                     i = i_j[0]
excute 13:47:44.828607 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:44.831601 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.836589 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 2, 0)
excute 13:47:44.839580 line       556                     i = i_j[0]
excute 13:47:44.843570 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:44.846561 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.852554 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 2, 0)
excute 13:47:44.856532 line       556                     i = i_j[0]
excute 13:47:44.859556 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:44.863548 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.867536 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 2, 0)
excute 13:47:44.870527 line       556                     i = i_j[0]
excute 13:47:44.874486 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:44.878474 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.883464 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 10, 0)
excute 13:47:44.887451 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:47:44.890442 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:44.894432 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.898423 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 10, 0)
excute 13:47:44.901413 line       556                     i = i_j[0]
excute 13:47:44.905403 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:44.909391 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.916372 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 10, 0)
excute 13:47:44.919364 line       556                     i = i_j[0]
excute 13:47:44.923371 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:44.926346 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.930335 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 10, 0)
excute 13:47:44.933327 line       556                     i = i_j[0]
excute 13:47:44.937316 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:44.941307 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.945297 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 10, 0)
excute 13:47:44.950315 line       556                     i = i_j[0]
excute 13:47:44.954279 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:44.957296 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.961285 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 10, 0)
excute 13:47:44.965274 line       556                     i = i_j[0]
excute 13:47:44.969247 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:44.972257 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.976214 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 10, 0)
excute 13:47:44.979236 line       556                     i = i_j[0]
excute 13:47:44.984193 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:44.988181 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:44.991172 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 10, 0)
excute 13:47:44.995162 line       556                     i = i_j[0]
excute 13:47:44.998154 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:45.002142 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:45.005135 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 10, 0)
excute 13:47:45.009124 line       556                     i = i_j[0]
excute 13:47:45.013113 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:45.017103 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:45.021092 line       555                 for i_j in i_j_list:
excute 13:47:45.024084 line       581             self.write_matrix(
excute 13:47:45.028075 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:47:45.031066 line       583                 result_file_path,
excute 13:47:45.034058 line       584                 mode='a'
excute 13:47:45.040997 line       488         for t in time_steps:
excute Modified var:.. t = 119
excute 13:47:45.044981 line       489             if (t != self.TIME + 1):
excute 13:47:45.049968 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:47:45.054956 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:47:45.061935 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:47:45.068918 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:45.073905 line       494                         if (i == j):
excute 13:47:45.077894 line       495                             continue
excute 13:47:45.080885 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:45.087867 line       494                         if (i == j):
excute 13:47:45.093850 line       496                         i_j_list.append((
excute 13:47:45.098837 line       497                             i, j,
excute 13:47:45.103823 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:45.110806 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0)]
excute 13:47:45.119780 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:45.127760 line       494                         if (i == j):
excute 13:47:45.132747 line       496                         i_j_list.append((
excute 13:47:45.136737 line       497                             i, j,
excute 13:47:45.140727 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:45.146710 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0)]
excute 13:47:45.151728 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:45.156686 line       494                         if (i == j):
excute 13:47:45.160672 line       496                         i_j_list.append((
excute 13:47:45.164663 line       497                             i, j,
excute 13:47:45.168653 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:45.175632 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:47:45.182623 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:45.186605 line       494                         if (i == j):
excute 13:47:45.192588 line       496                         i_j_list.append((
excute 13:47:45.195610 line       497                             i, j,
excute 13:47:45.199599 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:45.202595 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2)]
excute 13:47:45.206583 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:45.210545 line       494                         if (i == j):
excute 13:47:45.213567 line       496                         i_j_list.append((
excute 13:47:45.217520 line       497                             i, j,
excute 13:47:45.220513 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:45.224502 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0)]
excute 13:47:45.228492 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:45.235472 line       494                         if (i == j):
excute 13:47:45.239462 line       496                         i_j_list.append((
excute 13:47:45.242452 line       497                             i, j,
excute 13:47:45.246442 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:45.252458 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0)]
excute 13:47:45.256418 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:45.262437 line       494                         if (i == j):
excute 13:47:45.266422 line       496                         i_j_list.append((
excute 13:47:45.269380 line       497                             i, j,
excute 13:47:45.275396 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:45.282349 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0)]
excute 13:47:45.285338 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:45.293318 line       494                         if (i == j):
excute 13:47:45.297308 line       496                         i_j_list.append((
excute 13:47:45.300297 line       497                             i, j,
excute 13:47:45.306314 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:45.313264 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0)]
excute 13:47:45.317256 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:45.323248 line       494                         if (i == j):
excute 13:47:45.329223 line       496                         i_j_list.append((
excute 13:47:45.339195 line       497                             i, j,
excute 13:47:45.344183 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:45.350165 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1)]
excute 13:47:45.355153 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:45.362133 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:47:45.368152 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:45.372106 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:45.378091 line       494                         if (i == j):
excute 13:47:45.382082 line       496                         i_j_list.append((
excute 13:47:45.389062 line       497                             i, j,
excute 13:47:45.395047 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:45.399037 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0)]
excute 13:47:45.403024 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:45.409044 line       494                         if (i == j):
excute 13:47:45.413029 line       495                             continue
excute 13:47:45.416988 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:45.423001 line       494                         if (i == j):
excute 13:47:45.426959 line       496                         i_j_list.append((
excute 13:47:45.430949 line       497                             i, j,
excute 13:47:45.436965 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:45.439924 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0)]
excute 13:47:45.445909 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:45.450898 line       494                         if (i == j):
excute 13:47:45.455883 line       496                         i_j_list.append((
excute 13:47:45.458877 line       497                             i, j,
excute 13:47:45.464858 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:45.470874 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0)]
excute 13:47:45.475828 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:45.481813 line       494                         if (i == j):
excute 13:47:45.490788 line       496                         i_j_list.append((
excute 13:47:45.495778 line       497                             i, j,
excute 13:47:45.500763 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:45.506778 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2)]
excute 13:47:45.513728 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:45.517719 line       494                         if (i == j):
excute 13:47:45.521705 line       496                         i_j_list.append((
excute 13:47:45.524698 line       497                             i, j,
excute 13:47:45.530714 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:45.534674 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0)]
excute 13:47:45.537663 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:45.542651 line       494                         if (i == j):
excute 13:47:45.546673 line       496                         i_j_list.append((
excute 13:47:45.549631 line       497                             i, j,
excute 13:47:45.555616 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:45.559605 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0)]
excute 13:47:45.564623 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:45.568581 line       494                         if (i == j):
excute 13:47:45.573569 line       496                         i_j_list.append((
excute 13:47:45.579553 line       497                             i, j,
excute 13:47:45.583543 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:45.590542 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0)]
excute 13:47:45.593514 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:45.600500 line       494                         if (i == j):
excute 13:47:45.605484 line       496                         i_j_list.append((
excute 13:47:45.608474 line       497                             i, j,
excute 13:47:45.615458 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:45.618447 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0)]
excute 13:47:45.624465 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:45.628421 line       494                         if (i == j):
excute 13:47:45.632411 line       496                         i_j_list.append((
excute 13:47:45.636400 line       497                             i, j,
excute 13:47:45.642384 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:45.648402 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1)]
excute 13:47:45.651359 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:45.656346 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:47:45.660336 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:45.666330 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:45.672304 line       494                         if (i == j):
excute 13:47:45.678288 line       496                         i_j_list.append((
excute 13:47:45.684273 line       497                             i, j,
excute 13:47:45.690255 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:45.696239 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0)]
excute 13:47:45.703224 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:45.709240 line       494                         if (i == j):
excute 13:47:45.713195 line       496                         i_j_list.append((
excute 13:47:45.716185 line       497                             i, j,
excute 13:47:45.722170 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:45.726159 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0)]
excute 13:47:45.731147 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:45.738128 line       494                         if (i == j):
excute 13:47:45.743115 line       495                             continue
excute 13:47:45.747104 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:45.751093 line       494                         if (i == j):
excute 13:47:45.757079 line       496                         i_j_list.append((
excute 13:47:45.762063 line       497                             i, j,
excute 13:47:45.766053 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:45.772036 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0)]
excute 13:47:45.778021 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:45.783008 line       494                         if (i == j):
excute 13:47:45.789991 line       496                         i_j_list.append((
excute 13:47:45.795973 line       497                             i, j,
excute 13:47:45.799962 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:45.805950 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2)]
excute 13:47:45.810934 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:45.817914 line       494                         if (i == j):
excute 13:47:45.823899 line       496                         i_j_list.append((
excute 13:47:45.827888 line       497                             i, j,
excute 13:47:45.833871 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:45.837860 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0)]
excute 13:47:45.841850 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:45.848834 line       494                         if (i == j):
excute 13:47:45.854817 line       496                         i_j_list.append((
excute 13:47:45.858806 line       497                             i, j,
excute 13:47:45.863791 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:45.867781 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0)]
excute 13:47:45.873766 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:45.877755 line       494                         if (i == j):
excute 13:47:45.881745 line       496                         i_j_list.append((
excute 13:47:45.888758 line       497                             i, j,
excute 13:47:45.893746 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:45.897735 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0)]
excute 13:47:45.900727 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:45.904683 line       494                         if (i == j):
excute 13:47:45.908709 line       496                         i_j_list.append((
excute 13:47:45.913690 line       497                             i, j,
excute 13:47:45.916684 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:45.919676 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0)]
excute 13:47:45.923633 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:45.926655 line       494                         if (i == j):
excute 13:47:45.930613 line       496                         i_j_list.append((
excute 13:47:45.933636 line       497                             i, j,
excute 13:47:45.937626 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:45.940620 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1)]
excute 13:47:45.943613 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:45.948566 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:47:45.952561 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:45.956550 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:45.959569 line       494                         if (i == j):
excute 13:47:45.966518 line       496                         i_j_list.append((
excute 13:47:45.971505 line       497                             i, j,
excute 13:47:45.974498 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:45.978487 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0)]
excute 13:47:45.982476 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:45.986465 line       494                         if (i == j):
excute 13:47:45.990454 line       496                         i_j_list.append((
excute 13:47:45.994443 line       497                             i, j,
excute 13:47:45.997466 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:46.001426 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0)]
excute 13:47:46.004418 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:46.008407 line       494                         if (i == j):
excute 13:47:46.013393 line       496                         i_j_list.append((
excute 13:47:46.016415 line       497                             i, j,
excute 13:47:46.020390 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:46.023399 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0)]
excute 13:47:46.026388 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:46.030348 line       494                         if (i == j):
excute 13:47:46.034342 line       495                             continue
excute 13:47:46.037359 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:46.040351 line       494                         if (i == j):
excute 13:47:46.044321 line       496                         i_j_list.append((
excute 13:47:46.048300 line       497                             i, j,
excute 13:47:46.051292 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:46.055314 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2)]
excute 13:47:46.059274 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:46.062293 line       494                         if (i == j):
excute 13:47:46.066254 line       496                         i_j_list.append((
excute 13:47:46.070241 line       497                             i, j,
excute 13:47:46.074231 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:46.077223 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0)]
excute 13:47:46.080218 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:46.084204 line       494                         if (i == j):
excute 13:47:46.088193 line       496                         i_j_list.append((
excute 13:47:46.091185 line       497                             i, j,
excute 13:47:46.095174 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:46.098167 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0)]
excute 13:47:46.102156 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:46.105148 line       494                         if (i == j):
excute 13:47:46.110134 line       496                         i_j_list.append((
excute 13:47:46.113126 line       497                             i, j,
excute 13:47:46.118114 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:46.121105 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0)]
excute 13:47:46.125094 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:46.129084 line       494                         if (i == j):
excute 13:47:46.134071 line       496                         i_j_list.append((
excute 13:47:46.138059 line       497                             i, j,
excute 13:47:46.141052 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:46.144043 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0)]
excute 13:47:46.147035 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:46.151025 line       494                         if (i == j):
excute 13:47:46.155015 line       496                         i_j_list.append((
excute 13:47:46.158005 line       497                             i, j,
excute 13:47:46.161996 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:46.164987 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1)]
excute 13:47:46.167979 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:46.171968 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:47:46.174960 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:46.178958 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:46.181941 line       494                         if (i == j):
excute 13:47:46.185930 line       496                         i_j_list.append((
excute 13:47:46.188923 line       497                             i, j,
excute 13:47:46.192913 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:46.195905 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0)]
excute 13:47:46.198898 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:46.202887 line       494                         if (i == j):
excute 13:47:46.206877 line       496                         i_j_list.append((
excute 13:47:46.209867 line       497                             i, j,
excute 13:47:46.212859 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:46.216879 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0)]
excute 13:47:46.220869 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:46.224830 line       494                         if (i == j):
excute 13:47:46.228817 line       496                         i_j_list.append((
excute 13:47:46.231841 line       497                             i, j,
excute 13:47:46.234832 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:46.238803 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0)]
excute 13:47:46.241813 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:46.245803 line       494                         if (i == j):
excute 13:47:46.248794 line       496                         i_j_list.append((
excute 13:47:46.252784 line       497                             i, j,
excute 13:47:46.255775 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:46.259768 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0)]
excute 13:47:46.262758 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:46.266747 line       494                         if (i == j):
excute 13:47:46.270706 line       495                             continue
excute 13:47:46.273727 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:46.277717 line       494                         if (i == j):
excute 13:47:46.281704 line       496                         i_j_list.append((
excute 13:47:46.284697 line       497                             i, j,
excute 13:47:46.288674 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:46.291682 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0)]
excute 13:47:46.294673 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:46.298629 line       494                         if (i == j):
excute 13:47:46.302654 line       496                         i_j_list.append((
excute 13:47:46.305642 line       497                             i, j,
excute 13:47:46.308634 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:46.312594 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0)]
excute 13:47:46.315585 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:46.320612 line       494                         if (i == j):
excute 13:47:46.326556 line       496                         i_j_list.append((
excute 13:47:46.337526 line       497                             i, j,
excute 13:47:46.347500 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:46.359468 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0)]
excute 13:47:46.366449 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:46.376423 line       494                         if (i == j):
excute 13:47:46.384408 line       496                         i_j_list.append((
excute 13:47:46.389390 line       497                             i, j,
excute 13:47:46.394378 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:46.399360 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0)]
excute 13:47:46.405345 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:46.410332 line       494                         if (i == j):
excute 13:47:46.415318 line       496                         i_j_list.append((
excute 13:47:46.419306 line       497                             i, j,
excute 13:47:46.423296 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:46.428284 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1)]
excute 13:47:46.438256 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:46.443243 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:47:46.447234 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:46.452221 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:46.456209 line       494                         if (i == j):
excute 13:47:46.464188 line       496                         i_j_list.append((
excute 13:47:46.471168 line       497                             i, j,
excute 13:47:46.479148 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:46.486129 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0)]
excute 13:47:46.495105 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:46.502088 line       494                         if (i == j):
excute 13:47:46.510064 line       496                         i_j_list.append((
excute 13:47:46.515052 line       497                             i, j,
excute 13:47:46.520037 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:46.525025 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0)]
excute 13:47:46.533003 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:46.538987 line       494                         if (i == j):
excute 13:47:46.543974 line       496                         i_j_list.append((
excute 13:47:46.549957 line       497                             i, j,
excute 13:47:46.554947 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:46.559931 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0)]
excute 13:47:46.567910 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:46.574892 line       494                         if (i == j):
excute 13:47:46.582870 line       496                         i_j_list.append((
excute 13:47:46.587855 line       497                             i, j,
excute 13:47:46.592843 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:46.599824 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0)]
excute 13:47:46.607805 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:46.615781 line       494                         if (i == j):
excute 13:47:46.622764 line       496                         i_j_list.append((
excute 13:47:46.629744 line       497                             i, j,
excute 13:47:46.636726 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:46.644704 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2)]
excute 13:47:46.649690 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:46.655675 line       494                         if (i == j):
excute 13:47:46.663655 line       495                             continue
excute 13:47:46.671631 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:46.679611 line       494                         if (i == j):
excute 13:47:46.685595 line       496                         i_j_list.append((
excute 13:47:46.691581 line       497                             i, j,
excute 13:47:46.699557 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:46.705542 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0)]
excute 13:47:46.712523 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:46.718509 line       494                         if (i == j):
excute 13:47:46.727484 line       496                         i_j_list.append((
excute 13:47:46.736460 line       497                             i, j,
excute 13:47:46.742444 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:46.748428 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0)]
excute 13:47:46.752416 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:46.759399 line       494                         if (i == j):
excute 13:47:46.765384 line       496                         i_j_list.append((
excute 13:47:46.773362 line       497                             i, j,
excute 13:47:46.779344 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:46.786326 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0)]
excute 13:47:46.790316 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:46.794305 line       494                         if (i == j):
excute 13:47:46.798295 line       496                         i_j_list.append((
excute 13:47:46.801285 line       497                             i, j,
excute 13:47:46.804277 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:46.808267 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1)]
excute 13:47:46.811259 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:46.815250 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:47:46.818240 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:46.822231 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:46.825221 line       494                         if (i == j):
excute 13:47:46.829211 line       496                         i_j_list.append((
excute 13:47:46.833202 line       497                             i, j,
excute 13:47:46.837191 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:46.842178 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0)]
excute 13:47:46.845169 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:46.849159 line       494                         if (i == j):
excute 13:47:46.854145 line       496                         i_j_list.append((
excute 13:47:46.857163 line       497                             i, j,
excute 13:47:46.861156 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:46.864144 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0)]
excute 13:47:46.867136 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:46.871100 line       494                         if (i == j):
excute 13:47:46.875089 line       496                         i_j_list.append((
excute 13:47:46.878111 line       497                             i, j,
excute 13:47:46.881104 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:46.885095 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0)]
excute 13:47:46.890051 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:46.894038 line       494                         if (i == j):
excute 13:47:46.898061 line       496                         i_j_list.append((
excute 13:47:46.902051 line       497                             i, j,
excute 13:47:46.905039 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:46.908031 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0)]
excute 13:47:46.911990 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:46.915013 line       494                         if (i == j):
excute 13:47:46.918970 line       496                         i_j_list.append((
excute 13:47:46.921964 line       497                             i, j,
excute 13:47:46.925954 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:46.928946 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 2)]
excute 13:47:46.932935 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:46.936924 line       494                         if (i == j):
excute 13:47:46.940913 line       496                         i_j_list.append((
excute 13:47:46.946929 line       497                             i, j,
excute 13:47:46.950886 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:46.953912 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 2), (6, 5, 0, 0)]
excute 13:47:46.956903 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:46.960890 line       494                         if (i == j):
excute 13:47:46.965847 line       495                             continue
excute 13:47:46.969837 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:46.972829 line       494                         if (i == j):
excute 13:47:46.976831 line       496                         i_j_list.append((
excute 13:47:46.979810 line       497                             i, j,
excute 13:47:46.983800 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:46.986791 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 2), (6, 5, 0, 0), (6, 7, 0, 0)]
excute 13:47:46.990793 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:46.995768 line       494                         if (i == j):
excute 13:47:46.998759 line       496                         i_j_list.append((
excute 13:47:47.002748 line       497                             i, j,
excute 13:47:47.005739 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:47.008731 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 2), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0)]
excute 13:47:47.012721 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:47.016712 line       494                         if (i == j):
excute 13:47:47.020699 line       496                         i_j_list.append((
excute 13:47:47.023692 line       497                             i, j,
excute 13:47:47.026683 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:47.029676 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 2), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1)]
excute 13:47:47.033665 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:47.036657 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:47:47.040647 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:47.044671 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:47.048657 line       494                         if (i == j):
excute 13:47:47.052647 line       496                         i_j_list.append((
excute 13:47:47.056634 line       497                             i, j,
excute 13:47:47.059625 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:47.063616 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 2), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0)]
excute 13:47:47.066607 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:47.070567 line       494                         if (i == j):
excute 13:47:47.074561 line       496                         i_j_list.append((
excute 13:47:47.077578 line       497                             i, j,
excute 13:47:47.081570 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:47.084562 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 2), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0)]
excute 13:47:47.087552 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:47.091541 line       494                         if (i == j):
excute 13:47:47.095501 line       496                         i_j_list.append((
excute 13:47:47.098522 line       497                             i, j,
excute 13:47:47.101517 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:47.105506 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 2), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0)]
excute 13:47:47.109462 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:47.112485 line       494                         if (i == j):
excute 13:47:47.116477 line       496                         i_j_list.append((
excute 13:47:47.120434 line       497                             i, j,
excute 13:47:47.123426 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:47.126417 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 2), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0)]
excute 13:47:47.130407 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:47.134397 line       494                         if (i == j):
excute 13:47:47.139382 line       496                         i_j_list.append((
excute 13:47:47.143373 line       497                             i, j,
excute 13:47:47.147362 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:47.151381 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 2), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2)]
excute 13:47:47.155371 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:47.159362 line       494                         if (i == j):
excute 13:47:47.162322 line       496                         i_j_list.append((
excute 13:47:47.166312 line       497                             i, j,
excute 13:47:47.169303 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:47.172295 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 2), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0)]
excute 13:47:47.176285 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:47.180274 line       494                         if (i == j):
excute 13:47:47.184261 line       496                         i_j_list.append((
excute 13:47:47.188252 line       497                             i, j,
excute 13:47:47.191244 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:47.195234 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 2), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0)]
excute 13:47:47.199222 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:47.202245 line       494                         if (i == j):
excute 13:47:47.206234 line       495                             continue
excute 13:47:47.210221 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:47.213215 line       494                         if (i == j):
excute 13:47:47.217176 line       496                         i_j_list.append((
excute 13:47:47.220166 line       497                             i, j,
excute 13:47:47.228172 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:47.231136 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 2), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0)]
excute 13:47:47.238117 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:47.243104 line       494                         if (i == j):
excute 13:47:47.247094 line       496                         i_j_list.append((
excute 13:47:47.250119 line       497                             i, j,
excute 13:47:47.256102 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:47.260094 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 2), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1)]
excute 13:47:47.263082 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:47.267072 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:47:47.270063 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:47:47.274053 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:47.279017 line       494                         if (i == j):
excute 13:47:47.283023 line       496                         i_j_list.append((
excute 13:47:47.286021 line       497                             i, j,
excute 13:47:47.289015 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:47.292979 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 2), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 0, 0)]
excute 13:47:47.295994 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:47.299954 line       494                         if (i == j):
excute 13:47:47.303942 line       496                         i_j_list.append((
excute 13:47:47.306965 line       497                             i, j,
excute 13:47:47.309956 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:47.313947 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 2), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 0, 0), (8, 1, 0, 0)]
excute 13:47:47.319899 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:47.326882 line       494                         if (i == j):
excute 13:47:47.338853 line       496                         i_j_list.append((
excute 13:47:47.342838 line       497                             i, j,
excute 13:47:47.346829 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:47.351845 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 2), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0)]
excute 13:47:47.356812 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:47.361789 line       494                         if (i == j):
excute 13:47:47.365782 line       496                         i_j_list.append((
excute 13:47:47.369799 line       497                             i, j,
excute 13:47:47.372789 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:47.376748 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 2), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0)]
excute 13:47:47.379741 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:47.385727 line       494                         if (i == j):
excute 13:47:47.389712 line       496                         i_j_list.append((
excute 13:47:47.392739 line       497                             i, j,
excute 13:47:47.396726 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:47.400685 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 2), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 2)]
excute 13:47:47.404673 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:47.407666 line       494                         if (i == j):
excute 13:47:47.411656 line       496                         i_j_list.append((
excute 13:47:47.415645 line       497                             i, j,
excute 13:47:47.419634 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:47.422626 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 2), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 2), (8, 5, 0, 0)]
excute 13:47:47.426615 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:47.430603 line       494                         if (i == j):
excute 13:47:47.433596 line       496                         i_j_list.append((
excute 13:47:47.437586 line       497                             i, j,
excute 13:47:47.441576 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:47.445596 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 2), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 2), (8, 5, 0, 0), (8, 6, 0, 0)]
excute 13:47:47.449585 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:47.453573 line       494                         if (i == j):
excute 13:47:47.458530 line       496                         i_j_list.append((
excute 13:47:47.463516 line       497                             i, j,
excute 13:47:47.468504 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:47.472494 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 2), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 2), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0)]
excute 13:47:47.475484 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:47.479474 line       494                         if (i == j):
excute 13:47:47.483461 line       495                             continue
excute 13:47:47.487483 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:47.490475 line       494                         if (i == j):
excute 13:47:47.494464 line       496                         i_j_list.append((
excute 13:47:47.498457 line       497                             i, j,
excute 13:47:47.502442 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:47.505435 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 2), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 2), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 1)]
excute 13:47:47.509393 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:47.513415 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:47:47.517403 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:47:47.520397 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:47.524384 line       494                         if (i == j):
excute 13:47:47.528366 line       496                         i_j_list.append((
excute 13:47:47.532330 line       497                             i, j,
excute 13:47:47.535354 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:47.538346 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 2), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 2), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 0, 0)]
excute 13:47:47.542304 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:47.545328 line       494                         if (i == j):
excute 13:47:47.549290 line       496                         i_j_list.append((
excute 13:47:47.553275 line       497                             i, j,
excute 13:47:47.556298 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:47.562251 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 2), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 2), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 0, 0), (9, 1, 0, 0)]
excute 13:47:47.565244 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:47.570244 line       494                         if (i == j):
excute 13:47:47.574235 line       496                         i_j_list.append((
excute 13:47:47.577213 line       497                             i, j,
excute 13:47:47.581202 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:47.584194 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 2), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 2), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0)]
excute 13:47:47.588183 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:47.592171 line       494                         if (i == j):
excute 13:47:47.596163 line       496                         i_j_list.append((
excute 13:47:47.599154 line       497                             i, j,
excute 13:47:47.603141 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:47.606136 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 2), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 2), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 0)]
excute 13:47:47.609127 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:47.614113 line       494                         if (i == j):
excute 13:47:47.618104 line       496                         i_j_list.append((
excute 13:47:47.621096 line       497                             i, j,
excute 13:47:47.624119 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:47.628107 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 2), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 2), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 0), (9, 4, 0, 2)]
excute 13:47:47.631099 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:47.635091 line       494                         if (i == j):
excute 13:47:47.639078 line       496                         i_j_list.append((
excute 13:47:47.642070 line       497                             i, j,
excute 13:47:47.646059 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:47.649050 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 2), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 2), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 0), (9, 4, 0, 2), (9, 5, 0, 0)]
excute 13:47:47.653009 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:47.657001 line       494                         if (i == j):
excute 13:47:47.660021 line       496                         i_j_list.append((
excute 13:47:47.665009 line       497                             i, j,
excute 13:47:47.668998 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:47.671991 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 2), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 2), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 0), (9, 4, 0, 2), (9, 5, 0, 0), (9, 6, 0, 0)]
excute 13:47:47.675947 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:47.678971 line       494                         if (i == j):
excute 13:47:47.682963 line       496                         i_j_list.append((
excute 13:47:47.686918 line       497                             i, j,
excute 13:47:47.689942 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:47.692934 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 2), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 2), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 0), (9, 4, 0, 2), (9, 5, 0, 0), (9, 6, 0, 0), (9, 7, 0, 0)]
excute 13:47:47.696923 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:47.700882 line       494                         if (i == j):
excute 13:47:47.704880 line       496                         i_j_list.append((
excute 13:47:47.707894 line       497                             i, j,
excute 13:47:47.710885 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:47.714877 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 2), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 2), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 2), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 2), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 2), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 2), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 2), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 2), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 0), (9, 4, 0, 2), (9, 5, 0, 0), (9, 6, 0, 0), (9, 7, 0, 0), (9, 8, 0, 0)]
excute 13:47:47.718865 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:47.722836 line       494                         if (i == j):
excute 13:47:47.725846 line       495                             continue
excute 13:47:47.729804 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:47.732832 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:47:47.736816 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 1), (7, 4, -1, 2), (0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 0), (9, 5, 0, 0), (9, 6, 0, 0), (9, 7, 0, 0), (9, 8, 0, 0), (0, 9, 0, 1), (1, 9, 0, 1), (4, 9, 0, 1), (5, 9, 0, 1), (6, 9, 0, 1), (8, 9, 0, 1), (0, 4, 0, 2), (1, 4, 0, 2), (5, 4, 0, 2), (6, 4, 0, 2), (8, 4, 0, 2), (9, 4, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (2, 4, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 1), (3, 4, 10, 2)]
excute 13:47:47.739808 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:47:47.743774 line       505                     if (self.RELOCATE):
excute 13:47:47.747757 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:47:47.750779 line       505                     if (self.RELOCATE):
excute 13:47:47.755735 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:47:47.758757 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -1, 0)
excute 13:47:47.761749 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:47:47.767705 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:47.771691 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:47.775681 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -1, 0)
excute 13:47:47.778672 line       556                     i = i_j[0]
excute 13:47:47.782661 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:47.786651 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:47.790642 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -1, 0)
excute 13:47:47.793663 line       556                     i = i_j[0]
excute 13:47:47.797626 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:47.800645 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:47.804635 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -1, 0)
excute 13:47:47.807629 line       556                     i = i_j[0]
excute 13:47:47.811616 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:47.815574 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:47.819565 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -1, 0)
excute 13:47:47.823554 line       556                     i = i_j[0]
excute 13:47:47.827548 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:47.830535 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:47.834525 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -1, 0)
excute 13:47:47.838514 line       556                     i = i_j[0]
excute 13:47:47.842536 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:47.845525 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:47.849515 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -1, 0)
excute 13:47:47.853506 line       556                     i = i_j[0]
excute 13:47:47.857495 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:47.860493 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:47.864445 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -1, 1)
excute 13:47:47.868433 line       556                     i = i_j[0]
excute 13:47:47.873452 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:47.876411 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:47.882396 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -1, 2)
excute 13:47:47.886385 line       556                     i = i_j[0]
excute 13:47:47.891373 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:47.894395 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:47.898356 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 140
excute 13:47:47.901376 line       560                         if (t_tmp > self.TIME):
excute 13:47:47.905366 line       563                             if (available_vhecles[i][t] == 0):
excute 13:47:47.908357 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:47:47.912346 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:47:47.915338 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:47:47.918330 line       569                                     available_vhecles[i][t],
excute 13:47:47.922322 line       570                                     available_vhecles[j][t_tmp],
excute 13:47:47.925312 line       571                                     self.S_capacities[j],
excute 13:47:47.929270 line       572                                     demands[t][i][j],
excute 13:47:47.932294 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 3
calc_contract     Starting var:.. available_vhecles_target = 4
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 119
calc_contract     13:47:47.935288 call       352     def caluculate_contract(
calc_contract     13:47:47.938246 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:47:47.939259 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:47:47.940241 line       362         if (available_vhecles_start >= demand):
calc_contract     13:47:47.941241 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:47:47.941241 line       369                 can_contract = capacity_target - available_vhecles_target
calc_contract     New var:....... can_contract = -1
calc_contract     13:47:47.942237 line       370                 rsf += (available_vhecles_target + demand - capacity_target)
calc_contract     Modified var:.. rsf = 2
calc_contract     13:47:47.943234 line       385         return [can_contract, rsf, rse]
calc_contract     13:47:47.944263 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [-1, 2, 0]
excute Modified var:.. can_contract = -1
excute Modified var:.. rsf_tmp = 2
excute 13:47:47.945260 line       575                                 rsf += rsf_tmp
excute Modified var:.. rsf = 150
excute 13:47:47.950216 line       576                                 rse += rse_tmp
excute 13:47:47.954205 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
move_cars     Starting var:.. i = 7
move_cars     Starting var:.. j = 4
move_cars     Starting var:.. t = 119
move_cars     Starting var:.. t_tmp = 140
move_cars     Starting var:.. can_contract = -1
move_cars     13:47:47.958194 call       388     def move_cars(
move_cars     13:47:47.962183 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:47:47.963179 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:47:47.965175 line       399         return available_vhecles
move_cars     13:47:47.966204 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute 13:47:47.970162 line       579                                 success += can_contract
excute Modified var:.. success = 47
excute 13:47:47.975149 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 0)
excute 13:47:47.979139 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:47:47.983141 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:47.987145 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:47.990140 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:47:47.994130 line       556                     i = i_j[0]
excute 13:47:47.998087 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:48.001109 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.005067 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:47:48.009056 line       556                     i = i_j[0]
excute 13:47:48.012079 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:48.016070 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.020028 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 0)
excute 13:47:48.023053 line       556                     i = i_j[0]
excute 13:47:48.027040 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:48.030032 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.033991 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 0)
excute 13:47:48.037013 line       556                     i = i_j[0]
excute 13:47:48.040972 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:48.044000 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.047953 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:47:48.050975 line       556                     i = i_j[0]
excute 13:47:48.055964 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:48.058925 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.063912 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:47:48.067900 line       556                     i = i_j[0]
excute 13:47:48.071890 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:48.075879 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.079869 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 0, 0)
excute 13:47:48.083858 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:47:48.087848 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:48.091836 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.095827 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 0, 0)
excute 13:47:48.099821 line       556                     i = i_j[0]
excute 13:47:48.103805 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:48.108792 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.112779 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 0, 0)
excute 13:47:48.116770 line       556                     i = i_j[0]
excute 13:47:48.120760 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:48.124779 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.128769 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 0, 0)
excute 13:47:48.132727 line       556                     i = i_j[0]
excute 13:47:48.137714 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:48.141704 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.145691 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 0, 0)
excute 13:47:48.149683 line       556                     i = i_j[0]
excute 13:47:48.153670 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:48.157661 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.162647 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 0, 0)
excute 13:47:48.169629 line       556                     i = i_j[0]
excute 13:47:48.176610 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:48.183591 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.188578 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 0, 0)
excute 13:47:48.195559 line       556                     i = i_j[0]
excute 13:47:48.203537 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:48.210521 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.214508 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 0, 0)
excute 13:47:48.224894 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:47:48.229884 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:48.233874 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.237864 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 0, 0)
excute 13:47:48.244844 line       556                     i = i_j[0]
excute 13:47:48.250827 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:48.255815 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.259805 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 0, 0)
excute 13:47:48.263795 line       556                     i = i_j[0]
excute 13:47:48.267784 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:48.270775 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.275761 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 0, 0)
excute 13:47:48.279751 line       556                     i = i_j[0]
excute 13:47:48.283740 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:48.287729 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.291719 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 0, 0)
excute 13:47:48.295709 line       556                     i = i_j[0]
excute 13:47:48.299707 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:48.303688 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.307677 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 0, 0)
excute 13:47:48.310668 line       556                     i = i_j[0]
excute 13:47:48.314657 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:48.318647 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.322637 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 0, 0)
excute 13:47:48.327623 line       556                     i = i_j[0]
excute 13:47:48.336599 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:48.340589 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.344579 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 0, 0)
excute 13:47:48.347570 line       556                     i = i_j[0]
excute 13:47:48.352555 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:48.356545 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.360537 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 0, 0)
excute 13:47:48.363527 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:47:48.368514 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:48.372504 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.376491 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 0, 0)
excute 13:47:48.379485 line       556                     i = i_j[0]
excute 13:47:48.385470 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:48.389456 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.393446 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 0, 0)
excute 13:47:48.397435 line       556                     i = i_j[0]
excute 13:47:48.401432 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:48.404416 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.408407 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 0, 0)
excute 13:47:48.411398 line       556                     i = i_j[0]
excute 13:47:48.415389 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:48.419376 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.422369 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 0, 0)
excute 13:47:48.426358 line       556                     i = i_j[0]
excute 13:47:48.430364 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:48.433340 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.437328 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 0, 0)
excute 13:47:48.440351 line       556                     i = i_j[0]
excute 13:47:48.444343 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:48.448298 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.452324 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 0, 0)
excute 13:47:48.456312 line       556                     i = i_j[0]
excute 13:47:48.460269 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:48.463293 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.467282 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 0, 0)
excute 13:47:48.471237 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:47:48.474231 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:48.479219 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.484207 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 0, 0)
excute 13:47:48.487229 line       556                     i = i_j[0]
excute 13:47:48.491191 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:48.494207 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.498197 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 0, 0)
excute 13:47:48.502155 line       556                     i = i_j[0]
excute 13:47:48.506146 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:48.511133 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.516119 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 0, 0)
excute 13:47:48.520106 line       556                     i = i_j[0]
excute 13:47:48.525093 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:48.529083 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.535068 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 0, 0)
excute 13:47:48.539060 line       556                     i = i_j[0]
excute 13:47:48.543080 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:48.547066 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.551038 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 0, 0)
excute 13:47:48.554049 line       556                     i = i_j[0]
excute 13:47:48.559006 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:48.563990 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.567980 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 0, 0)
excute 13:47:48.571982 line       556                     i = i_j[0]
excute 13:47:48.575971 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:48.580059 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.584934 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 0, 0)
excute 13:47:48.589954 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:47:48.593912 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:48.598897 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.603884 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 0, 0)
excute 13:47:48.606903 line       556                     i = i_j[0]
excute 13:47:48.610897 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:48.614888 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.618843 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 0, 0)
excute 13:47:48.621868 line       556                     i = i_j[0]
excute 13:47:48.625858 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:48.628816 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.633804 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 0, 0)
excute 13:47:48.637792 line       556                     i = i_j[0]
excute 13:47:48.641781 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:48.648763 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.652754 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 0, 0)
excute 13:47:48.656741 line       556                     i = i_j[0]
excute 13:47:48.660732 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:48.665719 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.669708 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 0, 0)
excute 13:47:48.672730 line       556                     i = i_j[0]
excute 13:47:48.676690 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:48.679712 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.683670 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 0, 0)
excute 13:47:48.686696 line       556                     i = i_j[0]
excute 13:47:48.692646 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:48.696636 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.700656 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 0, 0)
excute 13:47:48.704615 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:47:48.708635 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:48.713590 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.716614 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 0, 0)
excute 13:47:48.720605 line       556                     i = i_j[0]
excute 13:47:48.724593 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:48.728550 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.732539 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 0, 0)
excute 13:47:48.736530 line       556                     i = i_j[0]
excute 13:47:48.742512 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:48.746501 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.750491 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 0, 0)
excute 13:47:48.755480 line       556                     i = i_j[0]
excute 13:47:48.759468 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:48.763490 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.767479 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 0, 0)
excute 13:47:48.770469 line       556                     i = i_j[0]
excute 13:47:48.774428 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:48.777452 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.781439 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 0, 0)
excute 13:47:48.785398 line       556                     i = i_j[0]
excute 13:47:48.788421 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:48.793377 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.797367 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 0, 0)
excute 13:47:48.800359 line       556                     i = i_j[0]
excute 13:47:48.804347 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:48.808338 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.812328 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 0, 0)
excute 13:47:48.815349 line       556                     i = i_j[0]
excute 13:47:48.819308 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:48.823296 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.827287 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 1)
excute 13:47:48.830312 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:47:48.834268 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:48.838257 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.842246 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 126
excute 13:47:48.845269 line       560                         if (t_tmp > self.TIME):
excute 13:47:48.849260 line       563                             if (available_vhecles[i][t] == 0):
excute 13:47:48.852250 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:47:48.856229 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 151
excute 13:47:48.859233 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:47:48.863196 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 0, 1)
excute 13:47:48.866213 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:47:48.870172 line       557                     j = i_j[1]
excute 13:47:48.874194 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.877187 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 0, 1)
excute 13:47:48.880176 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:47:48.884134 line       557                     j = i_j[1]
excute 13:47:48.889122 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.893110 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 0, 1)
excute 13:47:48.897099 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:47:48.902088 line       557                     j = i_j[1]
excute 13:47:48.906078 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.910065 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 0, 1)
excute 13:47:48.913057 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:47:48.917047 line       557                     j = i_j[1]
excute 13:47:48.921036 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.925026 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 0, 1)
excute 13:47:48.929014 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:47:48.932007 line       557                     j = i_j[1]
excute 13:47:48.936993 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.939986 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 2)
excute 13:47:48.943975 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:47:48.948962 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:48.953950 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:48.957939 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 130
excute 13:47:48.960930 line       560                         if (t_tmp > self.TIME):
excute 13:47:48.968907 line       563                             if (available_vhecles[i][t] == 0):
excute 13:47:48.971931 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:47:48.975920 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:47:48.978915 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:47:48.982906 line       569                                     available_vhecles[i][t],
excute 13:47:48.986860 line       570                                     available_vhecles[j][t_tmp],
excute 13:47:48.990849 line       571                                     self.S_capacities[j],
excute 13:47:48.993843 line       572                                     demands[t][i][j],
excute 13:47:48.999824 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 2
calc_contract     Starting var:.. available_vhecles_target = 4
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 119
calc_contract     13:47:49.003815 call       352     def caluculate_contract(
calc_contract     13:47:49.006815 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:47:49.007804 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:47:49.008801 line       362         if (available_vhecles_start >= demand):
calc_contract     13:47:49.009811 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:47:49.009811 line       369                 can_contract = capacity_target - available_vhecles_target
calc_contract     New var:....... can_contract = -1
calc_contract     13:47:49.010797 line       370                 rsf += (available_vhecles_target + demand - capacity_target)
calc_contract     Modified var:.. rsf = 2
calc_contract     13:47:49.011793 line       385         return [can_contract, rsf, rse]
calc_contract     13:47:49.012790 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [-1, 2, 0]
excute 13:47:49.013789 line       575                                 rsf += rsf_tmp
excute Modified var:.. rsf = 153
excute 13:47:49.016778 line       576                                 rse += rse_tmp
excute 13:47:49.020769 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
move_cars     Starting var:.. i = 0
move_cars     Starting var:.. j = 4
move_cars     Starting var:.. t = 119
move_cars     Starting var:.. t_tmp = 130
move_cars     Starting var:.. can_contract = -1
move_cars     13:47:49.024760 call       388     def move_cars(
move_cars     13:47:49.028761 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
move_cars     13:47:49.029746 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:47:49.031742 line       399         return available_vhecles
move_cars     13:47:49.032738 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute 13:47:49.034733 line       579                                 success += can_contract
excute Modified var:.. success = 46
excute 13:47:49.038722 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 0, 2)
excute 13:47:49.042711 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:47:49.046699 line       557                     j = i_j[1]
excute 13:47:49.049692 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:49.053696 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 0, 2)
excute 13:47:49.056703 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:47:49.060666 line       557                     j = i_j[1]
excute 13:47:49.064653 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:49.067674 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 0, 2)
excute 13:47:49.071665 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:47:49.075623 line       557                     j = i_j[1]
excute 13:47:49.079611 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:49.082637 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 0, 2)
excute 13:47:49.085629 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:47:49.089584 line       557                     j = i_j[1]
excute 13:47:49.093575 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:49.096596 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 0, 2)
excute 13:47:49.101552 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:47:49.106540 line       557                     j = i_j[1]
excute 13:47:49.109533 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:49.113520 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 1, 0)
excute 13:47:49.116515 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:47:49.120511 line       557                     j = i_j[1]
excute Modified var:.. j = 0