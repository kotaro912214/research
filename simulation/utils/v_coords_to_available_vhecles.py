import numpy as np

cars_tmp = [
    [39.840, 54.506],
    [39.840, 54.506],
    [39.840, 54.506],
    [53.334, 53.942],
    [39.840, 54.506],
    [39.840, 54.506],
    [39.840, 54.506],
    [39.840, 54.506],
    [39.840, 54.506],
    [39.840, 54.506],
    [60.159, 45.493],
    [60.159, 45.493],
    [60.159, 45.493],
    [60.159, 45.493],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [39.840, 54.506],
    [39.840, 54.506],
    [39.840, 54.506],
    [39.840, 54.506],
    [60.159, 45.493],
    [53.334, 53.942],
    [53.334, 53.942],
    [39.840, 54.506],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [39.840, 54.506],
    [39.840, 54.506],
    [39.840, 54.506],
    [39.840, 54.506],
    [39.840, 54.506],
    [53.334, 53.942],
    [53.334, 53.942],
    [60.159, 45.493],
    [60.159, 45.493],
    [60.159, 45.493],
    [39.840, 54.506],
    [39.840, 54.506],
    [39.840, 54.506],
    [60.159, 45.493],
    [60.159, 45.493],
    [60.159, 45.493],
    [60.159, 45.493],
    [60.159, 45.493],
    [60.159, 45.493],
    [60.159, 45.493],
    [60.159, 45.493],
    [60.159, 45.493],
    [60.159, 45.493],
    [39.840, 54.506],
    [39.840, 54.506],
    [39.840, 54.506],
    [60.159, 45.493],
    [60.159, 45.493],
    [60.159, 45.493],
    [60.159, 45.493],
    [60.159, 45.493],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [39.840, 54.506],
    [39.840, 54.506],
    [39.840, 54.506],
    [39.840, 54.506],
    [39.840, 54.506],
    [39.840, 54.506],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [39.840, 54.506],
    [39.840, 54.506],
    [39.840, 54.506],
    [53.334, 53.942],
    [39.840, 54.506],
    [39.840, 54.506],
    [39.840, 54.506],
    [39.840, 54.506],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [39.840, 54.506],
    [39.840, 54.506],
    [39.840, 54.506],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [60.159, 45.493],
    [60.159, 45.493],
    [60.159, 45.493],
    [60.159, 45.493],
    [60.159, 45.493],
    [39.840, 54.506],
    [39.840, 54.506],
    [39.840, 54.506],
    [39.840, 54.506],
    [39.840, 54.506],
    [39.840, 54.506],
    [39.840, 54.506],
    [60.159, 45.493],
    [60.159, 45.493],
    [60.159, 45.493],
    [60.159, 45.493],
    [60.159, 45.493],
    [60.159, 45.493],
    [60.159, 45.493],
    [60.159, 45.493],
    [60.159, 45.493],
    [60.159, 45.493],
    [60.159, 45.493],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [60.159, 45.493],
    [60.159, 45.493],
    [60.159, 45.493],
    [60.159, 45.493],
    [60.159, 45.493],
    [60.159, 45.493],
    [60.159, 45.493],
    [60.159, 45.493],
    [60.159, 45.493],
    [60.159, 45.493],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942],
    [53.334, 53.942]
]
cars = [None] * 6
for i in range(6):
    cars[i] = cars_tmp[31 * i: 31 * (i + 1)]

# print(1, 20, cars[1][20])
# print(2, 10, cars[2][10])
# print(3, 17, cars[3][17])
# print(3, 27, cars[3][27])

for i in range(6):
    for t in range(31):
        if (cars[i][t] == [39.840, 54.506]):
            cars[i][t] = 0
        elif (cars[i][t] == [53.334, 53.942]):
            cars[i][t] = 1
        elif (cars[i][t] == [60.159, 45.493]):
            cars[i][t] = 2
        else:
            print(cars[i][t])
            cars[i][t] = 2

available_vhecles = np.zeros((3, 31), dtype='int')
for i in range(6):
    for t in range(31):
        available_vhecles[cars[i][t]][t] += 1

print(available_vhecles)
# [0, 0, 0, 1, 0, 0, 0, 2, 2, 0, 0, 0, 2, 2, 1, 1, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0, 1, 1, 1, 0]
# [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 1]
# [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1]
# [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]
# [2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
